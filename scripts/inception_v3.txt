def @main(%data: Tensor[(1024, 3, 299, 299), float32] /* ty=Tensor[(1024, 3, 299, 299), float32] */, %conv_conv1_weight: Tensor[(32, 3, 3, 3), float32] /* ty=Tensor[(32, 3, 3, 3), float32] */, %conv_bn_gamma: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_bn_beta: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_bn_moving_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_bn_moving_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_1_conv1_weight: Tensor[(32, 32, 3, 3), float32] /* ty=Tensor[(32, 32, 3, 3), float32] */, %conv_1_bn_gamma: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_1_bn_beta: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_1_bn_moving_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_1_bn_moving_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %conv_2_conv1_weight: Tensor[(64, 32, 3, 3), float32] /* ty=Tensor[(64, 32, 3, 3), float32] */, %conv_2_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %conv_2_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %conv_2_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %conv_2_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %conv_3_conv1_weight: Tensor[(80, 64, 1, 1), float32] /* ty=Tensor[(80, 64, 1, 1), float32] */, %conv_3_bn_gamma: Tensor[(80), float32] /* ty=Tensor[(80), float32] */, %conv_3_bn_beta: Tensor[(80), float32] /* ty=Tensor[(80), float32] */, %conv_3_bn_moving_mean: Tensor[(80), float32] /* ty=Tensor[(80), float32] */, %conv_3_bn_moving_var: Tensor[(80), float32] /* ty=Tensor[(80), float32] */, %conv_4_conv1_weight: Tensor[(192, 80, 3, 3), float32] /* ty=Tensor[(192, 80, 3, 3), float32] */, %conv_4_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %conv_4_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %conv_4_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %conv_4_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_conv_conv1_weight: Tensor[(64, 192, 1, 1), float32] /* ty=Tensor[(64, 192, 1, 1), float32] */, %mixed_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_conv_conv1_weight: Tensor[(48, 192, 1, 1), float32] /* ty=Tensor[(48, 192, 1, 1), float32] */, %mixed_tower_conv_bn_gamma: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_tower_conv_bn_beta: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_tower_conv_bn_moving_mean: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_tower_conv_bn_moving_var: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_tower_conv_1_conv1_weight: Tensor[(64, 48, 5, 5), float32] /* ty=Tensor[(64, 48, 5, 5), float32] */, %mixed_tower_conv_1_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_conv_1_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_conv_1_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_conv_1_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_1_conv_conv1_weight: Tensor[(64, 192, 1, 1), float32] /* ty=Tensor[(64, 192, 1, 1), float32] */, %mixed_tower_1_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_1_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_1_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_1_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_tower_1_conv_1_conv1_weight: Tensor[(96, 64, 3, 3), float32] /* ty=Tensor[(96, 64, 3, 3), float32] */, %mixed_tower_1_conv_1_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_1_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_1_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_1_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_2_conv1_weight: Tensor[(96, 96, 3, 3), float32] /* ty=Tensor[(96, 96, 3, 3), float32] */, %mixed_tower_1_conv_2_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_2_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_2_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_1_conv_2_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_tower_2_conv_conv1_weight: Tensor[(32, 192, 1, 1), float32] /* ty=Tensor[(32, 192, 1, 1), float32] */, %mixed_tower_2_conv_bn_gamma: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %mixed_tower_2_conv_bn_beta: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %mixed_tower_2_conv_bn_moving_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %mixed_tower_2_conv_bn_moving_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %mixed_1_conv_conv1_weight: Tensor[(64, 256, 1, 1), float32] /* ty=Tensor[(64, 256, 1, 1), float32] */, %mixed_1_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_conv_conv1_weight: Tensor[(48, 256, 1, 1), float32] /* ty=Tensor[(48, 256, 1, 1), float32] */, %mixed_1_tower_conv_bn_gamma: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_1_tower_conv_bn_beta: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_1_tower_conv_bn_moving_mean: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_1_tower_conv_bn_moving_var: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_1_tower_conv_1_conv1_weight: Tensor[(64, 48, 5, 5), float32] /* ty=Tensor[(64, 48, 5, 5), float32] */, %mixed_1_tower_conv_1_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_conv_1_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_conv_1_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_conv_1_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_1_conv_conv1_weight: Tensor[(64, 256, 1, 1), float32] /* ty=Tensor[(64, 256, 1, 1), float32] */, %mixed_1_tower_1_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_1_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_1_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_1_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_1_conv_1_conv1_weight: Tensor[(96, 64, 3, 3), float32] /* ty=Tensor[(96, 64, 3, 3), float32] */, %mixed_1_tower_1_conv_1_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_1_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_1_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_1_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_2_conv1_weight: Tensor[(96, 96, 3, 3), float32] /* ty=Tensor[(96, 96, 3, 3), float32] */, %mixed_1_tower_1_conv_2_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_2_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_2_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_1_conv_2_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_1_tower_2_conv_conv1_weight: Tensor[(64, 256, 1, 1), float32] /* ty=Tensor[(64, 256, 1, 1), float32] */, %mixed_1_tower_2_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_2_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_2_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_1_tower_2_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_conv_conv1_weight: Tensor[(64, 288, 1, 1), float32] /* ty=Tensor[(64, 288, 1, 1), float32] */, %mixed_2_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_conv_conv1_weight: Tensor[(48, 288, 1, 1), float32] /* ty=Tensor[(48, 288, 1, 1), float32] */, %mixed_2_tower_conv_bn_gamma: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_2_tower_conv_bn_beta: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_2_tower_conv_bn_moving_mean: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_2_tower_conv_bn_moving_var: Tensor[(48), float32] /* ty=Tensor[(48), float32] */, %mixed_2_tower_conv_1_conv1_weight: Tensor[(64, 48, 5, 5), float32] /* ty=Tensor[(64, 48, 5, 5), float32] */, %mixed_2_tower_conv_1_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_conv_1_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_conv_1_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_conv_1_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_1_conv_conv1_weight: Tensor[(64, 288, 1, 1), float32] /* ty=Tensor[(64, 288, 1, 1), float32] */, %mixed_2_tower_1_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_1_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_1_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_1_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_1_conv_1_conv1_weight: Tensor[(96, 64, 3, 3), float32] /* ty=Tensor[(96, 64, 3, 3), float32] */, %mixed_2_tower_1_conv_1_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_1_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_1_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_1_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_2_conv1_weight: Tensor[(96, 96, 3, 3), float32] /* ty=Tensor[(96, 96, 3, 3), float32] */, %mixed_2_tower_1_conv_2_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_2_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_2_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_1_conv_2_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_2_tower_2_conv_conv1_weight: Tensor[(64, 288, 1, 1), float32] /* ty=Tensor[(64, 288, 1, 1), float32] */, %mixed_2_tower_2_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_2_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_2_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_2_tower_2_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_3_conv_conv1_weight: Tensor[(384, 288, 3, 3), float32] /* ty=Tensor[(384, 288, 3, 3), float32] */, %mixed_3_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_3_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_3_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_3_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_3_tower_conv_conv1_weight: Tensor[(64, 288, 1, 1), float32] /* ty=Tensor[(64, 288, 1, 1), float32] */, %mixed_3_tower_conv_bn_gamma: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_3_tower_conv_bn_beta: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_3_tower_conv_bn_moving_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_3_tower_conv_bn_moving_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %mixed_3_tower_conv_1_conv1_weight: Tensor[(96, 64, 3, 3), float32] /* ty=Tensor[(96, 64, 3, 3), float32] */, %mixed_3_tower_conv_1_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_1_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_1_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_1_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_2_conv1_weight: Tensor[(96, 96, 3, 3), float32] /* ty=Tensor[(96, 96, 3, 3), float32] */, %mixed_3_tower_conv_2_bn_gamma: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_2_bn_beta: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_2_bn_moving_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_3_tower_conv_2_bn_moving_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %mixed_4_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_4_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_conv_conv1_weight: Tensor[(128, 768, 1, 1), float32] /* ty=Tensor[(128, 768, 1, 1), float32] */, %mixed_4_tower_conv_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_1_conv1_weight: Tensor[(128, 128, 1, 7), float32] /* ty=Tensor[(128, 128, 1, 7), float32] */, %mixed_4_tower_conv_1_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_1_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_1_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_1_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_conv_2_conv1_weight: Tensor[(192, 128, 7, 1), float32] /* ty=Tensor[(192, 128, 7, 1), float32] */, %mixed_4_tower_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_1_conv_conv1_weight: Tensor[(128, 768, 1, 1), float32] /* ty=Tensor[(128, 768, 1, 1), float32] */, %mixed_4_tower_1_conv_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_1_conv1_weight: Tensor[(128, 128, 7, 1), float32] /* ty=Tensor[(128, 128, 7, 1), float32] */, %mixed_4_tower_1_conv_1_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_1_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_1_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_1_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_2_conv1_weight: Tensor[(128, 128, 1, 7), float32] /* ty=Tensor[(128, 128, 1, 7), float32] */, %mixed_4_tower_1_conv_2_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_2_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_2_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_2_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_3_conv1_weight: Tensor[(128, 128, 7, 1), float32] /* ty=Tensor[(128, 128, 7, 1), float32] */, %mixed_4_tower_1_conv_3_bn_gamma: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_3_bn_beta: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_3_bn_moving_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_3_bn_moving_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] */, %mixed_4_tower_1_conv_4_conv1_weight: Tensor[(192, 128, 1, 7), float32] /* ty=Tensor[(192, 128, 1, 7), float32] */, %mixed_4_tower_1_conv_4_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_1_conv_4_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_1_conv_4_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_1_conv_4_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_2_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_4_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_4_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_5_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_conv_conv1_weight: Tensor[(160, 768, 1, 1), float32] /* ty=Tensor[(160, 768, 1, 1), float32] */, %mixed_5_tower_conv_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_1_conv1_weight: Tensor[(160, 160, 1, 7), float32] /* ty=Tensor[(160, 160, 1, 7), float32] */, %mixed_5_tower_conv_1_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_1_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_1_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_1_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_conv_2_conv1_weight: Tensor[(192, 160, 7, 1), float32] /* ty=Tensor[(192, 160, 7, 1), float32] */, %mixed_5_tower_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_1_conv_conv1_weight: Tensor[(160, 768, 1, 1), float32] /* ty=Tensor[(160, 768, 1, 1), float32] */, %mixed_5_tower_1_conv_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_1_conv1_weight: Tensor[(160, 160, 7, 1), float32] /* ty=Tensor[(160, 160, 7, 1), float32] */, %mixed_5_tower_1_conv_1_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_1_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_1_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_1_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_2_conv1_weight: Tensor[(160, 160, 1, 7), float32] /* ty=Tensor[(160, 160, 1, 7), float32] */, %mixed_5_tower_1_conv_2_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_2_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_2_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_2_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_3_conv1_weight: Tensor[(160, 160, 7, 1), float32] /* ty=Tensor[(160, 160, 7, 1), float32] */, %mixed_5_tower_1_conv_3_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_3_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_3_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_3_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_5_tower_1_conv_4_conv1_weight: Tensor[(192, 160, 1, 7), float32] /* ty=Tensor[(192, 160, 1, 7), float32] */, %mixed_5_tower_1_conv_4_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_1_conv_4_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_1_conv_4_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_1_conv_4_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_2_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_5_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_5_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_6_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_conv_conv1_weight: Tensor[(160, 768, 1, 1), float32] /* ty=Tensor[(160, 768, 1, 1), float32] */, %mixed_6_tower_conv_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_1_conv1_weight: Tensor[(160, 160, 1, 7), float32] /* ty=Tensor[(160, 160, 1, 7), float32] */, %mixed_6_tower_conv_1_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_1_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_1_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_1_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_conv_2_conv1_weight: Tensor[(192, 160, 7, 1), float32] /* ty=Tensor[(192, 160, 7, 1), float32] */, %mixed_6_tower_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_1_conv_conv1_weight: Tensor[(160, 768, 1, 1), float32] /* ty=Tensor[(160, 768, 1, 1), float32] */, %mixed_6_tower_1_conv_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_1_conv1_weight: Tensor[(160, 160, 7, 1), float32] /* ty=Tensor[(160, 160, 7, 1), float32] */, %mixed_6_tower_1_conv_1_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_1_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_1_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_1_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_2_conv1_weight: Tensor[(160, 160, 1, 7), float32] /* ty=Tensor[(160, 160, 1, 7), float32] */, %mixed_6_tower_1_conv_2_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_2_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_2_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_2_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_3_conv1_weight: Tensor[(160, 160, 7, 1), float32] /* ty=Tensor[(160, 160, 7, 1), float32] */, %mixed_6_tower_1_conv_3_bn_gamma: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_3_bn_beta: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_3_bn_moving_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_3_bn_moving_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %mixed_6_tower_1_conv_4_conv1_weight: Tensor[(192, 160, 1, 7), float32] /* ty=Tensor[(192, 160, 1, 7), float32] */, %mixed_6_tower_1_conv_4_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_1_conv_4_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_1_conv_4_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_1_conv_4_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_2_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_6_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_6_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_7_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_7_tower_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_1_conv1_weight: Tensor[(192, 192, 1, 7), float32] /* ty=Tensor[(192, 192, 1, 7), float32] */, %mixed_7_tower_conv_1_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_1_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_1_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_1_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_2_conv1_weight: Tensor[(192, 192, 7, 1), float32] /* ty=Tensor[(192, 192, 7, 1), float32] */, %mixed_7_tower_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_7_tower_1_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_1_conv1_weight: Tensor[(192, 192, 7, 1), float32] /* ty=Tensor[(192, 192, 7, 1), float32] */, %mixed_7_tower_1_conv_1_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_1_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_1_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_1_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_2_conv1_weight: Tensor[(192, 192, 1, 7), float32] /* ty=Tensor[(192, 192, 1, 7), float32] */, %mixed_7_tower_1_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_3_conv1_weight: Tensor[(192, 192, 7, 1), float32] /* ty=Tensor[(192, 192, 7, 1), float32] */, %mixed_7_tower_1_conv_3_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_3_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_3_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_3_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_4_conv1_weight: Tensor[(192, 192, 1, 7), float32] /* ty=Tensor[(192, 192, 1, 7), float32] */, %mixed_7_tower_1_conv_4_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_4_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_4_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_1_conv_4_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_2_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_7_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_7_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_8_tower_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_conv_1_conv1_weight: Tensor[(320, 192, 3, 3), float32] /* ty=Tensor[(320, 192, 3, 3), float32] */, %mixed_8_tower_conv_1_bn_gamma: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_8_tower_conv_1_bn_beta: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_8_tower_conv_1_bn_moving_mean: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_8_tower_conv_1_bn_moving_var: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_8_tower_1_conv_conv1_weight: Tensor[(192, 768, 1, 1), float32] /* ty=Tensor[(192, 768, 1, 1), float32] */, %mixed_8_tower_1_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_1_conv1_weight: Tensor[(192, 192, 1, 7), float32] /* ty=Tensor[(192, 192, 1, 7), float32] */, %mixed_8_tower_1_conv_1_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_1_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_1_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_1_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_2_conv1_weight: Tensor[(192, 192, 7, 1), float32] /* ty=Tensor[(192, 192, 7, 1), float32] */, %mixed_8_tower_1_conv_2_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_2_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_2_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_2_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_3_conv1_weight: Tensor[(192, 192, 3, 3), float32] /* ty=Tensor[(192, 192, 3, 3), float32] */, %mixed_8_tower_1_conv_3_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_3_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_3_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_8_tower_1_conv_3_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_9_conv_conv1_weight: Tensor[(320, 1280, 1, 1), float32] /* ty=Tensor[(320, 1280, 1, 1), float32] */, %mixed_9_conv_bn_gamma: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_9_conv_bn_beta: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_9_conv_bn_moving_mean: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_9_conv_bn_moving_var: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_9_tower_conv_conv1_weight: Tensor[(384, 1280, 1, 1), float32] /* ty=Tensor[(384, 1280, 1, 1), float32] */, %mixed_9_tower_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_conv1_weight: Tensor[(384, 384, 1, 3), float32] /* ty=Tensor[(384, 384, 1, 3), float32] */, %mixed_9_tower_mixed_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_1_conv1_weight: Tensor[(384, 384, 3, 1), float32] /* ty=Tensor[(384, 384, 3, 1), float32] */, %mixed_9_tower_mixed_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_mixed_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_conv_conv1_weight: Tensor[(448, 1280, 1, 1), float32] /* ty=Tensor[(448, 1280, 1, 1), float32] */, %mixed_9_tower_1_conv_bn_gamma: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_9_tower_1_conv_bn_beta: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_9_tower_1_conv_bn_moving_mean: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_9_tower_1_conv_bn_moving_var: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_9_tower_1_conv_1_conv1_weight: Tensor[(384, 448, 3, 3), float32] /* ty=Tensor[(384, 448, 3, 3), float32] */, %mixed_9_tower_1_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_conv1_weight: Tensor[(384, 384, 1, 3), float32] /* ty=Tensor[(384, 384, 1, 3), float32] */, %mixed_9_tower_1_mixed_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_1_conv1_weight: Tensor[(384, 384, 3, 1), float32] /* ty=Tensor[(384, 384, 3, 1), float32] */, %mixed_9_tower_1_mixed_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_1_mixed_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_9_tower_2_conv_conv1_weight: Tensor[(192, 1280, 1, 1), float32] /* ty=Tensor[(192, 1280, 1, 1), float32] */, %mixed_9_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_9_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_9_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_9_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_10_conv_conv1_weight: Tensor[(320, 2048, 1, 1), float32] /* ty=Tensor[(320, 2048, 1, 1), float32] */, %mixed_10_conv_bn_gamma: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_10_conv_bn_beta: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_10_conv_bn_moving_mean: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_10_conv_bn_moving_var: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %mixed_10_tower_conv_conv1_weight: Tensor[(384, 2048, 1, 1), float32] /* ty=Tensor[(384, 2048, 1, 1), float32] */, %mixed_10_tower_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_conv1_weight: Tensor[(384, 384, 1, 3), float32] /* ty=Tensor[(384, 384, 1, 3), float32] */, %mixed_10_tower_mixed_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_1_conv1_weight: Tensor[(384, 384, 3, 1), float32] /* ty=Tensor[(384, 384, 3, 1), float32] */, %mixed_10_tower_mixed_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_mixed_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_conv_conv1_weight: Tensor[(448, 2048, 1, 1), float32] /* ty=Tensor[(448, 2048, 1, 1), float32] */, %mixed_10_tower_1_conv_bn_gamma: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_10_tower_1_conv_bn_beta: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_10_tower_1_conv_bn_moving_mean: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_10_tower_1_conv_bn_moving_var: Tensor[(448), float32] /* ty=Tensor[(448), float32] */, %mixed_10_tower_1_conv_1_conv1_weight: Tensor[(384, 448, 3, 3), float32] /* ty=Tensor[(384, 448, 3, 3), float32] */, %mixed_10_tower_1_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_conv1_weight: Tensor[(384, 384, 1, 3), float32] /* ty=Tensor[(384, 384, 1, 3), float32] */, %mixed_10_tower_1_mixed_conv_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_1_conv1_weight: Tensor[(384, 384, 3, 1), float32] /* ty=Tensor[(384, 384, 3, 1), float32] */, %mixed_10_tower_1_mixed_conv_1_bn_gamma: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_1_bn_beta: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_1_bn_moving_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_1_mixed_conv_1_bn_moving_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %mixed_10_tower_2_conv_conv1_weight: Tensor[(192, 2048, 1, 1), float32] /* ty=Tensor[(192, 2048, 1, 1), float32] */, %mixed_10_tower_2_conv_bn_gamma: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_10_tower_2_conv_bn_beta: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_10_tower_2_conv_bn_moving_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %mixed_10_tower_2_conv_bn_moving_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %fc1_weight: Tensor[(1000, 2048), float32] /* ty=Tensor[(1000, 2048), float32] */, %fc2_bias: Tensor[(1000), float32] /* ty=Tensor[(1000), float32] */) -> Tensor[(1024, 1000), float32] {
  
  %20 = nn.relu(%19) /* ty=Tensor[(1024, 192, 71, 71), float32] */;
  %21 = nn.max_pool2d(%20, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1024, 192, 35, 35), float32] */;

  %22 = nn.conv2d(%21, %mixed_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %23 = nn.batch_norm(%22, %mixed_conv_bn_gamma, %mixed_conv_bn_beta, %mixed_conv_bn_moving_mean, %mixed_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %24 = %23.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %25 = nn.conv2d(%21, %mixed_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1]) /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %26 = nn.batch_norm(%25, %mixed_tower_conv_bn_gamma, %mixed_tower_conv_bn_beta, %mixed_tower_conv_bn_moving_mean, %mixed_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 48, 35, 35), float32], Tensor[(48), float32], Tensor[(48), float32]) */;
  %27 = %26.0 /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %28 = nn.relu(%27) /* ty=Tensor[(1024, 48, 35, 35), float32] */;

  %29 = nn.conv2d(%28, %mixed_tower_conv_1_conv1_weight, padding=[2, 2, 2, 2], channels=64, kernel_size=[5, 5]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %30 = nn.batch_norm(%29, %mixed_tower_conv_1_bn_gamma, %mixed_tower_conv_1_bn_beta, %mixed_tower_conv_1_bn_moving_mean, %mixed_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %31 = %30.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %32 = nn.conv2d(%21, %mixed_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %33 = nn.batch_norm(%32, %mixed_tower_1_conv_bn_gamma, %mixed_tower_1_conv_bn_beta, %mixed_tower_1_conv_bn_moving_mean, %mixed_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %34 = %33.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %35 = nn.relu(%34) /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %36 = nn.conv2d(%35, %mixed_tower_1_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %37 = nn.batch_norm(%36, %mixed_tower_1_conv_1_bn_gamma, %mixed_tower_1_conv_1_bn_beta, %mixed_tower_1_conv_1_bn_moving_mean, %mixed_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %38 = %37.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %39 = nn.relu(%38) /* ty=Tensor[(1024, 96, 35, 35), float32] */;

  %40 = nn.conv2d(%39, %mixed_tower_1_conv_2_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %41 = nn.batch_norm(%40, %mixed_tower_1_conv_2_bn_gamma, %mixed_tower_1_conv_2_bn_beta, %mixed_tower_1_conv_2_bn_moving_mean, %mixed_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %42 = %41.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %43 = nn.avg_pool2d(%21, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 192, 35, 35), float32] */;

  %44 = nn.conv2d(%43, %mixed_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1024, 32, 35, 35), float32] */;
  %45 = nn.batch_norm(%44, %mixed_tower_2_conv_bn_gamma, %mixed_tower_2_conv_bn_beta, %mixed_tower_2_conv_bn_moving_mean, %mixed_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 32, 35, 35), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %46 = %45.0 /* ty=Tensor[(1024, 32, 35, 35), float32] */;
  %47 = nn.relu(%24) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %48 = nn.relu(%31) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %49 = nn.relu(%42) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %50 = nn.relu(%46) /* ty=Tensor[(1024, 32, 35, 35), float32] */;
  %51 = (%47, %48, %49, %50) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 96, 35, 35), float32], Tensor[(1024, 32, 35, 35), float32]) */;
  %52 = concatenate(%51, axis=1) /* ty=Tensor[(1024, 256, 35, 35), float32] */;

  %53 = nn.conv2d(%52, %mixed_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %54 = nn.batch_norm(%53, %mixed_1_conv_bn_gamma, %mixed_1_conv_bn_beta, %mixed_1_conv_bn_moving_mean, %mixed_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %55 = %54.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %56 = nn.conv2d(%52, %mixed_1_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1]) /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %57 = nn.batch_norm(%56, %mixed_1_tower_conv_bn_gamma, %mixed_1_tower_conv_bn_beta, %mixed_1_tower_conv_bn_moving_mean, %mixed_1_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 48, 35, 35), float32], Tensor[(48), float32], Tensor[(48), float32]) */;
  %58 = %57.0 /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %59 = nn.relu(%58) /* ty=Tensor[(1024, 48, 35, 35), float32] */;

  %60 = nn.conv2d(%59, %mixed_1_tower_conv_1_conv1_weight, padding=[2, 2, 2, 2], channels=64, kernel_size=[5, 5]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %61 = nn.batch_norm(%60, %mixed_1_tower_conv_1_bn_gamma, %mixed_1_tower_conv_1_bn_beta, %mixed_1_tower_conv_1_bn_moving_mean, %mixed_1_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %62 = %61.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %63 = nn.conv2d(%52, %mixed_1_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %64 = nn.batch_norm(%63, %mixed_1_tower_1_conv_bn_gamma, %mixed_1_tower_1_conv_bn_beta, %mixed_1_tower_1_conv_bn_moving_mean, %mixed_1_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %65 = %64.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %66 = nn.relu(%65) /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %67 = nn.conv2d(%66, %mixed_1_tower_1_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %68 = nn.batch_norm(%67, %mixed_1_tower_1_conv_1_bn_gamma, %mixed_1_tower_1_conv_1_bn_beta, %mixed_1_tower_1_conv_1_bn_moving_mean, %mixed_1_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %69 = %68.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %70 = nn.relu(%69) /* ty=Tensor[(1024, 96, 35, 35), float32] */;

  %71 = nn.conv2d(%70, %mixed_1_tower_1_conv_2_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %72 = nn.batch_norm(%71, %mixed_1_tower_1_conv_2_bn_gamma, %mixed_1_tower_1_conv_2_bn_beta, %mixed_1_tower_1_conv_2_bn_moving_mean, %mixed_1_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %73 = %72.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %74 = nn.avg_pool2d(%52, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 256, 35, 35), float32] */;

  %75 = nn.conv2d(%74, %mixed_1_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %76 = nn.batch_norm(%75, %mixed_1_tower_2_conv_bn_gamma, %mixed_1_tower_2_conv_bn_beta, %mixed_1_tower_2_conv_bn_moving_mean, %mixed_1_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %77 = %76.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %78 = nn.relu(%55) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %79 = nn.relu(%62) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %80 = nn.relu(%73) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %81 = nn.relu(%77) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %82 = (%78, %79, %80, %81) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 96, 35, 35), float32], Tensor[(1024, 64, 35, 35), float32]) */;
  %83 = concatenate(%82, axis=1) /* ty=Tensor[(1024, 288, 35, 35), float32] */;

  %84 = nn.conv2d(%83, %mixed_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %85 = nn.batch_norm(%84, %mixed_2_conv_bn_gamma, %mixed_2_conv_bn_beta, %mixed_2_conv_bn_moving_mean, %mixed_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %86 = %85.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %87 = nn.conv2d(%83, %mixed_2_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1]) /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %88 = nn.batch_norm(%87, %mixed_2_tower_conv_bn_gamma, %mixed_2_tower_conv_bn_beta, %mixed_2_tower_conv_bn_moving_mean, %mixed_2_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 48, 35, 35), float32], Tensor[(48), float32], Tensor[(48), float32]) */;
  %89 = %88.0 /* ty=Tensor[(1024, 48, 35, 35), float32] */;
  %90 = nn.relu(%89) /* ty=Tensor[(1024, 48, 35, 35), float32] */;

  %91 = nn.conv2d(%90, %mixed_2_tower_conv_1_conv1_weight, padding=[2, 2, 2, 2], channels=64, kernel_size=[5, 5]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %92 = nn.batch_norm(%91, %mixed_2_tower_conv_1_bn_gamma, %mixed_2_tower_conv_1_bn_beta, %mixed_2_tower_conv_1_bn_moving_mean, %mixed_2_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %93 = %92.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %94 = nn.conv2d(%83, %mixed_2_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %95 = nn.batch_norm(%94, %mixed_2_tower_1_conv_bn_gamma, %mixed_2_tower_1_conv_bn_beta, %mixed_2_tower_1_conv_bn_moving_mean, %mixed_2_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %96 = %95.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %97 = nn.relu(%96) /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %98 = nn.conv2d(%97, %mixed_2_tower_1_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %99 = nn.batch_norm(%98, %mixed_2_tower_1_conv_1_bn_gamma, %mixed_2_tower_1_conv_1_bn_beta, %mixed_2_tower_1_conv_1_bn_moving_mean, %mixed_2_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %100 = %99.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %101 = nn.relu(%100) /* ty=Tensor[(1024, 96, 35, 35), float32] */;

  %102 = nn.conv2d(%101, %mixed_2_tower_1_conv_2_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %103 = nn.batch_norm(%102, %mixed_2_tower_1_conv_2_bn_gamma, %mixed_2_tower_1_conv_2_bn_beta, %mixed_2_tower_1_conv_2_bn_moving_mean, %mixed_2_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %104 = %103.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %105 = nn.avg_pool2d(%83, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 288, 35, 35), float32] */;

  %106 = nn.conv2d(%105, %mixed_2_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %107 = nn.batch_norm(%106, %mixed_2_tower_2_conv_bn_gamma, %mixed_2_tower_2_conv_bn_beta, %mixed_2_tower_2_conv_bn_moving_mean, %mixed_2_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %108 = %107.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %109 = nn.relu(%86) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %110 = nn.relu(%93) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %111 = nn.relu(%104) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %112 = nn.relu(%108) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %113 = (%109, %110, %111, %112) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 64, 35, 35), float32], Tensor[(1024, 96, 35, 35), float32], Tensor[(1024, 64, 35, 35), float32]) */;
  %114 = concatenate(%113, axis=1) /* ty=Tensor[(1024, 288, 35, 35), float32] */;

  %115 = nn.conv2d(%114, %mixed_3_conv_conv1_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1024, 384, 17, 17), float32] */;
  %116 = nn.batch_norm(%115, %mixed_3_conv_bn_gamma, %mixed_3_conv_bn_beta, %mixed_3_conv_bn_moving_mean, %mixed_3_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 17, 17), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %117 = %116.0 /* ty=Tensor[(1024, 384, 17, 17), float32] */;

  %118 = nn.conv2d(%114, %mixed_3_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %119 = nn.batch_norm(%118, %mixed_3_tower_conv_bn_gamma, %mixed_3_tower_conv_bn_beta, %mixed_3_tower_conv_bn_moving_mean, %mixed_3_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 64, 35, 35), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %120 = %119.0 /* ty=Tensor[(1024, 64, 35, 35), float32] */;
  %121 = nn.relu(%120) /* ty=Tensor[(1024, 64, 35, 35), float32] */;

  %122 = nn.conv2d(%121, %mixed_3_tower_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %123 = nn.batch_norm(%122, %mixed_3_tower_conv_1_bn_gamma, %mixed_3_tower_conv_1_bn_beta, %mixed_3_tower_conv_1_bn_moving_mean, %mixed_3_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 35, 35), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %124 = %123.0 /* ty=Tensor[(1024, 96, 35, 35), float32] */;
  %125 = nn.relu(%124) /* ty=Tensor[(1024, 96, 35, 35), float32] */;

  %126 = nn.conv2d(%125, %mixed_3_tower_conv_2_conv1_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1024, 96, 17, 17), float32] */;
  %127 = nn.batch_norm(%126, %mixed_3_tower_conv_2_bn_gamma, %mixed_3_tower_conv_2_bn_beta, %mixed_3_tower_conv_2_bn_moving_mean, %mixed_3_tower_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 96, 17, 17), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %128 = %127.0 /* ty=Tensor[(1024, 96, 17, 17), float32] */;
  %129 = nn.relu(%117) /* ty=Tensor[(1024, 384, 17, 17), float32] */;
  %130 = nn.relu(%128) /* ty=Tensor[(1024, 96, 17, 17), float32] */;
  %131 = nn.max_pool2d(%114, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1024, 288, 17, 17), float32] */;
  %132 = (%129, %130, %131) /* ty=(Tensor[(1024, 384, 17, 17), float32], Tensor[(1024, 96, 17, 17), float32], Tensor[(1024, 288, 17, 17), float32]) */;
  %133 = concatenate(%132, axis=1) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %134 = nn.conv2d(%133, %mixed_4_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %135 = nn.batch_norm(%134, %mixed_4_conv_bn_gamma, %mixed_4_conv_bn_beta, %mixed_4_conv_bn_moving_mean, %mixed_4_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %136 = %135.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %137 = nn.conv2d(%133, %mixed_4_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %138 = nn.batch_norm(%137, %mixed_4_tower_conv_bn_gamma, %mixed_4_tower_conv_bn_beta, %mixed_4_tower_conv_bn_moving_mean, %mixed_4_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %139 = %138.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %140 = nn.relu(%139) /* ty=Tensor[(1024, 128, 17, 17), float32] */;

  %141 = nn.conv2d(%140, %mixed_4_tower_conv_1_conv1_weight, padding=[0, 3, 0, 3], channels=128, kernel_size=[1, 7]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %142 = nn.batch_norm(%141, %mixed_4_tower_conv_1_bn_gamma, %mixed_4_tower_conv_1_bn_beta, %mixed_4_tower_conv_1_bn_moving_mean, %mixed_4_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %143 = %142.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %144 = nn.relu(%143) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %145 = nn.conv2d(%144, %mixed_4_tower_conv_2_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %146 = nn.batch_norm(%145, %mixed_4_tower_conv_2_bn_gamma, %mixed_4_tower_conv_2_bn_beta, %mixed_4_tower_conv_2_bn_moving_mean, %mixed_4_tower_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %147 = %146.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %148 = nn.conv2d(%133, %mixed_4_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %149 = nn.batch_norm(%148, %mixed_4_tower_1_conv_bn_gamma, %mixed_4_tower_1_conv_bn_beta, %mixed_4_tower_1_conv_bn_moving_mean, %mixed_4_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %150 = %149.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %151 = nn.relu(%150) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %152 = nn.conv2d(%151, %mixed_4_tower_1_conv_1_conv1_weight, padding=[3, 0, 3, 0], channels=128, kernel_size=[7, 1]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %153 = nn.batch_norm(%152, %mixed_4_tower_1_conv_1_bn_gamma, %mixed_4_tower_1_conv_1_bn_beta, %mixed_4_tower_1_conv_1_bn_moving_mean, %mixed_4_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %154 = %153.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %155 = nn.relu(%154) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %156 = nn.conv2d(%155, %mixed_4_tower_1_conv_2_conv1_weight, padding=[0, 3, 0, 3], channels=128, kernel_size=[1, 7]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %157 = nn.batch_norm(%156, %mixed_4_tower_1_conv_2_bn_gamma, %mixed_4_tower_1_conv_2_bn_beta, %mixed_4_tower_1_conv_2_bn_moving_mean, %mixed_4_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %158 = %157.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %159 = nn.relu(%158) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %160 = nn.conv2d(%159, %mixed_4_tower_1_conv_3_conv1_weight, padding=[3, 0, 3, 0], channels=128, kernel_size=[7, 1]) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %161 = nn.batch_norm(%160, %mixed_4_tower_1_conv_3_bn_gamma, %mixed_4_tower_1_conv_3_bn_beta, %mixed_4_tower_1_conv_3_bn_moving_mean, %mixed_4_tower_1_conv_3_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 128, 17, 17), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %162 = %161.0 /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %163 = nn.relu(%162) /* ty=Tensor[(1024, 128, 17, 17), float32] */;
  %164 = nn.conv2d(%163, %mixed_4_tower_1_conv_4_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %165 = nn.batch_norm(%164, %mixed_4_tower_1_conv_4_bn_gamma, %mixed_4_tower_1_conv_4_bn_beta, %mixed_4_tower_1_conv_4_bn_moving_mean, %mixed_4_tower_1_conv_4_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %166 = %165.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %167 = nn.avg_pool2d(%133, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %168 = nn.conv2d(%167, %mixed_4_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %169 = nn.batch_norm(%168, %mixed_4_tower_2_conv_bn_gamma, %mixed_4_tower_2_conv_bn_beta, %mixed_4_tower_2_conv_bn_moving_mean, %mixed_4_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %170 = %169.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %171 = nn.relu(%136) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %172 = nn.relu(%147) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %173 = nn.relu(%166) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %174 = nn.relu(%170) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %175 = (%171, %172, %173, %174) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32]) */;
  %176 = concatenate(%175, axis=1) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %177 = nn.conv2d(%176, %mixed_5_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %178 = nn.batch_norm(%177, %mixed_5_conv_bn_gamma, %mixed_5_conv_bn_beta, %mixed_5_conv_bn_moving_mean, %mixed_5_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %179 = %178.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %180 = nn.conv2d(%176, %mixed_5_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %181 = nn.batch_norm(%180, %mixed_5_tower_conv_bn_gamma, %mixed_5_tower_conv_bn_beta, %mixed_5_tower_conv_bn_moving_mean, %mixed_5_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %182 = %181.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %183 = nn.relu(%182) /* ty=Tensor[(1024, 160, 17, 17), float32] */;

  %184 = nn.conv2d(%183, %mixed_5_tower_conv_1_conv1_weight, padding=[0, 3, 0, 3], channels=160, kernel_size=[1, 7]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %185 = nn.batch_norm(%184, %mixed_5_tower_conv_1_bn_gamma, %mixed_5_tower_conv_1_bn_beta, %mixed_5_tower_conv_1_bn_moving_mean, %mixed_5_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %186 = %185.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %187 = nn.relu(%186) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %188 = nn.conv2d(%187, %mixed_5_tower_conv_2_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %189 = nn.batch_norm(%188, %mixed_5_tower_conv_2_bn_gamma, %mixed_5_tower_conv_2_bn_beta, %mixed_5_tower_conv_2_bn_moving_mean, %mixed_5_tower_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %190 = %189.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %191 = nn.conv2d(%176, %mixed_5_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %192 = nn.batch_norm(%191, %mixed_5_tower_1_conv_bn_gamma, %mixed_5_tower_1_conv_bn_beta, %mixed_5_tower_1_conv_bn_moving_mean, %mixed_5_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %193 = %192.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %194 = nn.relu(%193) /* ty=Tensor[(1024, 160, 17, 17), float32] */;

  %195 = nn.conv2d(%194, %mixed_5_tower_1_conv_1_conv1_weight, padding=[3, 0, 3, 0], channels=160, kernel_size=[7, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %196 = nn.batch_norm(%195, %mixed_5_tower_1_conv_1_bn_gamma, %mixed_5_tower_1_conv_1_bn_beta, %mixed_5_tower_1_conv_1_bn_moving_mean, %mixed_5_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %197 = %196.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %198 = nn.relu(%197) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %199 = nn.conv2d(%198, %mixed_5_tower_1_conv_2_conv1_weight, padding=[0, 3, 0, 3], channels=160, kernel_size=[1, 7]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %200 = nn.batch_norm(%199, %mixed_5_tower_1_conv_2_bn_gamma, %mixed_5_tower_1_conv_2_bn_beta, %mixed_5_tower_1_conv_2_bn_moving_mean, %mixed_5_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %201 = %200.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %202 = nn.relu(%201) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %203 = nn.conv2d(%202, %mixed_5_tower_1_conv_3_conv1_weight, padding=[3, 0, 3, 0], channels=160, kernel_size=[7, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %204 = nn.batch_norm(%203, %mixed_5_tower_1_conv_3_bn_gamma, %mixed_5_tower_1_conv_3_bn_beta, %mixed_5_tower_1_conv_3_bn_moving_mean, %mixed_5_tower_1_conv_3_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %205 = %204.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %206 = nn.relu(%205) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %207 = nn.conv2d(%206, %mixed_5_tower_1_conv_4_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %208 = nn.batch_norm(%207, %mixed_5_tower_1_conv_4_bn_gamma, %mixed_5_tower_1_conv_4_bn_beta, %mixed_5_tower_1_conv_4_bn_moving_mean, %mixed_5_tower_1_conv_4_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %209 = %208.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %210 = nn.avg_pool2d(%176, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %211 = nn.conv2d(%210, %mixed_5_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %212 = nn.batch_norm(%211, %mixed_5_tower_2_conv_bn_gamma, %mixed_5_tower_2_conv_bn_beta, %mixed_5_tower_2_conv_bn_moving_mean, %mixed_5_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %213 = %212.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %214 = nn.relu(%179) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %215 = nn.relu(%190) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %216 = nn.relu(%209) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %217 = nn.relu(%213) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %218 = (%214, %215, %216, %217) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32]) */;
  %219 = concatenate(%218, axis=1) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %220 = nn.conv2d(%219, %mixed_6_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %221 = nn.batch_norm(%220, %mixed_6_conv_bn_gamma, %mixed_6_conv_bn_beta, %mixed_6_conv_bn_moving_mean, %mixed_6_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %222 = %221.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %223 = nn.conv2d(%219, %mixed_6_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %224 = nn.batch_norm(%223, %mixed_6_tower_conv_bn_gamma, %mixed_6_tower_conv_bn_beta, %mixed_6_tower_conv_bn_moving_mean, %mixed_6_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %225 = %224.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %226 = nn.relu(%225) /* ty=Tensor[(1024, 160, 17, 17), float32] */;

  %227 = nn.conv2d(%226, %mixed_6_tower_conv_1_conv1_weight, padding=[0, 3, 0, 3], channels=160, kernel_size=[1, 7]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %228 = nn.batch_norm(%227, %mixed_6_tower_conv_1_bn_gamma, %mixed_6_tower_conv_1_bn_beta, %mixed_6_tower_conv_1_bn_moving_mean, %mixed_6_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %229 = %228.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %230 = nn.relu(%229) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %231 = nn.conv2d(%230, %mixed_6_tower_conv_2_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %232 = nn.batch_norm(%231, %mixed_6_tower_conv_2_bn_gamma, %mixed_6_tower_conv_2_bn_beta, %mixed_6_tower_conv_2_bn_moving_mean, %mixed_6_tower_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %233 = %232.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %234 = nn.conv2d(%219, %mixed_6_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %235 = nn.batch_norm(%234, %mixed_6_tower_1_conv_bn_gamma, %mixed_6_tower_1_conv_bn_beta, %mixed_6_tower_1_conv_bn_moving_mean, %mixed_6_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %236 = %235.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %237 = nn.relu(%236) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %238 = nn.conv2d(%237, %mixed_6_tower_1_conv_1_conv1_weight, padding=[3, 0, 3, 0], channels=160, kernel_size=[7, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %239 = nn.batch_norm(%238, %mixed_6_tower_1_conv_1_bn_gamma, %mixed_6_tower_1_conv_1_bn_beta, %mixed_6_tower_1_conv_1_bn_moving_mean, %mixed_6_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %240 = %239.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %241 = nn.relu(%240) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %242 = nn.conv2d(%241, %mixed_6_tower_1_conv_2_conv1_weight, padding=[0, 3, 0, 3], channels=160, kernel_size=[1, 7]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %243 = nn.batch_norm(%242, %mixed_6_tower_1_conv_2_bn_gamma, %mixed_6_tower_1_conv_2_bn_beta, %mixed_6_tower_1_conv_2_bn_moving_mean, %mixed_6_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %244 = %243.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %245 = nn.relu(%244) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %246 = nn.conv2d(%245, %mixed_6_tower_1_conv_3_conv1_weight, padding=[3, 0, 3, 0], channels=160, kernel_size=[7, 1]) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %247 = nn.batch_norm(%246, %mixed_6_tower_1_conv_3_bn_gamma, %mixed_6_tower_1_conv_3_bn_beta, %mixed_6_tower_1_conv_3_bn_moving_mean, %mixed_6_tower_1_conv_3_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 160, 17, 17), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %248 = %247.0 /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %249 = nn.relu(%248) /* ty=Tensor[(1024, 160, 17, 17), float32] */;
  %250 = nn.conv2d(%249, %mixed_6_tower_1_conv_4_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %251 = nn.batch_norm(%250, %mixed_6_tower_1_conv_4_bn_gamma, %mixed_6_tower_1_conv_4_bn_beta, %mixed_6_tower_1_conv_4_bn_moving_mean, %mixed_6_tower_1_conv_4_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %252 = %251.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %253 = nn.avg_pool2d(%219, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %254 = nn.conv2d(%253, %mixed_6_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %255 = nn.batch_norm(%254, %mixed_6_tower_2_conv_bn_gamma, %mixed_6_tower_2_conv_bn_beta, %mixed_6_tower_2_conv_bn_moving_mean, %mixed_6_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %256 = %255.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %257 = nn.relu(%222) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %258 = nn.relu(%233) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %259 = nn.relu(%252) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %260 = nn.relu(%256) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %261 = (%257, %258, %259, %260) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32]) */;
  %262 = concatenate(%261, axis=1) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %263 = nn.conv2d(%262, %mixed_7_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %264 = nn.batch_norm(%263, %mixed_7_conv_bn_gamma, %mixed_7_conv_bn_beta, %mixed_7_conv_bn_moving_mean, %mixed_7_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %265 = %264.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %266 = nn.conv2d(%262, %mixed_7_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %267 = nn.batch_norm(%266, %mixed_7_tower_conv_bn_gamma, %mixed_7_tower_conv_bn_beta, %mixed_7_tower_conv_bn_moving_mean, %mixed_7_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %268 = %267.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %269 = nn.relu(%268) /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %270 = nn.conv2d(%269, %mixed_7_tower_conv_1_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %271 = nn.batch_norm(%270, %mixed_7_tower_conv_1_bn_gamma, %mixed_7_tower_conv_1_bn_beta, %mixed_7_tower_conv_1_bn_moving_mean, %mixed_7_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %272 = %271.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %273 = nn.relu(%272) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %274 = nn.conv2d(%273, %mixed_7_tower_conv_2_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %275 = nn.batch_norm(%274, %mixed_7_tower_conv_2_bn_gamma, %mixed_7_tower_conv_2_bn_beta, %mixed_7_tower_conv_2_bn_moving_mean, %mixed_7_tower_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %276 = %275.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %277 = nn.conv2d(%262, %mixed_7_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %278 = nn.batch_norm(%277, %mixed_7_tower_1_conv_bn_gamma, %mixed_7_tower_1_conv_bn_beta, %mixed_7_tower_1_conv_bn_moving_mean, %mixed_7_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %279 = %278.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %280 = nn.relu(%279) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %281 = nn.conv2d(%280, %mixed_7_tower_1_conv_1_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %282 = nn.batch_norm(%281, %mixed_7_tower_1_conv_1_bn_gamma, %mixed_7_tower_1_conv_1_bn_beta, %mixed_7_tower_1_conv_1_bn_moving_mean, %mixed_7_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %283 = %282.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %284 = nn.relu(%283) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %285 = nn.conv2d(%284, %mixed_7_tower_1_conv_2_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %286 = nn.batch_norm(%285, %mixed_7_tower_1_conv_2_bn_gamma, %mixed_7_tower_1_conv_2_bn_beta, %mixed_7_tower_1_conv_2_bn_moving_mean, %mixed_7_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %287 = %286.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %288 = nn.relu(%287) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %289 = nn.conv2d(%288, %mixed_7_tower_1_conv_3_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %290 = nn.batch_norm(%289, %mixed_7_tower_1_conv_3_bn_gamma, %mixed_7_tower_1_conv_3_bn_beta, %mixed_7_tower_1_conv_3_bn_moving_mean, %mixed_7_tower_1_conv_3_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %291 = %290.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %292 = nn.relu(%291) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %293 = nn.conv2d(%292, %mixed_7_tower_1_conv_4_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %294 = nn.batch_norm(%293, %mixed_7_tower_1_conv_4_bn_gamma, %mixed_7_tower_1_conv_4_bn_beta, %mixed_7_tower_1_conv_4_bn_moving_mean, %mixed_7_tower_1_conv_4_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %295 = %294.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %296 = nn.avg_pool2d(%262, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %297 = nn.conv2d(%296, %mixed_7_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %298 = nn.batch_norm(%297, %mixed_7_tower_2_conv_bn_gamma, %mixed_7_tower_2_conv_bn_beta, %mixed_7_tower_2_conv_bn_moving_mean, %mixed_7_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %299 = %298.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %300 = nn.relu(%265) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %301 = nn.relu(%276) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %302 = nn.relu(%295) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %303 = nn.relu(%299) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %304 = (%300, %301, %302, %303) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32], Tensor[(1024, 192, 17, 17), float32]) */;
  %305 = concatenate(%304, axis=1) /* ty=Tensor[(1024, 768, 17, 17), float32] */;

  %306 = nn.conv2d(%305, %mixed_8_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %307 = nn.batch_norm(%306, %mixed_8_tower_conv_bn_gamma, %mixed_8_tower_conv_bn_beta, %mixed_8_tower_conv_bn_moving_mean, %mixed_8_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %308 = %307.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %309 = nn.relu(%308) /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %310 = nn.conv2d(%309, %mixed_8_tower_conv_1_conv1_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=320, kernel_size=[3, 3]) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %311 = nn.batch_norm(%310, %mixed_8_tower_conv_1_bn_gamma, %mixed_8_tower_conv_1_bn_beta, %mixed_8_tower_conv_1_bn_moving_mean, %mixed_8_tower_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(320), float32], Tensor[(320), float32]) */;
  %312 = %311.0 /* ty=Tensor[(1024, 320, 8, 8), float32] */;

  %313 = nn.conv2d(%305, %mixed_8_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %314 = nn.batch_norm(%313, %mixed_8_tower_1_conv_bn_gamma, %mixed_8_tower_1_conv_bn_beta, %mixed_8_tower_1_conv_bn_moving_mean, %mixed_8_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %315 = %314.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %316 = nn.relu(%315) /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %317 = nn.conv2d(%316, %mixed_8_tower_1_conv_1_conv1_weight, padding=[0, 3, 0, 3], channels=192, kernel_size=[1, 7]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %318 = nn.batch_norm(%317, %mixed_8_tower_1_conv_1_bn_gamma, %mixed_8_tower_1_conv_1_bn_beta, %mixed_8_tower_1_conv_1_bn_moving_mean, %mixed_8_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %319 = %318.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %320 = nn.relu(%319) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %321 = nn.conv2d(%320, %mixed_8_tower_1_conv_2_conv1_weight, padding=[3, 0, 3, 0], channels=192, kernel_size=[7, 1]) /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %322 = nn.batch_norm(%321, %mixed_8_tower_1_conv_2_bn_gamma, %mixed_8_tower_1_conv_2_bn_beta, %mixed_8_tower_1_conv_2_bn_moving_mean, %mixed_8_tower_1_conv_2_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 17, 17), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %323 = %322.0 /* ty=Tensor[(1024, 192, 17, 17), float32] */;
  %324 = nn.relu(%323) /* ty=Tensor[(1024, 192, 17, 17), float32] */;

  %325 = nn.conv2d(%324, %mixed_8_tower_1_conv_3_conv1_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %326 = nn.batch_norm(%325, %mixed_8_tower_1_conv_3_bn_gamma, %mixed_8_tower_1_conv_3_bn_beta, %mixed_8_tower_1_conv_3_bn_moving_mean, %mixed_8_tower_1_conv_3_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 8, 8), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %327 = %326.0 /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %328 = nn.relu(%312) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %329 = nn.relu(%327) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %330 = nn.max_pool2d(%305, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1024, 768, 8, 8), float32] */;
  %331 = (%328, %329, %330) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(1024, 192, 8, 8), float32], Tensor[(1024, 768, 8, 8), float32]) */;
  %332 = concatenate(%331, axis=1) /* ty=Tensor[(1024, 1280, 8, 8), float32] */;

  %333 = nn.conv2d(%332, %mixed_9_conv_conv1_weight, padding=[0, 0, 0, 0], channels=320, kernel_size=[1, 1]) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %334 = nn.batch_norm(%333, %mixed_9_conv_bn_gamma, %mixed_9_conv_bn_beta, %mixed_9_conv_bn_moving_mean, %mixed_9_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(320), float32], Tensor[(320), float32]) */;
  %335 = %334.0 /* ty=Tensor[(1024, 320, 8, 8), float32] */;

  %336 = nn.conv2d(%332, %mixed_9_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %337 = nn.batch_norm(%336, %mixed_9_tower_conv_bn_gamma, %mixed_9_tower_conv_bn_beta, %mixed_9_tower_conv_bn_moving_mean, %mixed_9_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %338 = %337.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %339 = nn.relu(%338) /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %340 = nn.conv2d(%339, %mixed_9_tower_mixed_conv_conv1_weight, padding=[0, 1, 0, 1], channels=384, kernel_size=[1, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %341 = nn.batch_norm(%340, %mixed_9_tower_mixed_conv_bn_gamma, %mixed_9_tower_mixed_conv_bn_beta, %mixed_9_tower_mixed_conv_bn_moving_mean, %mixed_9_tower_mixed_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %342 = %341.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %343 = nn.conv2d(%339, %mixed_9_tower_mixed_conv_1_conv1_weight, padding=[1, 0, 1, 0], channels=384, kernel_size=[3, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %344 = nn.batch_norm(%343, %mixed_9_tower_mixed_conv_1_bn_gamma, %mixed_9_tower_mixed_conv_1_bn_beta, %mixed_9_tower_mixed_conv_1_bn_moving_mean, %mixed_9_tower_mixed_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %345 = %344.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %346 = nn.conv2d(%332, %mixed_9_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=448, kernel_size=[1, 1]) /* ty=Tensor[(1024, 448, 8, 8), float32] */;
  %347 = nn.batch_norm(%346, %mixed_9_tower_1_conv_bn_gamma, %mixed_9_tower_1_conv_bn_beta, %mixed_9_tower_1_conv_bn_moving_mean, %mixed_9_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 448, 8, 8), float32], Tensor[(448), float32], Tensor[(448), float32]) */;
  %348 = %347.0 /* ty=Tensor[(1024, 448, 8, 8), float32] */;
  %349 = nn.relu(%348) /* ty=Tensor[(1024, 448, 8, 8), float32] */;

  %350 = nn.conv2d(%349, %mixed_9_tower_1_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %351 = nn.batch_norm(%350, %mixed_9_tower_1_conv_1_bn_gamma, %mixed_9_tower_1_conv_1_bn_beta, %mixed_9_tower_1_conv_1_bn_moving_mean, %mixed_9_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %352 = %351.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %353 = nn.relu(%352) /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %354 = nn.conv2d(%353, %mixed_9_tower_1_mixed_conv_conv1_weight, padding=[0, 1, 0, 1], channels=384, kernel_size=[1, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %355 = nn.batch_norm(%354, %mixed_9_tower_1_mixed_conv_bn_gamma, %mixed_9_tower_1_mixed_conv_bn_beta, %mixed_9_tower_1_mixed_conv_bn_moving_mean, %mixed_9_tower_1_mixed_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %356 = %355.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %357 = nn.conv2d(%353, %mixed_9_tower_1_mixed_conv_1_conv1_weight, padding=[1, 0, 1, 0], channels=384, kernel_size=[3, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %358 = nn.batch_norm(%357, %mixed_9_tower_1_mixed_conv_1_bn_gamma, %mixed_9_tower_1_mixed_conv_1_bn_beta, %mixed_9_tower_1_mixed_conv_1_bn_moving_mean, %mixed_9_tower_1_mixed_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %359 = %358.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %360 = nn.avg_pool2d(%332, pool_size=[3, 3], padding=[1, 1, 1, 1], count_include_pad=True) /* ty=Tensor[(1024, 1280, 8, 8), float32] */;

  %361 = nn.conv2d(%360, %mixed_9_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %362 = nn.batch_norm(%361, %mixed_9_tower_2_conv_bn_gamma, %mixed_9_tower_2_conv_bn_beta, %mixed_9_tower_2_conv_bn_moving_mean, %mixed_9_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 8, 8), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %363 = %362.0 /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %364 = nn.relu(%335) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %365 = nn.relu(%342) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %366 = nn.relu(%345) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %367 = nn.relu(%356) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %368 = nn.relu(%359) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %369 = nn.relu(%363) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %370 = (%364, %365, %366, %367, %368, %369) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 192, 8, 8), float32]) */;
  %371 = concatenate(%370, axis=1) /* ty=Tensor[(1024, 2048, 8, 8), float32] */;

  %372 = nn.conv2d(%371, %mixed_10_conv_conv1_weight, padding=[0, 0, 0, 0], channels=320, kernel_size=[1, 1]) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %373 = nn.batch_norm(%372, %mixed_10_conv_bn_gamma, %mixed_10_conv_bn_beta, %mixed_10_conv_bn_moving_mean, %mixed_10_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(320), float32], Tensor[(320), float32]) */;
  %374 = %373.0 /* ty=Tensor[(1024, 320, 8, 8), float32] */;

  %375 = nn.conv2d(%371, %mixed_10_tower_conv_conv1_weight, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %376 = nn.batch_norm(%375, %mixed_10_tower_conv_bn_gamma, %mixed_10_tower_conv_bn_beta, %mixed_10_tower_conv_bn_moving_mean, %mixed_10_tower_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %377 = %376.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %378 = nn.relu(%377) /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %379 = nn.conv2d(%378, %mixed_10_tower_mixed_conv_conv1_weight, padding=[0, 1, 0, 1], channels=384, kernel_size=[1, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %380 = nn.batch_norm(%379, %mixed_10_tower_mixed_conv_bn_gamma, %mixed_10_tower_mixed_conv_bn_beta, %mixed_10_tower_mixed_conv_bn_moving_mean, %mixed_10_tower_mixed_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %381 = %380.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %382 = nn.conv2d(%378, %mixed_10_tower_mixed_conv_1_conv1_weight, padding=[1, 0, 1, 0], channels=384, kernel_size=[3, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %383 = nn.batch_norm(%382, %mixed_10_tower_mixed_conv_1_bn_gamma, %mixed_10_tower_mixed_conv_1_bn_beta, %mixed_10_tower_mixed_conv_1_bn_moving_mean, %mixed_10_tower_mixed_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %384 = %383.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %385 = nn.conv2d(%371, %mixed_10_tower_1_conv_conv1_weight, padding=[0, 0, 0, 0], channels=448, kernel_size=[1, 1]) /* ty=Tensor[(1024, 448, 8, 8), float32] */;
  %386 = nn.batch_norm(%385, %mixed_10_tower_1_conv_bn_gamma, %mixed_10_tower_1_conv_bn_beta, %mixed_10_tower_1_conv_bn_moving_mean, %mixed_10_tower_1_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 448, 8, 8), float32], Tensor[(448), float32], Tensor[(448), float32]) */;
  %387 = %386.0 /* ty=Tensor[(1024, 448, 8, 8), float32] */;
  %388 = nn.relu(%387) /* ty=Tensor[(1024, 448, 8, 8), float32] */;

  %389 = nn.conv2d(%388, %mixed_10_tower_1_conv_1_conv1_weight, padding=[1, 1, 1, 1], channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %390 = nn.batch_norm(%389, %mixed_10_tower_1_conv_1_bn_gamma, %mixed_10_tower_1_conv_1_bn_beta, %mixed_10_tower_1_conv_1_bn_moving_mean, %mixed_10_tower_1_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %391 = %390.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %392 = nn.relu(%391) /* ty=Tensor[(1024, 384, 8, 8), float32] */;

  %393 = nn.conv2d(%392, %mixed_10_tower_1_mixed_conv_conv1_weight, padding=[0, 1, 0, 1], channels=384, kernel_size=[1, 3]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %394 = nn.batch_norm(%393, %mixed_10_tower_1_mixed_conv_bn_gamma, %mixed_10_tower_1_mixed_conv_bn_beta, %mixed_10_tower_1_mixed_conv_bn_moving_mean, %mixed_10_tower_1_mixed_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %395 = %394.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %396 = nn.conv2d(%392, %mixed_10_tower_1_mixed_conv_1_conv1_weight, padding=[1, 0, 1, 0], channels=384, kernel_size=[3, 1]) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %397 = nn.batch_norm(%396, %mixed_10_tower_1_mixed_conv_1_bn_gamma, %mixed_10_tower_1_mixed_conv_1_bn_beta, %mixed_10_tower_1_mixed_conv_1_bn_moving_mean, %mixed_10_tower_1_mixed_conv_1_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 384, 8, 8), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %398 = %397.0 /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %399 = nn.max_pool2d(%371, pool_size=[3, 3], padding=[1, 1, 1, 1]) /* ty=Tensor[(1024, 2048, 8, 8), float32] */;
  
  %400 = nn.conv2d(%399, %mixed_10_tower_2_conv_conv1_weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %401 = nn.batch_norm(%400, %mixed_10_tower_2_conv_bn_gamma, %mixed_10_tower_2_conv_bn_beta, %mixed_10_tower_2_conv_bn_moving_mean, %mixed_10_tower_2_conv_bn_moving_var, epsilon=2e-05f, scale=False) /* ty=(Tensor[(1024, 192, 8, 8), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %402 = %401.0 /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %403 = nn.relu(%374) /* ty=Tensor[(1024, 320, 8, 8), float32] */;
  %404 = nn.relu(%381) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %405 = nn.relu(%384) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %406 = nn.relu(%395) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %407 = nn.relu(%398) /* ty=Tensor[(1024, 384, 8, 8), float32] */;
  %408 = nn.relu(%402) /* ty=Tensor[(1024, 192, 8, 8), float32] */;
  %409 = (%403, %404, %405, %406, %407, %408) /* ty=(Tensor[(1024, 320, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 384, 8, 8), float32], Tensor[(1024, 192, 8, 8), float32]) */;
  %410 = concatenate(%409, axis=1) /* ty=Tensor[(1024, 2048, 8, 8), float32] */;
  %411 = nn.avg_pool2d(%410, pool_size=[8, 8], padding=[0, 0, 0, 0], count_include_pad=True) /* ty=Tensor[(1024, 2048, 1, 1), float32] */;
  %412 = nn.batch_flatten(%411) /* ty=Tensor[(1024, 2048), float32] */;
  %413 = nn.dense(%412, %fc1_weight, units=1000) /* ty=Tensor[(1024, 1000), float32] */;
  %414 = nn.bias_add(%413, %fc2_bias, axis=-1) /* ty=Tensor[(1024, 1000), float32] */;
  nn.softmax(%414) /* ty=Tensor[(1024, 1000), float32] */
}
