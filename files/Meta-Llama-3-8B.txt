def @main(%input_ids: Tensor[(1, 512), int64] /* ty=Tensor[(1, 512), int64] span=/model/embed_tokens/Gather.input_ids:0:0 */, %model.embed_tokens.weight: Tensor[(128256, 4096), float32] /* ty=Tensor[(128256, 4096), float32] span=/model/embed_tokens/Gather.model.embed_tokens.weight:0:0 */, %model.layers.0.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.0/input_layernorm/Mul_1.model.layers.0.input_layernorm.weight:0:0 */, %model.layers.0.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.0/post_attention_layernorm/Mul_1.model.layers.0.post_attention_layernorm.weight:0:0 */, %model.layers.1.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.1/input_layernorm/Mul_1.model.layers.1.input_layernorm.weight:0:0 */, %model.layers.1.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.1/post_attention_layernorm/Mul_1.model.layers.1.post_attention_layernorm.weight:0:0 */, %model.layers.2.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.2/input_layernorm/Mul_1.model.layers.2.input_layernorm.weight:0:0 */, %model.layers.2.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.2/post_attention_layernorm/Mul_1.model.layers.2.post_attention_layernorm.weight:0:0 */, %model.layers.3.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.3/input_layernorm/Mul_1.model.layers.3.input_layernorm.weight:0:0 */, %model.layers.3.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.3/post_attention_layernorm/Mul_1.model.layers.3.post_attention_layernorm.weight:0:0 */, %model.layers.4.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.4/input_layernorm/Mul_1.model.layers.4.input_layernorm.weight:0:0 */, %model.layers.4.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.4/post_attention_layernorm/Mul_1.model.layers.4.post_attention_layernorm.weight:0:0 */, %model.layers.5.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.5/input_layernorm/Mul_1.model.layers.5.input_layernorm.weight:0:0 */, %model.layers.5.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.5/post_attention_layernorm/Mul_1.model.layers.5.post_attention_layernorm.weight:0:0 */, %model.layers.6.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.6/input_layernorm/Mul_1.model.layers.6.input_layernorm.weight:0:0 */, %model.layers.6.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.6/post_attention_layernorm/Mul_1.model.layers.6.post_attention_layernorm.weight:0:0 */, %model.layers.7.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.7/input_layernorm/Mul_1.model.layers.7.input_layernorm.weight:0:0 */, %model.layers.7.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.7/post_attention_layernorm/Mul_1.model.layers.7.post_attention_layernorm.weight:0:0 */, %model.layers.8.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.8/input_layernorm/Mul_1.model.layers.8.input_layernorm.weight:0:0 */, %model.layers.8.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.8/post_attention_layernorm/Mul_1.model.layers.8.post_attention_layernorm.weight:0:0 */, %model.layers.9.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.9/input_layernorm/Mul_1.model.layers.9.input_layernorm.weight:0:0 */, %model.layers.9.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.9/post_attention_layernorm/Mul_1.model.layers.9.post_attention_layernorm.weight:0:0 */, %model.layers.10.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.10/input_layernorm/Mul_1.model.layers.10.input_layernorm.weight:0:0 */, %model.layers.10.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.10/post_attention_layernorm/Mul_1.model.layers.10.post_attention_layernorm.weight:0:0 */, %model.layers.11.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.11/input_layernorm/Mul_1.model.layers.11.input_layernorm.weight:0:0 */, %model.layers.11.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.11/post_attention_layernorm/Mul_1.model.layers.11.post_attention_layernorm.weight:0:0 */, %model.layers.12.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.12/input_layernorm/Mul_1.model.layers.12.input_layernorm.weight:0:0 */, %model.layers.12.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.12/post_attention_layernorm/Mul_1.model.layers.12.post_attention_layernorm.weight:0:0 */, %model.layers.13.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.13/input_layernorm/Mul_1.model.layers.13.input_layernorm.weight:0:0 */, %model.layers.13.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.13/post_attention_layernorm/Mul_1.model.layers.13.post_attention_layernorm.weight:0:0 */, %model.layers.14.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.14/input_layernorm/Mul_1.model.layers.14.input_layernorm.weight:0:0 */, %model.layers.14.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.14/post_attention_layernorm/Mul_1.model.layers.14.post_attention_layernorm.weight:0:0 */, %model.layers.15.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.15/input_layernorm/Mul_1.model.layers.15.input_layernorm.weight:0:0 */, %model.layers.15.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.15/post_attention_layernorm/Mul_1.model.layers.15.post_attention_layernorm.weight:0:0 */, %model.layers.16.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.16/input_layernorm/Mul_1.model.layers.16.input_layernorm.weight:0:0 */, %model.layers.16.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.16/post_attention_layernorm/Mul_1.model.layers.16.post_attention_layernorm.weight:0:0 */, %model.layers.17.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.17/input_layernorm/Mul_1.model.layers.17.input_layernorm.weight:0:0 */, %model.layers.17.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.17/post_attention_layernorm/Mul_1.model.layers.17.post_attention_layernorm.weight:0:0 */, %model.layers.18.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.18/input_layernorm/Mul_1.model.layers.18.input_layernorm.weight:0:0 */, %model.layers.18.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.18/post_attention_layernorm/Mul_1.model.layers.18.post_attention_layernorm.weight:0:0 */, %model.layers.19.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.19/input_layernorm/Mul_1.model.layers.19.input_layernorm.weight:0:0 */, %model.layers.19.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.19/post_attention_layernorm/Mul_1.model.layers.19.post_attention_layernorm.weight:0:0 */, %model.layers.20.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.20/input_layernorm/Mul_1.model.layers.20.input_layernorm.weight:0:0 */, %model.layers.20.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.20/post_attention_layernorm/Mul_1.model.layers.20.post_attention_layernorm.weight:0:0 */, %model.layers.21.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.21/input_layernorm/Mul_1.model.layers.21.input_layernorm.weight:0:0 */, %model.layers.21.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.21/post_attention_layernorm/Mul_1.model.layers.21.post_attention_layernorm.weight:0:0 */, %model.layers.22.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.22/input_layernorm/Mul_1.model.layers.22.input_layernorm.weight:0:0 */, %model.layers.22.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.22/post_attention_layernorm/Mul_1.model.layers.22.post_attention_layernorm.weight:0:0 */, %model.layers.23.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.23/input_layernorm/Mul_1.model.layers.23.input_layernorm.weight:0:0 */, %model.layers.23.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.23/post_attention_layernorm/Mul_1.model.layers.23.post_attention_layernorm.weight:0:0 */, %model.layers.24.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.24/input_layernorm/Mul_1.model.layers.24.input_layernorm.weight:0:0 */, %model.layers.24.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.24/post_attention_layernorm/Mul_1.model.layers.24.post_attention_layernorm.weight:0:0 */, %model.layers.25.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.25/input_layernorm/Mul_1.model.layers.25.input_layernorm.weight:0:0 */, %model.layers.25.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.25/post_attention_layernorm/Mul_1.model.layers.25.post_attention_layernorm.weight:0:0 */, %model.layers.26.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.26/input_layernorm/Mul_1.model.layers.26.input_layernorm.weight:0:0 */, %model.layers.26.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.26/post_attention_layernorm/Mul_1.model.layers.26.post_attention_layernorm.weight:0:0 */, %model.layers.27.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.27/input_layernorm/Mul_1.model.layers.27.input_layernorm.weight:0:0 */, %model.layers.27.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.27/post_attention_layernorm/Mul_1.model.layers.27.post_attention_layernorm.weight:0:0 */, %model.layers.28.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.28/input_layernorm/Mul_1.model.layers.28.input_layernorm.weight:0:0 */, %model.layers.28.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.28/post_attention_layernorm/Mul_1.model.layers.28.post_attention_layernorm.weight:0:0 */, %model.layers.29.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.29/input_layernorm/Mul_1.model.layers.29.input_layernorm.weight:0:0 */, %model.layers.29.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.29/post_attention_layernorm/Mul_1.model.layers.29.post_attention_layernorm.weight:0:0 */, %model.layers.30.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.30/input_layernorm/Mul_1.model.layers.30.input_layernorm.weight:0:0 */, %model.layers.30.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.30/post_attention_layernorm/Mul_1.model.layers.30.post_attention_layernorm.weight:0:0 */, %model.layers.31.input_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.31/input_layernorm/Mul_1.model.layers.31.input_layernorm.weight:0:0 */, %model.layers.31.post_attention_layernorm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/layers.31/post_attention_layernorm/Mul_1.model.layers.31.post_attention_layernorm.weight:0:0 */, %model.norm.weight: Tensor[(4096), float32] /* ty=Tensor[(4096), float32] span=/model/norm/Mul_1.model.norm.weight:0:0 */, %onnx::MatMul_7976: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.0/self_attn/q_proj/MatMul.onnx::MatMul_7976:0:0 */, %onnx::MatMul_7977: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.0/self_attn/k_proj/MatMul.onnx::MatMul_7977:0:0 */, %onnx::MatMul_7978: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.0/self_attn/v_proj/MatMul.onnx::MatMul_7978:0:0 */, %onnx::MatMul_8044: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.0/self_attn/o_proj/MatMul.onnx::MatMul_8044:0:0 */, %onnx::MatMul_8045: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.0/mlp/gate_proj/MatMul.onnx::MatMul_8045:0:0 */, %onnx::MatMul_8046: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.0/mlp/up_proj/MatMul.onnx::MatMul_8046:0:0 */, %onnx::MatMul_8047: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.0/mlp/down_proj/MatMul.onnx::MatMul_8047:0:0 */, %onnx::MatMul_8048: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.1/self_attn/q_proj/MatMul.onnx::MatMul_8048:0:0 */, %onnx::MatMul_8049: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.1/self_attn/k_proj/MatMul.onnx::MatMul_8049:0:0 */, %onnx::MatMul_8050: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.1/self_attn/v_proj/MatMul.onnx::MatMul_8050:0:0 */, %onnx::MatMul_8116: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.1/self_attn/o_proj/MatMul.onnx::MatMul_8116:0:0 */, %onnx::MatMul_8117: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.1/mlp/gate_proj/MatMul.onnx::MatMul_8117:0:0 */, %onnx::MatMul_8118: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.1/mlp/up_proj/MatMul.onnx::MatMul_8118:0:0 */, %onnx::MatMul_8119: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.1/mlp/down_proj/MatMul.onnx::MatMul_8119:0:0 */, %onnx::MatMul_8120: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.2/self_attn/q_proj/MatMul.onnx::MatMul_8120:0:0 */, %onnx::MatMul_8121: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.2/self_attn/k_proj/MatMul.onnx::MatMul_8121:0:0 */, %onnx::MatMul_8122: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.2/self_attn/v_proj/MatMul.onnx::MatMul_8122:0:0 */, %onnx::MatMul_8188: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.2/self_attn/o_proj/MatMul.onnx::MatMul_8188:0:0 */, %onnx::MatMul_8189: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.2/mlp/gate_proj/MatMul.onnx::MatMul_8189:0:0 */, %onnx::MatMul_8190: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.2/mlp/up_proj/MatMul.onnx::MatMul_8190:0:0 */, %onnx::MatMul_8191: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.2/mlp/down_proj/MatMul.onnx::MatMul_8191:0:0 */, %onnx::MatMul_8192: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.3/self_attn/q_proj/MatMul.onnx::MatMul_8192:0:0 */, %onnx::MatMul_8193: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.3/self_attn/k_proj/MatMul.onnx::MatMul_8193:0:0 */, %onnx::MatMul_8194: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.3/self_attn/v_proj/MatMul.onnx::MatMul_8194:0:0 */, %onnx::MatMul_8260: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.3/self_attn/o_proj/MatMul.onnx::MatMul_8260:0:0 */, %onnx::MatMul_8261: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.3/mlp/gate_proj/MatMul.onnx::MatMul_8261:0:0 */, %onnx::MatMul_8262: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.3/mlp/up_proj/MatMul.onnx::MatMul_8262:0:0 */, %onnx::MatMul_8263: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.3/mlp/down_proj/MatMul.onnx::MatMul_8263:0:0 */, %onnx::MatMul_8264: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.4/self_attn/q_proj/MatMul.onnx::MatMul_8264:0:0 */, %onnx::MatMul_8265: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.4/self_attn/k_proj/MatMul.onnx::MatMul_8265:0:0 */, %onnx::MatMul_8266: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.4/self_attn/v_proj/MatMul.onnx::MatMul_8266:0:0 */, %onnx::MatMul_8332: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.4/self_attn/o_proj/MatMul.onnx::MatMul_8332:0:0 */, %onnx::MatMul_8333: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.4/mlp/gate_proj/MatMul.onnx::MatMul_8333:0:0 */, %onnx::MatMul_8334: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.4/mlp/up_proj/MatMul.onnx::MatMul_8334:0:0 */, %onnx::MatMul_8335: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.4/mlp/down_proj/MatMul.onnx::MatMul_8335:0:0 */, %onnx::MatMul_8336: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.5/self_attn/q_proj/MatMul.onnx::MatMul_8336:0:0 */, %onnx::MatMul_8337: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.5/self_attn/k_proj/MatMul.onnx::MatMul_8337:0:0 */, %onnx::MatMul_8338: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.5/self_attn/v_proj/MatMul.onnx::MatMul_8338:0:0 */, %onnx::MatMul_8404: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.5/self_attn/o_proj/MatMul.onnx::MatMul_8404:0:0 */, %onnx::MatMul_8405: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.5/mlp/gate_proj/MatMul.onnx::MatMul_8405:0:0 */, %onnx::MatMul_8406: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.5/mlp/up_proj/MatMul.onnx::MatMul_8406:0:0 */, %onnx::MatMul_8407: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.5/mlp/down_proj/MatMul.onnx::MatMul_8407:0:0 */, %onnx::MatMul_8408: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.6/self_attn/q_proj/MatMul.onnx::MatMul_8408:0:0 */, %onnx::MatMul_8409: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.6/self_attn/k_proj/MatMul.onnx::MatMul_8409:0:0 */, %onnx::MatMul_8410: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.6/self_attn/v_proj/MatMul.onnx::MatMul_8410:0:0 */, %onnx::MatMul_8476: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.6/self_attn/o_proj/MatMul.onnx::MatMul_8476:0:0 */, %onnx::MatMul_8477: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.6/mlp/gate_proj/MatMul.onnx::MatMul_8477:0:0 */, %onnx::MatMul_8478: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.6/mlp/up_proj/MatMul.onnx::MatMul_8478:0:0 */, %onnx::MatMul_8479: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.6/mlp/down_proj/MatMul.onnx::MatMul_8479:0:0 */, %onnx::MatMul_8480: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.7/self_attn/q_proj/MatMul.onnx::MatMul_8480:0:0 */, %onnx::MatMul_8481: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.7/self_attn/k_proj/MatMul.onnx::MatMul_8481:0:0 */, %onnx::MatMul_8482: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.7/self_attn/v_proj/MatMul.onnx::MatMul_8482:0:0 */, %onnx::MatMul_8548: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.7/self_attn/o_proj/MatMul.onnx::MatMul_8548:0:0 */, %onnx::MatMul_8549: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.7/mlp/gate_proj/MatMul.onnx::MatMul_8549:0:0 */, %onnx::MatMul_8550: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.7/mlp/up_proj/MatMul.onnx::MatMul_8550:0:0 */, %onnx::MatMul_8551: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.7/mlp/down_proj/MatMul.onnx::MatMul_8551:0:0 */, %onnx::MatMul_8552: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.8/self_attn/q_proj/MatMul.onnx::MatMul_8552:0:0 */, %onnx::MatMul_8553: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.8/self_attn/k_proj/MatMul.onnx::MatMul_8553:0:0 */, %onnx::MatMul_8554: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.8/self_attn/v_proj/MatMul.onnx::MatMul_8554:0:0 */, %onnx::MatMul_8620: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.8/self_attn/o_proj/MatMul.onnx::MatMul_8620:0:0 */, %onnx::MatMul_8621: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.8/mlp/gate_proj/MatMul.onnx::MatMul_8621:0:0 */, %onnx::MatMul_8622: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.8/mlp/up_proj/MatMul.onnx::MatMul_8622:0:0 */, %onnx::MatMul_8623: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.8/mlp/down_proj/MatMul.onnx::MatMul_8623:0:0 */, %onnx::MatMul_8624: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.9/self_attn/q_proj/MatMul.onnx::MatMul_8624:0:0 */, %onnx::MatMul_8625: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.9/self_attn/k_proj/MatMul.onnx::MatMul_8625:0:0 */, %onnx::MatMul_8626: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.9/self_attn/v_proj/MatMul.onnx::MatMul_8626:0:0 */, %onnx::MatMul_8692: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.9/self_attn/o_proj/MatMul.onnx::MatMul_8692:0:0 */, %onnx::MatMul_8693: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.9/mlp/gate_proj/MatMul.onnx::MatMul_8693:0:0 */, %onnx::MatMul_8694: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.9/mlp/up_proj/MatMul.onnx::MatMul_8694:0:0 */, %onnx::MatMul_8695: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.9/mlp/down_proj/MatMul.onnx::MatMul_8695:0:0 */, %onnx::MatMul_8696: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.10/self_attn/q_proj/MatMul.onnx::MatMul_8696:0:0 */, %onnx::MatMul_8697: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.10/self_attn/k_proj/MatMul.onnx::MatMul_8697:0:0 */, %onnx::MatMul_8698: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.10/self_attn/v_proj/MatMul.onnx::MatMul_8698:0:0 */, %onnx::MatMul_8764: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.10/self_attn/o_proj/MatMul.onnx::MatMul_8764:0:0 */, %onnx::MatMul_8765: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.10/mlp/gate_proj/MatMul.onnx::MatMul_8765:0:0 */, %onnx::MatMul_8766: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.10/mlp/up_proj/MatMul.onnx::MatMul_8766:0:0 */, %onnx::MatMul_8767: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.10/mlp/down_proj/MatMul.onnx::MatMul_8767:0:0 */, %onnx::MatMul_8768: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.11/self_attn/q_proj/MatMul.onnx::MatMul_8768:0:0 */, %onnx::MatMul_8769: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.11/self_attn/k_proj/MatMul.onnx::MatMul_8769:0:0 */, %onnx::MatMul_8770: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.11/self_attn/v_proj/MatMul.onnx::MatMul_8770:0:0 */, %onnx::MatMul_8836: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.11/self_attn/o_proj/MatMul.onnx::MatMul_8836:0:0 */, %onnx::MatMul_8837: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.11/mlp/gate_proj/MatMul.onnx::MatMul_8837:0:0 */, %onnx::MatMul_8838: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.11/mlp/up_proj/MatMul.onnx::MatMul_8838:0:0 */, %onnx::MatMul_8839: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.11/mlp/down_proj/MatMul.onnx::MatMul_8839:0:0 */, %onnx::MatMul_8840: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.12/self_attn/q_proj/MatMul.onnx::MatMul_8840:0:0 */, %onnx::MatMul_8841: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.12/self_attn/k_proj/MatMul.onnx::MatMul_8841:0:0 */, %onnx::MatMul_8842: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.12/self_attn/v_proj/MatMul.onnx::MatMul_8842:0:0 */, %onnx::MatMul_8908: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.12/self_attn/o_proj/MatMul.onnx::MatMul_8908:0:0 */, %onnx::MatMul_8909: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.12/mlp/gate_proj/MatMul.onnx::MatMul_8909:0:0 */, %onnx::MatMul_8910: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.12/mlp/up_proj/MatMul.onnx::MatMul_8910:0:0 */, %onnx::MatMul_8911: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.12/mlp/down_proj/MatMul.onnx::MatMul_8911:0:0 */, %onnx::MatMul_8912: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.13/self_attn/q_proj/MatMul.onnx::MatMul_8912:0:0 */, %onnx::MatMul_8913: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.13/self_attn/k_proj/MatMul.onnx::MatMul_8913:0:0 */, %onnx::MatMul_8914: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.13/self_attn/v_proj/MatMul.onnx::MatMul_8914:0:0 */, %onnx::MatMul_8980: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.13/self_attn/o_proj/MatMul.onnx::MatMul_8980:0:0 */, %onnx::MatMul_8981: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.13/mlp/gate_proj/MatMul.onnx::MatMul_8981:0:0 */, %onnx::MatMul_8982: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.13/mlp/up_proj/MatMul.onnx::MatMul_8982:0:0 */, %onnx::MatMul_8983: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.13/mlp/down_proj/MatMul.onnx::MatMul_8983:0:0 */, %onnx::MatMul_8984: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.14/self_attn/q_proj/MatMul.onnx::MatMul_8984:0:0 */, %onnx::MatMul_8985: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.14/self_attn/k_proj/MatMul.onnx::MatMul_8985:0:0 */, %onnx::MatMul_8986: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.14/self_attn/v_proj/MatMul.onnx::MatMul_8986:0:0 */, %onnx::MatMul_9052: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.14/self_attn/o_proj/MatMul.onnx::MatMul_9052:0:0 */, %onnx::MatMul_9053: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.14/mlp/gate_proj/MatMul.onnx::MatMul_9053:0:0 */, %onnx::MatMul_9054: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.14/mlp/up_proj/MatMul.onnx::MatMul_9054:0:0 */, %onnx::MatMul_9055: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.14/mlp/down_proj/MatMul.onnx::MatMul_9055:0:0 */, %onnx::MatMul_9056: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.15/self_attn/q_proj/MatMul.onnx::MatMul_9056:0:0 */, %onnx::MatMul_9057: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.15/self_attn/k_proj/MatMul.onnx::MatMul_9057:0:0 */, %onnx::MatMul_9058: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.15/self_attn/v_proj/MatMul.onnx::MatMul_9058:0:0 */, %onnx::MatMul_9124: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.15/self_attn/o_proj/MatMul.onnx::MatMul_9124:0:0 */, %onnx::MatMul_9125: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.15/mlp/gate_proj/MatMul.onnx::MatMul_9125:0:0 */, %onnx::MatMul_9126: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.15/mlp/up_proj/MatMul.onnx::MatMul_9126:0:0 */, %onnx::MatMul_9127: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.15/mlp/down_proj/MatMul.onnx::MatMul_9127:0:0 */, %onnx::MatMul_9128: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.16/self_attn/q_proj/MatMul.onnx::MatMul_9128:0:0 */, %onnx::MatMul_9129: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.16/self_attn/k_proj/MatMul.onnx::MatMul_9129:0:0 */, %onnx::MatMul_9130: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.16/self_attn/v_proj/MatMul.onnx::MatMul_9130:0:0 */, %onnx::MatMul_9196: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.16/self_attn/o_proj/MatMul.onnx::MatMul_9196:0:0 */, %onnx::MatMul_9197: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.16/mlp/gate_proj/MatMul.onnx::MatMul_9197:0:0 */, %onnx::MatMul_9198: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.16/mlp/up_proj/MatMul.onnx::MatMul_9198:0:0 */, %onnx::MatMul_9199: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.16/mlp/down_proj/MatMul.onnx::MatMul_9199:0:0 */, %onnx::MatMul_9200: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.17/self_attn/q_proj/MatMul.onnx::MatMul_9200:0:0 */, %onnx::MatMul_9201: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.17/self_attn/k_proj/MatMul.onnx::MatMul_9201:0:0 */, %onnx::MatMul_9202: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.17/self_attn/v_proj/MatMul.onnx::MatMul_9202:0:0 */, %onnx::MatMul_9268: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.17/self_attn/o_proj/MatMul.onnx::MatMul_9268:0:0 */, %onnx::MatMul_9269: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.17/mlp/gate_proj/MatMul.onnx::MatMul_9269:0:0 */, %onnx::MatMul_9270: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.17/mlp/up_proj/MatMul.onnx::MatMul_9270:0:0 */, %onnx::MatMul_9271: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.17/mlp/down_proj/MatMul.onnx::MatMul_9271:0:0 */, %onnx::MatMul_9272: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.18/self_attn/q_proj/MatMul.onnx::MatMul_9272:0:0 */, %onnx::MatMul_9273: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.18/self_attn/k_proj/MatMul.onnx::MatMul_9273:0:0 */, %onnx::MatMul_9274: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.18/self_attn/v_proj/MatMul.onnx::MatMul_9274:0:0 */, %onnx::MatMul_9340: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.18/self_attn/o_proj/MatMul.onnx::MatMul_9340:0:0 */, %onnx::MatMul_9341: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.18/mlp/gate_proj/MatMul.onnx::MatMul_9341:0:0 */, %onnx::MatMul_9342: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.18/mlp/up_proj/MatMul.onnx::MatMul_9342:0:0 */, %onnx::MatMul_9343: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.18/mlp/down_proj/MatMul.onnx::MatMul_9343:0:0 */, %onnx::MatMul_9344: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.19/self_attn/q_proj/MatMul.onnx::MatMul_9344:0:0 */, %onnx::MatMul_9345: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.19/self_attn/k_proj/MatMul.onnx::MatMul_9345:0:0 */, %onnx::MatMul_9346: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.19/self_attn/v_proj/MatMul.onnx::MatMul_9346:0:0 */, %onnx::MatMul_9412: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.19/self_attn/o_proj/MatMul.onnx::MatMul_9412:0:0 */, %onnx::MatMul_9413: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.19/mlp/gate_proj/MatMul.onnx::MatMul_9413:0:0 */, %onnx::MatMul_9414: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.19/mlp/up_proj/MatMul.onnx::MatMul_9414:0:0 */, %onnx::MatMul_9415: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.19/mlp/down_proj/MatMul.onnx::MatMul_9415:0:0 */, %onnx::MatMul_9416: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.20/self_attn/q_proj/MatMul.onnx::MatMul_9416:0:0 */, %onnx::MatMul_9417: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.20/self_attn/k_proj/MatMul.onnx::MatMul_9417:0:0 */, %onnx::MatMul_9418: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.20/self_attn/v_proj/MatMul.onnx::MatMul_9418:0:0 */, %onnx::MatMul_9484: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.20/self_attn/o_proj/MatMul.onnx::MatMul_9484:0:0 */, %onnx::MatMul_9485: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.20/mlp/gate_proj/MatMul.onnx::MatMul_9485:0:0 */, %onnx::MatMul_9486: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.20/mlp/up_proj/MatMul.onnx::MatMul_9486:0:0 */, %onnx::MatMul_9487: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.20/mlp/down_proj/MatMul.onnx::MatMul_9487:0:0 */, %onnx::MatMul_9488: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.21/self_attn/q_proj/MatMul.onnx::MatMul_9488:0:0 */, %onnx::MatMul_9489: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.21/self_attn/k_proj/MatMul.onnx::MatMul_9489:0:0 */, %onnx::MatMul_9490: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.21/self_attn/v_proj/MatMul.onnx::MatMul_9490:0:0 */, %onnx::MatMul_9556: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.21/self_attn/o_proj/MatMul.onnx::MatMul_9556:0:0 */, %onnx::MatMul_9557: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.21/mlp/gate_proj/MatMul.onnx::MatMul_9557:0:0 */, %onnx::MatMul_9558: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.21/mlp/up_proj/MatMul.onnx::MatMul_9558:0:0 */, %onnx::MatMul_9559: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.21/mlp/down_proj/MatMul.onnx::MatMul_9559:0:0 */, %onnx::MatMul_9560: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.22/self_attn/q_proj/MatMul.onnx::MatMul_9560:0:0 */, %onnx::MatMul_9561: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.22/self_attn/k_proj/MatMul.onnx::MatMul_9561:0:0 */, %onnx::MatMul_9562: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.22/self_attn/v_proj/MatMul.onnx::MatMul_9562:0:0 */, %onnx::MatMul_9628: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.22/self_attn/o_proj/MatMul.onnx::MatMul_9628:0:0 */, %onnx::MatMul_9629: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.22/mlp/gate_proj/MatMul.onnx::MatMul_9629:0:0 */, %onnx::MatMul_9630: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.22/mlp/up_proj/MatMul.onnx::MatMul_9630:0:0 */, %onnx::MatMul_9631: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.22/mlp/down_proj/MatMul.onnx::MatMul_9631:0:0 */, %onnx::MatMul_9632: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.23/self_attn/q_proj/MatMul.onnx::MatMul_9632:0:0 */, %onnx::MatMul_9633: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.23/self_attn/k_proj/MatMul.onnx::MatMul_9633:0:0 */, %onnx::MatMul_9634: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.23/self_attn/v_proj/MatMul.onnx::MatMul_9634:0:0 */, %onnx::MatMul_9700: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.23/self_attn/o_proj/MatMul.onnx::MatMul_9700:0:0 */, %onnx::MatMul_9701: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.23/mlp/gate_proj/MatMul.onnx::MatMul_9701:0:0 */, %onnx::MatMul_9702: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.23/mlp/up_proj/MatMul.onnx::MatMul_9702:0:0 */, %onnx::MatMul_9703: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.23/mlp/down_proj/MatMul.onnx::MatMul_9703:0:0 */, %onnx::MatMul_9704: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.24/self_attn/q_proj/MatMul.onnx::MatMul_9704:0:0 */, %onnx::MatMul_9705: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.24/self_attn/k_proj/MatMul.onnx::MatMul_9705:0:0 */, %onnx::MatMul_9706: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.24/self_attn/v_proj/MatMul.onnx::MatMul_9706:0:0 */, %onnx::MatMul_9772: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.24/self_attn/o_proj/MatMul.onnx::MatMul_9772:0:0 */, %onnx::MatMul_9773: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.24/mlp/gate_proj/MatMul.onnx::MatMul_9773:0:0 */, %onnx::MatMul_9774: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.24/mlp/up_proj/MatMul.onnx::MatMul_9774:0:0 */, %onnx::MatMul_9775: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.24/mlp/down_proj/MatMul.onnx::MatMul_9775:0:0 */, %onnx::MatMul_9776: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.25/self_attn/q_proj/MatMul.onnx::MatMul_9776:0:0 */, %onnx::MatMul_9777: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.25/self_attn/k_proj/MatMul.onnx::MatMul_9777:0:0 */, %onnx::MatMul_9778: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.25/self_attn/v_proj/MatMul.onnx::MatMul_9778:0:0 */, %onnx::MatMul_9844: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.25/self_attn/o_proj/MatMul.onnx::MatMul_9844:0:0 */, %onnx::MatMul_9845: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.25/mlp/gate_proj/MatMul.onnx::MatMul_9845:0:0 */, %onnx::MatMul_9846: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.25/mlp/up_proj/MatMul.onnx::MatMul_9846:0:0 */, %onnx::MatMul_9847: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.25/mlp/down_proj/MatMul.onnx::MatMul_9847:0:0 */, %onnx::MatMul_9848: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.26/self_attn/q_proj/MatMul.onnx::MatMul_9848:0:0 */, %onnx::MatMul_9849: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.26/self_attn/k_proj/MatMul.onnx::MatMul_9849:0:0 */, %onnx::MatMul_9850: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.26/self_attn/v_proj/MatMul.onnx::MatMul_9850:0:0 */, %onnx::MatMul_9916: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.26/self_attn/o_proj/MatMul.onnx::MatMul_9916:0:0 */, %onnx::MatMul_9917: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.26/mlp/gate_proj/MatMul.onnx::MatMul_9917:0:0 */, %onnx::MatMul_9918: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.26/mlp/up_proj/MatMul.onnx::MatMul_9918:0:0 */, %onnx::MatMul_9919: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.26/mlp/down_proj/MatMul.onnx::MatMul_9919:0:0 */, %onnx::MatMul_9920: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.27/self_attn/q_proj/MatMul.onnx::MatMul_9920:0:0 */, %onnx::MatMul_9921: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.27/self_attn/k_proj/MatMul.onnx::MatMul_9921:0:0 */, %onnx::MatMul_9922: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.27/self_attn/v_proj/MatMul.onnx::MatMul_9922:0:0 */, %onnx::MatMul_9988: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.27/self_attn/o_proj/MatMul.onnx::MatMul_9988:0:0 */, %onnx::MatMul_9989: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.27/mlp/gate_proj/MatMul.onnx::MatMul_9989:0:0 */, %onnx::MatMul_9990: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.27/mlp/up_proj/MatMul.onnx::MatMul_9990:0:0 */, %onnx::MatMul_9991: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.27/mlp/down_proj/MatMul.onnx::MatMul_9991:0:0 */, %onnx::MatMul_9992: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.28/self_attn/q_proj/MatMul.onnx::MatMul_9992:0:0 */, %onnx::MatMul_9993: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.28/self_attn/k_proj/MatMul.onnx::MatMul_9993:0:0 */, %onnx::MatMul_9994: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.28/self_attn/v_proj/MatMul.onnx::MatMul_9994:0:0 */, %onnx::MatMul_10060: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.28/self_attn/o_proj/MatMul.onnx::MatMul_10060:0:0 */, %onnx::MatMul_10061: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.28/mlp/gate_proj/MatMul.onnx::MatMul_10061:0:0 */, %onnx::MatMul_10062: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.28/mlp/up_proj/MatMul.onnx::MatMul_10062:0:0 */, %onnx::MatMul_10063: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.28/mlp/down_proj/MatMul.onnx::MatMul_10063:0:0 */, %onnx::MatMul_10064: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.29/self_attn/q_proj/MatMul.onnx::MatMul_10064:0:0 */, %onnx::MatMul_10065: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.29/self_attn/k_proj/MatMul.onnx::MatMul_10065:0:0 */, %onnx::MatMul_10066: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.29/self_attn/v_proj/MatMul.onnx::MatMul_10066:0:0 */, %onnx::MatMul_10132: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.29/self_attn/o_proj/MatMul.onnx::MatMul_10132:0:0 */, %onnx::MatMul_10133: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.29/mlp/gate_proj/MatMul.onnx::MatMul_10133:0:0 */, %onnx::MatMul_10134: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.29/mlp/up_proj/MatMul.onnx::MatMul_10134:0:0 */, %onnx::MatMul_10135: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.29/mlp/down_proj/MatMul.onnx::MatMul_10135:0:0 */, %onnx::MatMul_10136: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.30/self_attn/q_proj/MatMul.onnx::MatMul_10136:0:0 */, %onnx::MatMul_10137: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.30/self_attn/k_proj/MatMul.onnx::MatMul_10137:0:0 */, %onnx::MatMul_10138: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.30/self_attn/v_proj/MatMul.onnx::MatMul_10138:0:0 */, %onnx::MatMul_10204: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.30/self_attn/o_proj/MatMul.onnx::MatMul_10204:0:0 */, %onnx::MatMul_10205: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.30/mlp/gate_proj/MatMul.onnx::MatMul_10205:0:0 */, %onnx::MatMul_10206: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.30/mlp/up_proj/MatMul.onnx::MatMul_10206:0:0 */, %onnx::MatMul_10207: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.30/mlp/down_proj/MatMul.onnx::MatMul_10207:0:0 */, %onnx::MatMul_10208: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.31/self_attn/q_proj/MatMul.onnx::MatMul_10208:0:0 */, %onnx::MatMul_10209: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.31/self_attn/k_proj/MatMul.onnx::MatMul_10209:0:0 */, %onnx::MatMul_10210: Tensor[(4096, 1024), float32] /* ty=Tensor[(4096, 1024), float32] span=/model/layers.31/self_attn/v_proj/MatMul.onnx::MatMul_10210:0:0 */, %onnx::MatMul_10276: Tensor[(4096, 4096), float32] /* ty=Tensor[(4096, 4096), float32] span=/model/layers.31/self_attn/o_proj/MatMul.onnx::MatMul_10276:0:0 */, %onnx::MatMul_10277: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.31/mlp/gate_proj/MatMul.onnx::MatMul_10277:0:0 */, %onnx::MatMul_10278: Tensor[(4096, 14336), float32] /* ty=Tensor[(4096, 14336), float32] span=/model/layers.31/mlp/up_proj/MatMul.onnx::MatMul_10278:0:0 */, %onnx::MatMul_10279: Tensor[(14336, 4096), float32] /* ty=Tensor[(14336, 4096), float32] span=/model/layers.31/mlp/down_proj/MatMul.onnx::MatMul_10279:0:0 */, %onnx::MatMul_10280: Tensor[(4096, 128256), float32] /* ty=Tensor[(4096, 128256), float32] span=/lm_head/MatMul.onnx::MatMul_10280:0:0 */) -> (Tensor[(1, 512, 128256), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32]) {
  %0 = less(%input_ids, 0i64 /* ty=int64 span=/model/embed_tokens/Gather:0:0 */) /* ty=Tensor[(1, 512), bool] span=/model/embed_tokens/Gather:0:0 */;
  %1 = add(%input_ids, 128256i64 /* ty=int64 */) /* ty=Tensor[(1, 512), int64] span=/model/embed_tokens/Gather:0:0 */;
  %2 = where(%0, %1, %input_ids) /* ty=Tensor[(1, 512), int64] span=/model/embed_tokens/Gather:0:0 */;
  %3 = take(%model.embed_tokens.weight, %2, axis=0) /* ty=Tensor[(1, 512, 4096), float32] span=/model/embed_tokens/Gather:0:0 */;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/input_layernorm/Cast:0:0 */;
  %5 = power(%4, 2f /* ty=float32 span=/model/layers.0/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/input_layernorm/Pow:0:0 */;
  %6 = mean(%5, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/input_layernorm/ReduceMean:0:0 */;
  %7 = add(%6, 1e-05f /* ty=float32 span=/model/layers.0/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/input_layernorm/Add:0:0 */;
  %8 = sqrt(%7) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/input_layernorm/Sqrt:0:0 */;
  %9 = divide(1f /* ty=float32 span=/model/layers.0/input_layernorm/Constant_2:0:0 */, %8) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/input_layernorm/Div:0:0 */;
  %10 = multiply(%4, %9) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/input_layernorm/Mul:0:0 */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/input_layernorm/Cast_1:0:0 */;
  %12 = multiply(%model.layers.0.input_layernorm.weight, %11) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/input_layernorm/Mul_1:0:0 */;
  %13 = reshape(%12, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/q_proj/MatMul:0:0 */;
  %14 = transpose(%onnx::MatMul_7976, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.0/self_attn/q_proj/MatMul:0:0 */;
  %15 = nn.dense(%13, %14, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/q_proj/MatMul:0:0 */;
  %16 = reshape(%15, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/self_attn/q_proj/MatMul:0:0 */;
  %17 = reshape(%16, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.0/self_attn/Reshape:0:0 */;
  %18 = transpose(%17, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Transpose:0:0 */;
  %19 = strided_slice(%18, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.0/self_attn/Slice_1:0:0 */;
  %20 = negative(%19) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.0/self_attn/Neg:0:0 */;
  %21 = strided_slice(%18, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.0/self_attn/Slice:0:0 */;
  %22 = (%20, %21) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.0/self_attn/Concat:0:0 */;
  %23 = concatenate(%22, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Concat:0:0 */;
  %24 = multiply(%18, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Mul:0:0 */;
  %25 = multiply(%23, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Mul_1:0:0 */;
  %26 = add(%24, %25) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Add:0:0 */;
  %27 = multiply(%26, meta[relay.Constant][2] /* ty=Tensor[(1), float32] span=/model/layers.0/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Mul_6:0:0 */;
  %28 = reshape(%12, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/k_proj/MatMul:0:0 */;
  %29 = transpose(%onnx::MatMul_7977, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.0/self_attn/k_proj/MatMul:0:0 */;
  %30 = nn.dense(%28, %29, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.0/self_attn/k_proj/MatMul:0:0 */;
  %31 = reshape(%30, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.0/self_attn/k_proj/MatMul:0:0 */;
  %32 = reshape(%31, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.0/self_attn/Reshape_1:0:0 */;
  %33 = transpose(%32, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Transpose_1:0:0 */;
  %34 = strided_slice(%33, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.0/self_attn/Slice_3:0:0 */;
  %35 = negative(%34) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.0/self_attn/Neg_1:0:0 */;
  %36 = strided_slice(%33, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.0/self_attn/Slice_2:0:0 */;
  %37 = (%35, %36) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.0/self_attn/Concat_1:0:0 */;
  %38 = concatenate(%37, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Concat_1:0:0 */;
  %39 = multiply(%33, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Mul_2:0:0 */;
  %40 = multiply(%38, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Mul_3:0:0 */;
  %41 = add(%39, %40) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Add_1:0:0 */;
  %42 = expand_dims(%41, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_2:0:0 */;
  %43 = broadcast_to(%42, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.0/self_attn/Expand:0:0 */;
  %44 = reshape(%43, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Reshape_3:0:0 */;
  %45 = transpose(%44, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.0/self_attn/Transpose_3:0:0 */;
  %46 = multiply(%45, meta[relay.Constant][3] /* ty=Tensor[(1), float32] span=/model/layers.0/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.0/self_attn/Mul_7:0:0 */;
  %47 = reshape(%46, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.0/self_attn/MatMul:0:0 */;
  %48 = reshape(%27, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.0/self_attn/MatMul:0:0 */;
  %49 = transpose(%47, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.0/self_attn/MatMul:0:0 */;
  %50 = nn.batch_matmul(%48, %49, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.0/self_attn/MatMul:0:0 */;
  %51 = reshape(%50, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.0/self_attn/MatMul:0:0 */;
  %52 = add(%51, meta[relay.Constant][4] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.0/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.0/self_attn/Add_2:0:0 */;
  %53 = nn.softmax(%52, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.0/self_attn/Softmax:0:0 */;
  %54 = reshape(%12, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/v_proj/MatMul:0:0 */;
  %55 = transpose(%onnx::MatMul_7978, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.0/self_attn/v_proj/MatMul:0:0 */;
  %56 = nn.dense(%54, %55, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.0/self_attn/v_proj/MatMul:0:0 */;
  %57 = reshape(%56, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.0/self_attn/v_proj/MatMul:0:0 */;
  %58 = reshape(%57, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.0/self_attn/Reshape_2:0:0 */;
  %59 = transpose(%58, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.0/self_attn/Transpose_2:0:0 */;
  %60 = expand_dims(%59, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_3:0:0 */;
  %61 = broadcast_to(%60, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.0/self_attn/Expand_1:0:0 */;
  %62 = reshape(%61, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/Reshape_4:0:0 */;
  %63 = reshape(%62, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.0/self_attn/MatMul_1:0:0 */;
  %64 = reshape(%53, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.0/self_attn/MatMul_1:0:0 */;
  %65 = transpose(%63, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.0/self_attn/MatMul_1:0:0 */;
  %66 = nn.batch_matmul(%64, %65, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.0/self_attn/MatMul_1:0:0 */;
  %67 = reshape(%66, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.0/self_attn/MatMul_1:0:0 */;
  %68 = transpose(%67, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.0/self_attn/Transpose_4:0:0 */;
  %69 = reshape(%68, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/self_attn/Reshape_5:0:0 */;
  %70 = reshape(%69, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/o_proj/MatMul:0:0 */;
  %71 = transpose(%onnx::MatMul_8044, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.0/self_attn/o_proj/MatMul:0:0 */;
  %72 = nn.dense(%70, %71, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/self_attn/o_proj/MatMul:0:0 */;
  %73 = reshape(%72, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/self_attn/o_proj/MatMul:0:0 */;
  %74 = add(%4, %73) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/Add:0:0 */;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/post_attention_layernorm/Cast:0:0 */;
  %76 = power(%75, 2f /* ty=float32 span=/model/layers.0/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/post_attention_layernorm/Pow:0:0 */;
  %77 = mean(%76, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/post_attention_layernorm/ReduceMean:0:0 */;
  %78 = add(%77, 1e-05f /* ty=float32 span=/model/layers.0/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/post_attention_layernorm/Add:0:0 */;
  %79 = sqrt(%78) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/post_attention_layernorm/Sqrt:0:0 */;
  %80 = divide(1f /* ty=float32 span=/model/layers.0/post_attention_layernorm/Constant_2:0:0 */, %79) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.0/post_attention_layernorm/Div:0:0 */;
  %81 = multiply(%75, %80) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/post_attention_layernorm/Mul:0:0 */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/post_attention_layernorm/Cast_1:0:0 */;
  %83 = multiply(%model.layers.0.post_attention_layernorm.weight, %82) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/post_attention_layernorm/Mul_1:0:0 */;
  %84 = reshape(%83, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/mlp/gate_proj/MatMul:0:0 */;
  %85 = transpose(%onnx::MatMul_8045, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.0/mlp/gate_proj/MatMul:0:0 */;
  %86 = nn.dense(%84, %85, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.0/mlp/gate_proj/MatMul:0:0 */;
  %87 = reshape(%86, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.0/mlp/gate_proj/MatMul:0:0 */;
  %88 = sigmoid(%87) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.0/mlp/act_fn/Sigmoid:0:0 */;
  %89 = reshape(%83, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/mlp/up_proj/MatMul:0:0 */;
  %90 = transpose(%onnx::MatMul_8046, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.0/mlp/up_proj/MatMul:0:0 */;
  %91 = nn.dense(%89, %90, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.0/mlp/up_proj/MatMul:0:0 */;
  %92 = multiply(%87, %88) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.0/mlp/act_fn/Mul:0:0 */;
  %93 = reshape(%91, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.0/mlp/up_proj/MatMul:0:0 */;
  %94 = multiply(%92, %93) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.0/mlp/Mul:0:0 */;
  %95 = reshape(%94, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.0/mlp/down_proj/MatMul:0:0 */;
  %96 = transpose(%onnx::MatMul_8047, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.0/mlp/down_proj/MatMul:0:0 */;
  %97 = nn.dense(%95, %96, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.0/mlp/down_proj/MatMul:0:0 */;
  %98 = reshape(%97, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/mlp/down_proj/MatMul:0:0 */;
  %99 = add(%75, %98) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.0/Add_1:0:0 */;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/input_layernorm/Cast:0:0 */;
  %101 = power(%100, 2f /* ty=float32 span=/model/layers.1/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/input_layernorm/Pow:0:0 */;
  %102 = mean(%101, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/input_layernorm/ReduceMean:0:0 */;
  %103 = add(%102, 1e-05f /* ty=float32 span=/model/layers.1/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/input_layernorm/Add:0:0 */;
  %104 = sqrt(%103) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/input_layernorm/Sqrt:0:0 */;
  %105 = divide(1f /* ty=float32 span=/model/layers.1/input_layernorm/Constant_2:0:0 */, %104) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/input_layernorm/Div:0:0 */;
  %106 = multiply(%100, %105) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/input_layernorm/Mul:0:0 */;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/input_layernorm/Cast_1:0:0 */;
  %108 = multiply(%model.layers.1.input_layernorm.weight, %107) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/input_layernorm/Mul_1:0:0 */;
  %109 = reshape(%108, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/q_proj/MatMul:0:0 */;
  %110 = transpose(%onnx::MatMul_8048, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.1/self_attn/q_proj/MatMul:0:0 */;
  %111 = nn.dense(%109, %110, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/q_proj/MatMul:0:0 */;
  %112 = reshape(%111, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/self_attn/q_proj/MatMul:0:0 */;
  %113 = reshape(%112, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.1/self_attn/Reshape:0:0 */;
  %114 = transpose(%113, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Transpose:0:0 */;
  %115 = strided_slice(%114, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.1/self_attn/Slice_1:0:0 */;
  %116 = negative(%115) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.1/self_attn/Neg:0:0 */;
  %117 = strided_slice(%114, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.1/self_attn/Slice:0:0 */;
  %118 = (%116, %117) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.1/self_attn/Concat:0:0 */;
  %119 = concatenate(%118, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Concat:0:0 */;
  %120 = multiply(%114, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Mul:0:0 */;
  %121 = multiply(%119, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Mul_1:0:0 */;
  %122 = add(%120, %121) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Add:0:0 */;
  %123 = multiply(%122, meta[relay.Constant][5] /* ty=Tensor[(1), float32] span=/model/layers.1/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Mul_6:0:0 */;
  %124 = reshape(%108, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/k_proj/MatMul:0:0 */;
  %125 = transpose(%onnx::MatMul_8049, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.1/self_attn/k_proj/MatMul:0:0 */;
  %126 = nn.dense(%124, %125, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.1/self_attn/k_proj/MatMul:0:0 */;
  %127 = reshape(%126, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.1/self_attn/k_proj/MatMul:0:0 */;
  %128 = reshape(%127, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.1/self_attn/Reshape_1:0:0 */;
  %129 = transpose(%128, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Transpose_1:0:0 */;
  %130 = strided_slice(%129, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.1/self_attn/Slice_3:0:0 */;
  %131 = negative(%130) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.1/self_attn/Neg_1:0:0 */;
  %132 = strided_slice(%129, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.1/self_attn/Slice_2:0:0 */;
  %133 = (%131, %132) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.1/self_attn/Concat_1:0:0 */;
  %134 = concatenate(%133, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Concat_1:0:0 */;
  %135 = multiply(%129, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Mul_2:0:0 */;
  %136 = multiply(%134, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Mul_3:0:0 */;
  %137 = add(%135, %136) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Add_1:0:0 */;
  %138 = expand_dims(%137, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.1/self_attn/Unsqueeze:0:0 */;
  %139 = broadcast_to(%138, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.1/self_attn/Expand:0:0 */;
  %140 = reshape(%139, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Reshape_3:0:0 */;
  %141 = transpose(%140, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.1/self_attn/Transpose_3:0:0 */;
  %142 = multiply(%141, meta[relay.Constant][6] /* ty=Tensor[(1), float32] span=/model/layers.1/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.1/self_attn/Mul_7:0:0 */;
  %143 = reshape(%142, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.1/self_attn/MatMul:0:0 */;
  %144 = reshape(%123, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.1/self_attn/MatMul:0:0 */;
  %145 = transpose(%143, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.1/self_attn/MatMul:0:0 */;
  %146 = nn.batch_matmul(%144, %145, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.1/self_attn/MatMul:0:0 */;
  %147 = reshape(%146, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.1/self_attn/MatMul:0:0 */;
  %148 = add(%147, meta[relay.Constant][7] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.1/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.1/self_attn/Add_2:0:0 */;
  %149 = nn.softmax(%148, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.1/self_attn/Softmax:0:0 */;
  %150 = reshape(%108, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/v_proj/MatMul:0:0 */;
  %151 = transpose(%onnx::MatMul_8050, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.1/self_attn/v_proj/MatMul:0:0 */;
  %152 = nn.dense(%150, %151, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.1/self_attn/v_proj/MatMul:0:0 */;
  %153 = reshape(%152, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.1/self_attn/v_proj/MatMul:0:0 */;
  %154 = reshape(%153, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.1/self_attn/Reshape_2:0:0 */;
  %155 = transpose(%154, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.1/self_attn/Transpose_2:0:0 */;
  %156 = expand_dims(%155, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.1/self_attn/Unsqueeze_1:0:0 */;
  %157 = broadcast_to(%156, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.1/self_attn/Expand_1:0:0 */;
  %158 = reshape(%157, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/Reshape_4:0:0 */;
  %159 = reshape(%158, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.1/self_attn/MatMul_1:0:0 */;
  %160 = reshape(%149, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.1/self_attn/MatMul_1:0:0 */;
  %161 = transpose(%159, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.1/self_attn/MatMul_1:0:0 */;
  %162 = nn.batch_matmul(%160, %161, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.1/self_attn/MatMul_1:0:0 */;
  %163 = reshape(%162, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.1/self_attn/MatMul_1:0:0 */;
  %164 = transpose(%163, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.1/self_attn/Transpose_4:0:0 */;
  %165 = reshape(%164, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/self_attn/Reshape_5:0:0 */;
  %166 = reshape(%165, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/o_proj/MatMul:0:0 */;
  %167 = transpose(%onnx::MatMul_8116, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.1/self_attn/o_proj/MatMul:0:0 */;
  %168 = nn.dense(%166, %167, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/self_attn/o_proj/MatMul:0:0 */;
  %169 = reshape(%168, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/self_attn/o_proj/MatMul:0:0 */;
  %170 = add(%100, %169) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/Add:0:0 */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/post_attention_layernorm/Cast:0:0 */;
  %172 = power(%171, 2f /* ty=float32 span=/model/layers.1/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/post_attention_layernorm/Pow:0:0 */;
  %173 = mean(%172, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/post_attention_layernorm/ReduceMean:0:0 */;
  %174 = add(%173, 1e-05f /* ty=float32 span=/model/layers.1/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/post_attention_layernorm/Add:0:0 */;
  %175 = sqrt(%174) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/post_attention_layernorm/Sqrt:0:0 */;
  %176 = divide(1f /* ty=float32 span=/model/layers.1/post_attention_layernorm/Constant_2:0:0 */, %175) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.1/post_attention_layernorm/Div:0:0 */;
  %177 = multiply(%171, %176) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/post_attention_layernorm/Mul:0:0 */;
  %178 = cast(%177, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/post_attention_layernorm/Cast_1:0:0 */;
  %179 = multiply(%model.layers.1.post_attention_layernorm.weight, %178) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/post_attention_layernorm/Mul_1:0:0 */;
  %180 = reshape(%179, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/mlp/gate_proj/MatMul:0:0 */;
  %181 = transpose(%onnx::MatMul_8117, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.1/mlp/gate_proj/MatMul:0:0 */;
  %182 = nn.dense(%180, %181, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.1/mlp/gate_proj/MatMul:0:0 */;
  %183 = reshape(%182, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.1/mlp/gate_proj/MatMul:0:0 */;
  %184 = sigmoid(%183) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.1/mlp/act_fn/Sigmoid:0:0 */;
  %185 = reshape(%179, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/mlp/up_proj/MatMul:0:0 */;
  %186 = transpose(%onnx::MatMul_8118, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.1/mlp/up_proj/MatMul:0:0 */;
  %187 = nn.dense(%185, %186, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.1/mlp/up_proj/MatMul:0:0 */;
  %188 = multiply(%183, %184) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.1/mlp/act_fn/Mul:0:0 */;
  %189 = reshape(%187, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.1/mlp/up_proj/MatMul:0:0 */;
  %190 = multiply(%188, %189) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.1/mlp/Mul:0:0 */;
  %191 = reshape(%190, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.1/mlp/down_proj/MatMul:0:0 */;
  %192 = transpose(%onnx::MatMul_8119, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.1/mlp/down_proj/MatMul:0:0 */;
  %193 = nn.dense(%191, %192, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.1/mlp/down_proj/MatMul:0:0 */;
  %194 = reshape(%193, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/mlp/down_proj/MatMul:0:0 */;
  %195 = add(%171, %194) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.1/Add_1:0:0 */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/input_layernorm/Cast:0:0 */;
  %197 = power(%196, 2f /* ty=float32 span=/model/layers.2/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/input_layernorm/Pow:0:0 */;
  %198 = mean(%197, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/input_layernorm/ReduceMean:0:0 */;
  %199 = add(%198, 1e-05f /* ty=float32 span=/model/layers.2/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/input_layernorm/Add:0:0 */;
  %200 = sqrt(%199) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/input_layernorm/Sqrt:0:0 */;
  %201 = divide(1f /* ty=float32 span=/model/layers.2/input_layernorm/Constant_2:0:0 */, %200) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/input_layernorm/Div:0:0 */;
  %202 = multiply(%196, %201) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/input_layernorm/Mul:0:0 */;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/input_layernorm/Cast_1:0:0 */;
  %204 = multiply(%model.layers.2.input_layernorm.weight, %203) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/input_layernorm/Mul_1:0:0 */;
  %205 = reshape(%204, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/q_proj/MatMul:0:0 */;
  %206 = transpose(%onnx::MatMul_8120, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.2/self_attn/q_proj/MatMul:0:0 */;
  %207 = nn.dense(%205, %206, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/q_proj/MatMul:0:0 */;
  %208 = reshape(%207, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/self_attn/q_proj/MatMul:0:0 */;
  %209 = reshape(%208, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.2/self_attn/Reshape:0:0 */;
  %210 = transpose(%209, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Transpose:0:0 */;
  %211 = strided_slice(%210, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.2/self_attn/Slice_1:0:0 */;
  %212 = negative(%211) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.2/self_attn/Neg:0:0 */;
  %213 = strided_slice(%210, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.2/self_attn/Slice:0:0 */;
  %214 = (%212, %213) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.2/self_attn/Concat:0:0 */;
  %215 = concatenate(%214, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Concat:0:0 */;
  %216 = multiply(%210, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Mul:0:0 */;
  %217 = multiply(%215, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Mul_1:0:0 */;
  %218 = add(%216, %217) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Add:0:0 */;
  %219 = multiply(%218, meta[relay.Constant][8] /* ty=Tensor[(1), float32] span=/model/layers.2/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Mul_6:0:0 */;
  %220 = reshape(%204, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/k_proj/MatMul:0:0 */;
  %221 = transpose(%onnx::MatMul_8121, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.2/self_attn/k_proj/MatMul:0:0 */;
  %222 = nn.dense(%220, %221, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.2/self_attn/k_proj/MatMul:0:0 */;
  %223 = reshape(%222, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.2/self_attn/k_proj/MatMul:0:0 */;
  %224 = reshape(%223, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.2/self_attn/Reshape_1:0:0 */;
  %225 = transpose(%224, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Transpose_1:0:0 */;
  %226 = strided_slice(%225, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.2/self_attn/Slice_3:0:0 */;
  %227 = negative(%226) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.2/self_attn/Neg_1:0:0 */;
  %228 = strided_slice(%225, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.2/self_attn/Slice_2:0:0 */;
  %229 = (%227, %228) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.2/self_attn/Concat_1:0:0 */;
  %230 = concatenate(%229, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Concat_1:0:0 */;
  %231 = multiply(%225, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Mul_2:0:0 */;
  %232 = multiply(%230, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Mul_3:0:0 */;
  %233 = add(%231, %232) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Add_1:0:0 */;
  %234 = expand_dims(%233, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.2/self_attn/Unsqueeze:0:0 */;
  %235 = broadcast_to(%234, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.2/self_attn/Expand:0:0 */;
  %236 = reshape(%235, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Reshape_3:0:0 */;
  %237 = transpose(%236, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.2/self_attn/Transpose_3:0:0 */;
  %238 = multiply(%237, meta[relay.Constant][9] /* ty=Tensor[(1), float32] span=/model/layers.2/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.2/self_attn/Mul_7:0:0 */;
  %239 = reshape(%238, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.2/self_attn/MatMul:0:0 */;
  %240 = reshape(%219, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.2/self_attn/MatMul:0:0 */;
  %241 = transpose(%239, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.2/self_attn/MatMul:0:0 */;
  %242 = nn.batch_matmul(%240, %241, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.2/self_attn/MatMul:0:0 */;
  %243 = reshape(%242, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.2/self_attn/MatMul:0:0 */;
  %244 = add(%243, meta[relay.Constant][10] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.2/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.2/self_attn/Add_2:0:0 */;
  %245 = nn.softmax(%244, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.2/self_attn/Softmax:0:0 */;
  %246 = reshape(%204, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/v_proj/MatMul:0:0 */;
  %247 = transpose(%onnx::MatMul_8122, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.2/self_attn/v_proj/MatMul:0:0 */;
  %248 = nn.dense(%246, %247, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.2/self_attn/v_proj/MatMul:0:0 */;
  %249 = reshape(%248, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.2/self_attn/v_proj/MatMul:0:0 */;
  %250 = reshape(%249, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.2/self_attn/Reshape_2:0:0 */;
  %251 = transpose(%250, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.2/self_attn/Transpose_2:0:0 */;
  %252 = expand_dims(%251, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.2/self_attn/Unsqueeze_1:0:0 */;
  %253 = broadcast_to(%252, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.2/self_attn/Expand_1:0:0 */;
  %254 = reshape(%253, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/Reshape_4:0:0 */;
  %255 = reshape(%254, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.2/self_attn/MatMul_1:0:0 */;
  %256 = reshape(%245, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.2/self_attn/MatMul_1:0:0 */;
  %257 = transpose(%255, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.2/self_attn/MatMul_1:0:0 */;
  %258 = nn.batch_matmul(%256, %257, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.2/self_attn/MatMul_1:0:0 */;
  %259 = reshape(%258, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.2/self_attn/MatMul_1:0:0 */;
  %260 = transpose(%259, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.2/self_attn/Transpose_4:0:0 */;
  %261 = reshape(%260, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/self_attn/Reshape_5:0:0 */;
  %262 = reshape(%261, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/o_proj/MatMul:0:0 */;
  %263 = transpose(%onnx::MatMul_8188, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.2/self_attn/o_proj/MatMul:0:0 */;
  %264 = nn.dense(%262, %263, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/self_attn/o_proj/MatMul:0:0 */;
  %265 = reshape(%264, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/self_attn/o_proj/MatMul:0:0 */;
  %266 = add(%196, %265) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/Add:0:0 */;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/post_attention_layernorm/Cast:0:0 */;
  %268 = power(%267, 2f /* ty=float32 span=/model/layers.2/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/post_attention_layernorm/Pow:0:0 */;
  %269 = mean(%268, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/post_attention_layernorm/ReduceMean:0:0 */;
  %270 = add(%269, 1e-05f /* ty=float32 span=/model/layers.2/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/post_attention_layernorm/Add:0:0 */;
  %271 = sqrt(%270) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/post_attention_layernorm/Sqrt:0:0 */;
  %272 = divide(1f /* ty=float32 span=/model/layers.2/post_attention_layernorm/Constant_2:0:0 */, %271) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.2/post_attention_layernorm/Div:0:0 */;
  %273 = multiply(%267, %272) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/post_attention_layernorm/Mul:0:0 */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/post_attention_layernorm/Cast_1:0:0 */;
  %275 = multiply(%model.layers.2.post_attention_layernorm.weight, %274) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/post_attention_layernorm/Mul_1:0:0 */;
  %276 = reshape(%275, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/mlp/gate_proj/MatMul:0:0 */;
  %277 = transpose(%onnx::MatMul_8189, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.2/mlp/gate_proj/MatMul:0:0 */;
  %278 = nn.dense(%276, %277, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.2/mlp/gate_proj/MatMul:0:0 */;
  %279 = reshape(%278, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.2/mlp/gate_proj/MatMul:0:0 */;
  %280 = sigmoid(%279) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.2/mlp/act_fn/Sigmoid:0:0 */;
  %281 = reshape(%275, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/mlp/up_proj/MatMul:0:0 */;
  %282 = transpose(%onnx::MatMul_8190, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.2/mlp/up_proj/MatMul:0:0 */;
  %283 = nn.dense(%281, %282, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.2/mlp/up_proj/MatMul:0:0 */;
  %284 = multiply(%279, %280) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.2/mlp/act_fn/Mul:0:0 */;
  %285 = reshape(%283, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.2/mlp/up_proj/MatMul:0:0 */;
  %286 = multiply(%284, %285) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.2/mlp/Mul:0:0 */;
  %287 = reshape(%286, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.2/mlp/down_proj/MatMul:0:0 */;
  %288 = transpose(%onnx::MatMul_8191, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.2/mlp/down_proj/MatMul:0:0 */;
  %289 = nn.dense(%287, %288, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.2/mlp/down_proj/MatMul:0:0 */;
  %290 = reshape(%289, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/mlp/down_proj/MatMul:0:0 */;
  %291 = add(%267, %290) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.2/Add_1:0:0 */;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/input_layernorm/Cast:0:0 */;
  %293 = power(%292, 2f /* ty=float32 span=/model/layers.3/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/input_layernorm/Pow:0:0 */;
  %294 = mean(%293, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/input_layernorm/ReduceMean:0:0 */;
  %295 = add(%294, 1e-05f /* ty=float32 span=/model/layers.3/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/input_layernorm/Add:0:0 */;
  %296 = sqrt(%295) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/input_layernorm/Sqrt:0:0 */;
  %297 = divide(1f /* ty=float32 span=/model/layers.3/input_layernorm/Constant_2:0:0 */, %296) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/input_layernorm/Div:0:0 */;
  %298 = multiply(%292, %297) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/input_layernorm/Mul:0:0 */;
  %299 = cast(%298, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/input_layernorm/Cast_1:0:0 */;
  %300 = multiply(%model.layers.3.input_layernorm.weight, %299) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/input_layernorm/Mul_1:0:0 */;
  %301 = reshape(%300, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/q_proj/MatMul:0:0 */;
  %302 = transpose(%onnx::MatMul_8192, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.3/self_attn/q_proj/MatMul:0:0 */;
  %303 = nn.dense(%301, %302, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/q_proj/MatMul:0:0 */;
  %304 = reshape(%303, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/self_attn/q_proj/MatMul:0:0 */;
  %305 = reshape(%304, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.3/self_attn/Reshape:0:0 */;
  %306 = transpose(%305, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Transpose:0:0 */;
  %307 = strided_slice(%306, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.3/self_attn/Slice_1:0:0 */;
  %308 = negative(%307) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.3/self_attn/Neg:0:0 */;
  %309 = strided_slice(%306, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.3/self_attn/Slice:0:0 */;
  %310 = (%308, %309) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.3/self_attn/Concat:0:0 */;
  %311 = concatenate(%310, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Concat:0:0 */;
  %312 = multiply(%306, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Mul:0:0 */;
  %313 = multiply(%311, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Mul_1:0:0 */;
  %314 = add(%312, %313) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Add:0:0 */;
  %315 = multiply(%314, meta[relay.Constant][11] /* ty=Tensor[(1), float32] span=/model/layers.3/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Mul_6:0:0 */;
  %316 = reshape(%300, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/k_proj/MatMul:0:0 */;
  %317 = transpose(%onnx::MatMul_8193, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.3/self_attn/k_proj/MatMul:0:0 */;
  %318 = nn.dense(%316, %317, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.3/self_attn/k_proj/MatMul:0:0 */;
  %319 = reshape(%318, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.3/self_attn/k_proj/MatMul:0:0 */;
  %320 = reshape(%319, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.3/self_attn/Reshape_1:0:0 */;
  %321 = transpose(%320, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Transpose_1:0:0 */;
  %322 = strided_slice(%321, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.3/self_attn/Slice_3:0:0 */;
  %323 = negative(%322) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.3/self_attn/Neg_1:0:0 */;
  %324 = strided_slice(%321, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.3/self_attn/Slice_2:0:0 */;
  %325 = (%323, %324) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.3/self_attn/Concat_1:0:0 */;
  %326 = concatenate(%325, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Concat_1:0:0 */;
  %327 = multiply(%321, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Mul_2:0:0 */;
  %328 = multiply(%326, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Mul_3:0:0 */;
  %329 = add(%327, %328) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Add_1:0:0 */;
  %330 = expand_dims(%329, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.3/self_attn/Unsqueeze:0:0 */;
  %331 = broadcast_to(%330, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.3/self_attn/Expand:0:0 */;
  %332 = reshape(%331, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Reshape_3:0:0 */;
  %333 = transpose(%332, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.3/self_attn/Transpose_3:0:0 */;
  %334 = multiply(%333, meta[relay.Constant][12] /* ty=Tensor[(1), float32] span=/model/layers.3/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.3/self_attn/Mul_7:0:0 */;
  %335 = reshape(%334, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.3/self_attn/MatMul:0:0 */;
  %336 = reshape(%315, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.3/self_attn/MatMul:0:0 */;
  %337 = transpose(%335, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.3/self_attn/MatMul:0:0 */;
  %338 = nn.batch_matmul(%336, %337, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.3/self_attn/MatMul:0:0 */;
  %339 = reshape(%338, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.3/self_attn/MatMul:0:0 */;
  %340 = add(%339, meta[relay.Constant][13] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.3/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.3/self_attn/Add_2:0:0 */;
  %341 = nn.softmax(%340, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.3/self_attn/Softmax:0:0 */;
  %342 = reshape(%300, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/v_proj/MatMul:0:0 */;
  %343 = transpose(%onnx::MatMul_8194, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.3/self_attn/v_proj/MatMul:0:0 */;
  %344 = nn.dense(%342, %343, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.3/self_attn/v_proj/MatMul:0:0 */;
  %345 = reshape(%344, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.3/self_attn/v_proj/MatMul:0:0 */;
  %346 = reshape(%345, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.3/self_attn/Reshape_2:0:0 */;
  %347 = transpose(%346, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.3/self_attn/Transpose_2:0:0 */;
  %348 = expand_dims(%347, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.3/self_attn/Unsqueeze_1:0:0 */;
  %349 = broadcast_to(%348, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.3/self_attn/Expand_1:0:0 */;
  %350 = reshape(%349, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/Reshape_4:0:0 */;
  %351 = reshape(%350, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.3/self_attn/MatMul_1:0:0 */;
  %352 = reshape(%341, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.3/self_attn/MatMul_1:0:0 */;
  %353 = transpose(%351, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.3/self_attn/MatMul_1:0:0 */;
  %354 = nn.batch_matmul(%352, %353, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.3/self_attn/MatMul_1:0:0 */;
  %355 = reshape(%354, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.3/self_attn/MatMul_1:0:0 */;
  %356 = transpose(%355, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.3/self_attn/Transpose_4:0:0 */;
  %357 = reshape(%356, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/self_attn/Reshape_5:0:0 */;
  %358 = reshape(%357, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/o_proj/MatMul:0:0 */;
  %359 = transpose(%onnx::MatMul_8260, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.3/self_attn/o_proj/MatMul:0:0 */;
  %360 = nn.dense(%358, %359, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/self_attn/o_proj/MatMul:0:0 */;
  %361 = reshape(%360, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/self_attn/o_proj/MatMul:0:0 */;
  %362 = add(%292, %361) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/Add:0:0 */;
  %363 = cast(%362, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/post_attention_layernorm/Cast:0:0 */;
  %364 = power(%363, 2f /* ty=float32 span=/model/layers.3/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/post_attention_layernorm/Pow:0:0 */;
  %365 = mean(%364, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/post_attention_layernorm/ReduceMean:0:0 */;
  %366 = add(%365, 1e-05f /* ty=float32 span=/model/layers.3/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/post_attention_layernorm/Add:0:0 */;
  %367 = sqrt(%366) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/post_attention_layernorm/Sqrt:0:0 */;
  %368 = divide(1f /* ty=float32 span=/model/layers.3/post_attention_layernorm/Constant_2:0:0 */, %367) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.3/post_attention_layernorm/Div:0:0 */;
  %369 = multiply(%363, %368) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/post_attention_layernorm/Mul:0:0 */;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/post_attention_layernorm/Cast_1:0:0 */;
  %371 = multiply(%model.layers.3.post_attention_layernorm.weight, %370) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/post_attention_layernorm/Mul_1:0:0 */;
  %372 = reshape(%371, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/mlp/gate_proj/MatMul:0:0 */;
  %373 = transpose(%onnx::MatMul_8261, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.3/mlp/gate_proj/MatMul:0:0 */;
  %374 = nn.dense(%372, %373, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.3/mlp/gate_proj/MatMul:0:0 */;
  %375 = reshape(%374, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.3/mlp/gate_proj/MatMul:0:0 */;
  %376 = sigmoid(%375) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.3/mlp/act_fn/Sigmoid:0:0 */;
  %377 = reshape(%371, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/mlp/up_proj/MatMul:0:0 */;
  %378 = transpose(%onnx::MatMul_8262, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.3/mlp/up_proj/MatMul:0:0 */;
  %379 = nn.dense(%377, %378, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.3/mlp/up_proj/MatMul:0:0 */;
  %380 = multiply(%375, %376) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.3/mlp/act_fn/Mul:0:0 */;
  %381 = reshape(%379, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.3/mlp/up_proj/MatMul:0:0 */;
  %382 = multiply(%380, %381) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.3/mlp/Mul:0:0 */;
  %383 = reshape(%382, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.3/mlp/down_proj/MatMul:0:0 */;
  %384 = transpose(%onnx::MatMul_8263, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.3/mlp/down_proj/MatMul:0:0 */;
  %385 = nn.dense(%383, %384, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.3/mlp/down_proj/MatMul:0:0 */;
  %386 = reshape(%385, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/mlp/down_proj/MatMul:0:0 */;
  %387 = add(%363, %386) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.3/Add_1:0:0 */;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/input_layernorm/Cast:0:0 */;
  %389 = power(%388, 2f /* ty=float32 span=/model/layers.4/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/input_layernorm/Pow:0:0 */;
  %390 = mean(%389, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/input_layernorm/ReduceMean:0:0 */;
  %391 = add(%390, 1e-05f /* ty=float32 span=/model/layers.4/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/input_layernorm/Add:0:0 */;
  %392 = sqrt(%391) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/input_layernorm/Sqrt:0:0 */;
  %393 = divide(1f /* ty=float32 span=/model/layers.4/input_layernorm/Constant_2:0:0 */, %392) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/input_layernorm/Div:0:0 */;
  %394 = multiply(%388, %393) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/input_layernorm/Mul:0:0 */;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/input_layernorm/Cast_1:0:0 */;
  %396 = multiply(%model.layers.4.input_layernorm.weight, %395) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/input_layernorm/Mul_1:0:0 */;
  %397 = reshape(%396, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/q_proj/MatMul:0:0 */;
  %398 = transpose(%onnx::MatMul_8264, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.4/self_attn/q_proj/MatMul:0:0 */;
  %399 = nn.dense(%397, %398, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/q_proj/MatMul:0:0 */;
  %400 = reshape(%399, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/self_attn/q_proj/MatMul:0:0 */;
  %401 = reshape(%400, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.4/self_attn/Reshape:0:0 */;
  %402 = transpose(%401, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Transpose:0:0 */;
  %403 = strided_slice(%402, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.4/self_attn/Slice_1:0:0 */;
  %404 = negative(%403) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.4/self_attn/Neg:0:0 */;
  %405 = strided_slice(%402, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.4/self_attn/Slice:0:0 */;
  %406 = (%404, %405) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.4/self_attn/Concat:0:0 */;
  %407 = concatenate(%406, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Concat:0:0 */;
  %408 = multiply(%402, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Mul:0:0 */;
  %409 = multiply(%407, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Mul_1:0:0 */;
  %410 = add(%408, %409) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Add:0:0 */;
  %411 = multiply(%410, meta[relay.Constant][14] /* ty=Tensor[(1), float32] span=/model/layers.4/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Mul_6:0:0 */;
  %412 = reshape(%396, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/k_proj/MatMul:0:0 */;
  %413 = transpose(%onnx::MatMul_8265, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.4/self_attn/k_proj/MatMul:0:0 */;
  %414 = nn.dense(%412, %413, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.4/self_attn/k_proj/MatMul:0:0 */;
  %415 = reshape(%414, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.4/self_attn/k_proj/MatMul:0:0 */;
  %416 = reshape(%415, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.4/self_attn/Reshape_1:0:0 */;
  %417 = transpose(%416, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Transpose_1:0:0 */;
  %418 = strided_slice(%417, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.4/self_attn/Slice_3:0:0 */;
  %419 = negative(%418) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.4/self_attn/Neg_1:0:0 */;
  %420 = strided_slice(%417, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.4/self_attn/Slice_2:0:0 */;
  %421 = (%419, %420) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.4/self_attn/Concat_1:0:0 */;
  %422 = concatenate(%421, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Concat_1:0:0 */;
  %423 = multiply(%417, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Mul_2:0:0 */;
  %424 = multiply(%422, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Mul_3:0:0 */;
  %425 = add(%423, %424) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Add_1:0:0 */;
  %426 = expand_dims(%425, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.4/self_attn/Unsqueeze:0:0 */;
  %427 = broadcast_to(%426, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.4/self_attn/Expand:0:0 */;
  %428 = reshape(%427, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Reshape_3:0:0 */;
  %429 = transpose(%428, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.4/self_attn/Transpose_3:0:0 */;
  %430 = multiply(%429, meta[relay.Constant][15] /* ty=Tensor[(1), float32] span=/model/layers.4/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.4/self_attn/Mul_7:0:0 */;
  %431 = reshape(%430, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.4/self_attn/MatMul:0:0 */;
  %432 = reshape(%411, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.4/self_attn/MatMul:0:0 */;
  %433 = transpose(%431, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.4/self_attn/MatMul:0:0 */;
  %434 = nn.batch_matmul(%432, %433, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.4/self_attn/MatMul:0:0 */;
  %435 = reshape(%434, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.4/self_attn/MatMul:0:0 */;
  %436 = add(%435, meta[relay.Constant][16] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.4/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.4/self_attn/Add_2:0:0 */;
  %437 = nn.softmax(%436, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.4/self_attn/Softmax:0:0 */;
  %438 = reshape(%396, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/v_proj/MatMul:0:0 */;
  %439 = transpose(%onnx::MatMul_8266, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.4/self_attn/v_proj/MatMul:0:0 */;
  %440 = nn.dense(%438, %439, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.4/self_attn/v_proj/MatMul:0:0 */;
  %441 = reshape(%440, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.4/self_attn/v_proj/MatMul:0:0 */;
  %442 = reshape(%441, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.4/self_attn/Reshape_2:0:0 */;
  %443 = transpose(%442, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.4/self_attn/Transpose_2:0:0 */;
  %444 = expand_dims(%443, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.4/self_attn/Unsqueeze_1:0:0 */;
  %445 = broadcast_to(%444, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.4/self_attn/Expand_1:0:0 */;
  %446 = reshape(%445, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/Reshape_4:0:0 */;
  %447 = reshape(%446, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.4/self_attn/MatMul_1:0:0 */;
  %448 = reshape(%437, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.4/self_attn/MatMul_1:0:0 */;
  %449 = transpose(%447, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.4/self_attn/MatMul_1:0:0 */;
  %450 = nn.batch_matmul(%448, %449, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.4/self_attn/MatMul_1:0:0 */;
  %451 = reshape(%450, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.4/self_attn/MatMul_1:0:0 */;
  %452 = transpose(%451, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.4/self_attn/Transpose_4:0:0 */;
  %453 = reshape(%452, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/self_attn/Reshape_5:0:0 */;
  %454 = reshape(%453, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/o_proj/MatMul:0:0 */;
  %455 = transpose(%onnx::MatMul_8332, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.4/self_attn/o_proj/MatMul:0:0 */;
  %456 = nn.dense(%454, %455, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/self_attn/o_proj/MatMul:0:0 */;
  %457 = reshape(%456, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/self_attn/o_proj/MatMul:0:0 */;
  %458 = add(%388, %457) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/Add:0:0 */;
  %459 = cast(%458, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/post_attention_layernorm/Cast:0:0 */;
  %460 = power(%459, 2f /* ty=float32 span=/model/layers.4/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/post_attention_layernorm/Pow:0:0 */;
  %461 = mean(%460, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/post_attention_layernorm/ReduceMean:0:0 */;
  %462 = add(%461, 1e-05f /* ty=float32 span=/model/layers.4/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/post_attention_layernorm/Add:0:0 */;
  %463 = sqrt(%462) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/post_attention_layernorm/Sqrt:0:0 */;
  %464 = divide(1f /* ty=float32 span=/model/layers.4/post_attention_layernorm/Constant_2:0:0 */, %463) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.4/post_attention_layernorm/Div:0:0 */;
  %465 = multiply(%459, %464) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/post_attention_layernorm/Mul:0:0 */;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/post_attention_layernorm/Cast_1:0:0 */;
  %467 = multiply(%model.layers.4.post_attention_layernorm.weight, %466) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/post_attention_layernorm/Mul_1:0:0 */;
  %468 = reshape(%467, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/mlp/gate_proj/MatMul:0:0 */;
  %469 = transpose(%onnx::MatMul_8333, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.4/mlp/gate_proj/MatMul:0:0 */;
  %470 = nn.dense(%468, %469, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.4/mlp/gate_proj/MatMul:0:0 */;
  %471 = reshape(%470, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.4/mlp/gate_proj/MatMul:0:0 */;
  %472 = sigmoid(%471) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.4/mlp/act_fn/Sigmoid:0:0 */;
  %473 = reshape(%467, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/mlp/up_proj/MatMul:0:0 */;
  %474 = transpose(%onnx::MatMul_8334, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.4/mlp/up_proj/MatMul:0:0 */;
  %475 = nn.dense(%473, %474, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.4/mlp/up_proj/MatMul:0:0 */;
  %476 = multiply(%471, %472) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.4/mlp/act_fn/Mul:0:0 */;
  %477 = reshape(%475, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.4/mlp/up_proj/MatMul:0:0 */;
  %478 = multiply(%476, %477) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.4/mlp/Mul:0:0 */;
  %479 = reshape(%478, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.4/mlp/down_proj/MatMul:0:0 */;
  %480 = transpose(%onnx::MatMul_8335, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.4/mlp/down_proj/MatMul:0:0 */;
  %481 = nn.dense(%479, %480, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.4/mlp/down_proj/MatMul:0:0 */;
  %482 = reshape(%481, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/mlp/down_proj/MatMul:0:0 */;
  %483 = add(%459, %482) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.4/Add_1:0:0 */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/input_layernorm/Cast:0:0 */;
  %485 = power(%484, 2f /* ty=float32 span=/model/layers.5/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/input_layernorm/Pow:0:0 */;
  %486 = mean(%485, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/input_layernorm/ReduceMean:0:0 */;
  %487 = add(%486, 1e-05f /* ty=float32 span=/model/layers.5/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/input_layernorm/Add:0:0 */;
  %488 = sqrt(%487) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/input_layernorm/Sqrt:0:0 */;
  %489 = divide(1f /* ty=float32 span=/model/layers.5/input_layernorm/Constant_2:0:0 */, %488) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/input_layernorm/Div:0:0 */;
  %490 = multiply(%484, %489) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/input_layernorm/Mul:0:0 */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/input_layernorm/Cast_1:0:0 */;
  %492 = multiply(%model.layers.5.input_layernorm.weight, %491) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/input_layernorm/Mul_1:0:0 */;
  %493 = reshape(%492, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/q_proj/MatMul:0:0 */;
  %494 = transpose(%onnx::MatMul_8336, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.5/self_attn/q_proj/MatMul:0:0 */;
  %495 = nn.dense(%493, %494, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/q_proj/MatMul:0:0 */;
  %496 = reshape(%495, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/self_attn/q_proj/MatMul:0:0 */;
  %497 = reshape(%496, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.5/self_attn/Reshape:0:0 */;
  %498 = transpose(%497, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Transpose:0:0 */;
  %499 = strided_slice(%498, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.5/self_attn/Slice_1:0:0 */;
  %500 = negative(%499) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.5/self_attn/Neg:0:0 */;
  %501 = strided_slice(%498, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.5/self_attn/Slice:0:0 */;
  %502 = (%500, %501) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.5/self_attn/Concat:0:0 */;
  %503 = concatenate(%502, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Concat:0:0 */;
  %504 = multiply(%498, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Mul:0:0 */;
  %505 = multiply(%503, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Mul_1:0:0 */;
  %506 = add(%504, %505) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Add:0:0 */;
  %507 = multiply(%506, meta[relay.Constant][17] /* ty=Tensor[(1), float32] span=/model/layers.5/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Mul_6:0:0 */;
  %508 = reshape(%492, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/k_proj/MatMul:0:0 */;
  %509 = transpose(%onnx::MatMul_8337, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.5/self_attn/k_proj/MatMul:0:0 */;
  %510 = nn.dense(%508, %509, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.5/self_attn/k_proj/MatMul:0:0 */;
  %511 = reshape(%510, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.5/self_attn/k_proj/MatMul:0:0 */;
  %512 = reshape(%511, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.5/self_attn/Reshape_1:0:0 */;
  %513 = transpose(%512, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Transpose_1:0:0 */;
  %514 = strided_slice(%513, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.5/self_attn/Slice_3:0:0 */;
  %515 = negative(%514) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.5/self_attn/Neg_1:0:0 */;
  %516 = strided_slice(%513, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.5/self_attn/Slice_2:0:0 */;
  %517 = (%515, %516) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.5/self_attn/Concat_1:0:0 */;
  %518 = concatenate(%517, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Concat_1:0:0 */;
  %519 = multiply(%513, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Mul_2:0:0 */;
  %520 = multiply(%518, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Mul_3:0:0 */;
  %521 = add(%519, %520) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Add_1:0:0 */;
  %522 = expand_dims(%521, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.5/self_attn/Unsqueeze:0:0 */;
  %523 = broadcast_to(%522, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.5/self_attn/Expand:0:0 */;
  %524 = reshape(%523, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Reshape_3:0:0 */;
  %525 = transpose(%524, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.5/self_attn/Transpose_3:0:0 */;
  %526 = multiply(%525, meta[relay.Constant][18] /* ty=Tensor[(1), float32] span=/model/layers.5/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.5/self_attn/Mul_7:0:0 */;
  %527 = reshape(%526, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.5/self_attn/MatMul:0:0 */;
  %528 = reshape(%507, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.5/self_attn/MatMul:0:0 */;
  %529 = transpose(%527, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.5/self_attn/MatMul:0:0 */;
  %530 = nn.batch_matmul(%528, %529, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.5/self_attn/MatMul:0:0 */;
  %531 = reshape(%530, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.5/self_attn/MatMul:0:0 */;
  %532 = add(%531, meta[relay.Constant][19] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.5/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.5/self_attn/Add_2:0:0 */;
  %533 = nn.softmax(%532, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.5/self_attn/Softmax:0:0 */;
  %534 = reshape(%492, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/v_proj/MatMul:0:0 */;
  %535 = transpose(%onnx::MatMul_8338, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.5/self_attn/v_proj/MatMul:0:0 */;
  %536 = nn.dense(%534, %535, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.5/self_attn/v_proj/MatMul:0:0 */;
  %537 = reshape(%536, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.5/self_attn/v_proj/MatMul:0:0 */;
  %538 = reshape(%537, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.5/self_attn/Reshape_2:0:0 */;
  %539 = transpose(%538, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.5/self_attn/Transpose_2:0:0 */;
  %540 = expand_dims(%539, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.5/self_attn/Unsqueeze_1:0:0 */;
  %541 = broadcast_to(%540, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.5/self_attn/Expand_1:0:0 */;
  %542 = reshape(%541, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/Reshape_4:0:0 */;
  %543 = reshape(%542, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.5/self_attn/MatMul_1:0:0 */;
  %544 = reshape(%533, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.5/self_attn/MatMul_1:0:0 */;
  %545 = transpose(%543, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.5/self_attn/MatMul_1:0:0 */;
  %546 = nn.batch_matmul(%544, %545, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.5/self_attn/MatMul_1:0:0 */;
  %547 = reshape(%546, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.5/self_attn/MatMul_1:0:0 */;
  %548 = transpose(%547, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.5/self_attn/Transpose_4:0:0 */;
  %549 = reshape(%548, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/self_attn/Reshape_5:0:0 */;
  %550 = reshape(%549, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/o_proj/MatMul:0:0 */;
  %551 = transpose(%onnx::MatMul_8404, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.5/self_attn/o_proj/MatMul:0:0 */;
  %552 = nn.dense(%550, %551, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/self_attn/o_proj/MatMul:0:0 */;
  %553 = reshape(%552, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/self_attn/o_proj/MatMul:0:0 */;
  %554 = add(%484, %553) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/Add:0:0 */;
  %555 = cast(%554, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/post_attention_layernorm/Cast:0:0 */;
  %556 = power(%555, 2f /* ty=float32 span=/model/layers.5/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/post_attention_layernorm/Pow:0:0 */;
  %557 = mean(%556, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/post_attention_layernorm/ReduceMean:0:0 */;
  %558 = add(%557, 1e-05f /* ty=float32 span=/model/layers.5/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/post_attention_layernorm/Add:0:0 */;
  %559 = sqrt(%558) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/post_attention_layernorm/Sqrt:0:0 */;
  %560 = divide(1f /* ty=float32 span=/model/layers.5/post_attention_layernorm/Constant_2:0:0 */, %559) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.5/post_attention_layernorm/Div:0:0 */;
  %561 = multiply(%555, %560) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/post_attention_layernorm/Mul:0:0 */;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/post_attention_layernorm/Cast_1:0:0 */;
  %563 = multiply(%model.layers.5.post_attention_layernorm.weight, %562) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/post_attention_layernorm/Mul_1:0:0 */;
  %564 = reshape(%563, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/mlp/gate_proj/MatMul:0:0 */;
  %565 = transpose(%onnx::MatMul_8405, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.5/mlp/gate_proj/MatMul:0:0 */;
  %566 = nn.dense(%564, %565, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.5/mlp/gate_proj/MatMul:0:0 */;
  %567 = reshape(%566, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.5/mlp/gate_proj/MatMul:0:0 */;
  %568 = sigmoid(%567) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.5/mlp/act_fn/Sigmoid:0:0 */;
  %569 = reshape(%563, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/mlp/up_proj/MatMul:0:0 */;
  %570 = transpose(%onnx::MatMul_8406, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.5/mlp/up_proj/MatMul:0:0 */;
  %571 = nn.dense(%569, %570, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.5/mlp/up_proj/MatMul:0:0 */;
  %572 = multiply(%567, %568) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.5/mlp/act_fn/Mul:0:0 */;
  %573 = reshape(%571, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.5/mlp/up_proj/MatMul:0:0 */;
  %574 = multiply(%572, %573) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.5/mlp/Mul:0:0 */;
  %575 = reshape(%574, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.5/mlp/down_proj/MatMul:0:0 */;
  %576 = transpose(%onnx::MatMul_8407, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.5/mlp/down_proj/MatMul:0:0 */;
  %577 = nn.dense(%575, %576, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.5/mlp/down_proj/MatMul:0:0 */;
  %578 = reshape(%577, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/mlp/down_proj/MatMul:0:0 */;
  %579 = add(%555, %578) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.5/Add_1:0:0 */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/input_layernorm/Cast:0:0 */;
  %581 = power(%580, 2f /* ty=float32 span=/model/layers.6/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/input_layernorm/Pow:0:0 */;
  %582 = mean(%581, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/input_layernorm/ReduceMean:0:0 */;
  %583 = add(%582, 1e-05f /* ty=float32 span=/model/layers.6/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/input_layernorm/Add:0:0 */;
  %584 = sqrt(%583) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/input_layernorm/Sqrt:0:0 */;
  %585 = divide(1f /* ty=float32 span=/model/layers.6/input_layernorm/Constant_2:0:0 */, %584) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/input_layernorm/Div:0:0 */;
  %586 = multiply(%580, %585) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/input_layernorm/Mul:0:0 */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/input_layernorm/Cast_1:0:0 */;
  %588 = multiply(%model.layers.6.input_layernorm.weight, %587) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/input_layernorm/Mul_1:0:0 */;
  %589 = reshape(%588, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/q_proj/MatMul:0:0 */;
  %590 = transpose(%onnx::MatMul_8408, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.6/self_attn/q_proj/MatMul:0:0 */;
  %591 = nn.dense(%589, %590, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/q_proj/MatMul:0:0 */;
  %592 = reshape(%591, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/self_attn/q_proj/MatMul:0:0 */;
  %593 = reshape(%592, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.6/self_attn/Reshape:0:0 */;
  %594 = transpose(%593, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Transpose:0:0 */;
  %595 = strided_slice(%594, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.6/self_attn/Slice_1:0:0 */;
  %596 = negative(%595) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.6/self_attn/Neg:0:0 */;
  %597 = strided_slice(%594, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.6/self_attn/Slice:0:0 */;
  %598 = (%596, %597) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.6/self_attn/Concat:0:0 */;
  %599 = concatenate(%598, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Concat:0:0 */;
  %600 = multiply(%594, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Mul:0:0 */;
  %601 = multiply(%599, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Mul_1:0:0 */;
  %602 = add(%600, %601) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Add:0:0 */;
  %603 = multiply(%602, meta[relay.Constant][20] /* ty=Tensor[(1), float32] span=/model/layers.6/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Mul_6:0:0 */;
  %604 = reshape(%588, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/k_proj/MatMul:0:0 */;
  %605 = transpose(%onnx::MatMul_8409, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.6/self_attn/k_proj/MatMul:0:0 */;
  %606 = nn.dense(%604, %605, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.6/self_attn/k_proj/MatMul:0:0 */;
  %607 = reshape(%606, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.6/self_attn/k_proj/MatMul:0:0 */;
  %608 = reshape(%607, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.6/self_attn/Reshape_1:0:0 */;
  %609 = transpose(%608, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Transpose_1:0:0 */;
  %610 = strided_slice(%609, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.6/self_attn/Slice_3:0:0 */;
  %611 = negative(%610) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.6/self_attn/Neg_1:0:0 */;
  %612 = strided_slice(%609, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.6/self_attn/Slice_2:0:0 */;
  %613 = (%611, %612) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.6/self_attn/Concat_1:0:0 */;
  %614 = concatenate(%613, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Concat_1:0:0 */;
  %615 = multiply(%609, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Mul_2:0:0 */;
  %616 = multiply(%614, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Mul_3:0:0 */;
  %617 = add(%615, %616) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Add_1:0:0 */;
  %618 = expand_dims(%617, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.6/self_attn/Unsqueeze:0:0 */;
  %619 = broadcast_to(%618, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.6/self_attn/Expand:0:0 */;
  %620 = reshape(%619, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Reshape_3:0:0 */;
  %621 = transpose(%620, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.6/self_attn/Transpose_3:0:0 */;
  %622 = multiply(%621, meta[relay.Constant][21] /* ty=Tensor[(1), float32] span=/model/layers.6/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.6/self_attn/Mul_7:0:0 */;
  %623 = reshape(%622, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.6/self_attn/MatMul:0:0 */;
  %624 = reshape(%603, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.6/self_attn/MatMul:0:0 */;
  %625 = transpose(%623, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.6/self_attn/MatMul:0:0 */;
  %626 = nn.batch_matmul(%624, %625, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.6/self_attn/MatMul:0:0 */;
  %627 = reshape(%626, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.6/self_attn/MatMul:0:0 */;
  %628 = add(%627, meta[relay.Constant][22] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.6/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.6/self_attn/Add_2:0:0 */;
  %629 = nn.softmax(%628, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.6/self_attn/Softmax:0:0 */;
  %630 = reshape(%588, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/v_proj/MatMul:0:0 */;
  %631 = transpose(%onnx::MatMul_8410, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.6/self_attn/v_proj/MatMul:0:0 */;
  %632 = nn.dense(%630, %631, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.6/self_attn/v_proj/MatMul:0:0 */;
  %633 = reshape(%632, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.6/self_attn/v_proj/MatMul:0:0 */;
  %634 = reshape(%633, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.6/self_attn/Reshape_2:0:0 */;
  %635 = transpose(%634, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.6/self_attn/Transpose_2:0:0 */;
  %636 = expand_dims(%635, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.6/self_attn/Unsqueeze_1:0:0 */;
  %637 = broadcast_to(%636, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.6/self_attn/Expand_1:0:0 */;
  %638 = reshape(%637, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/Reshape_4:0:0 */;
  %639 = reshape(%638, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.6/self_attn/MatMul_1:0:0 */;
  %640 = reshape(%629, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.6/self_attn/MatMul_1:0:0 */;
  %641 = transpose(%639, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.6/self_attn/MatMul_1:0:0 */;
  %642 = nn.batch_matmul(%640, %641, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.6/self_attn/MatMul_1:0:0 */;
  %643 = reshape(%642, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.6/self_attn/MatMul_1:0:0 */;
  %644 = transpose(%643, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.6/self_attn/Transpose_4:0:0 */;
  %645 = reshape(%644, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/self_attn/Reshape_5:0:0 */;
  %646 = reshape(%645, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/o_proj/MatMul:0:0 */;
  %647 = transpose(%onnx::MatMul_8476, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.6/self_attn/o_proj/MatMul:0:0 */;
  %648 = nn.dense(%646, %647, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/self_attn/o_proj/MatMul:0:0 */;
  %649 = reshape(%648, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/self_attn/o_proj/MatMul:0:0 */;
  %650 = add(%580, %649) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/Add:0:0 */;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/post_attention_layernorm/Cast:0:0 */;
  %652 = power(%651, 2f /* ty=float32 span=/model/layers.6/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/post_attention_layernorm/Pow:0:0 */;
  %653 = mean(%652, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/post_attention_layernorm/ReduceMean:0:0 */;
  %654 = add(%653, 1e-05f /* ty=float32 span=/model/layers.6/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/post_attention_layernorm/Add:0:0 */;
  %655 = sqrt(%654) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/post_attention_layernorm/Sqrt:0:0 */;
  %656 = divide(1f /* ty=float32 span=/model/layers.6/post_attention_layernorm/Constant_2:0:0 */, %655) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.6/post_attention_layernorm/Div:0:0 */;
  %657 = multiply(%651, %656) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/post_attention_layernorm/Mul:0:0 */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/post_attention_layernorm/Cast_1:0:0 */;
  %659 = multiply(%model.layers.6.post_attention_layernorm.weight, %658) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/post_attention_layernorm/Mul_1:0:0 */;
  %660 = reshape(%659, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/mlp/gate_proj/MatMul:0:0 */;
  %661 = transpose(%onnx::MatMul_8477, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.6/mlp/gate_proj/MatMul:0:0 */;
  %662 = nn.dense(%660, %661, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.6/mlp/gate_proj/MatMul:0:0 */;
  %663 = reshape(%662, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.6/mlp/gate_proj/MatMul:0:0 */;
  %664 = sigmoid(%663) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.6/mlp/act_fn/Sigmoid:0:0 */;
  %665 = reshape(%659, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/mlp/up_proj/MatMul:0:0 */;
  %666 = transpose(%onnx::MatMul_8478, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.6/mlp/up_proj/MatMul:0:0 */;
  %667 = nn.dense(%665, %666, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.6/mlp/up_proj/MatMul:0:0 */;
  %668 = multiply(%663, %664) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.6/mlp/act_fn/Mul:0:0 */;
  %669 = reshape(%667, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.6/mlp/up_proj/MatMul:0:0 */;
  %670 = multiply(%668, %669) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.6/mlp/Mul:0:0 */;
  %671 = reshape(%670, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.6/mlp/down_proj/MatMul:0:0 */;
  %672 = transpose(%onnx::MatMul_8479, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.6/mlp/down_proj/MatMul:0:0 */;
  %673 = nn.dense(%671, %672, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.6/mlp/down_proj/MatMul:0:0 */;
  %674 = reshape(%673, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/mlp/down_proj/MatMul:0:0 */;
  %675 = add(%651, %674) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.6/Add_1:0:0 */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/input_layernorm/Cast:0:0 */;
  %677 = power(%676, 2f /* ty=float32 span=/model/layers.7/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/input_layernorm/Pow:0:0 */;
  %678 = mean(%677, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/input_layernorm/ReduceMean:0:0 */;
  %679 = add(%678, 1e-05f /* ty=float32 span=/model/layers.7/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/input_layernorm/Add:0:0 */;
  %680 = sqrt(%679) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/input_layernorm/Sqrt:0:0 */;
  %681 = divide(1f /* ty=float32 span=/model/layers.7/input_layernorm/Constant_2:0:0 */, %680) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/input_layernorm/Div:0:0 */;
  %682 = multiply(%676, %681) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/input_layernorm/Mul:0:0 */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/input_layernorm/Cast_1:0:0 */;
  %684 = multiply(%model.layers.7.input_layernorm.weight, %683) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/input_layernorm/Mul_1:0:0 */;
  %685 = reshape(%684, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/q_proj/MatMul:0:0 */;
  %686 = transpose(%onnx::MatMul_8480, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.7/self_attn/q_proj/MatMul:0:0 */;
  %687 = nn.dense(%685, %686, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/q_proj/MatMul:0:0 */;
  %688 = reshape(%687, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/self_attn/q_proj/MatMul:0:0 */;
  %689 = reshape(%688, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.7/self_attn/Reshape:0:0 */;
  %690 = transpose(%689, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Transpose:0:0 */;
  %691 = strided_slice(%690, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.7/self_attn/Slice_1:0:0 */;
  %692 = negative(%691) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.7/self_attn/Neg:0:0 */;
  %693 = strided_slice(%690, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.7/self_attn/Slice:0:0 */;
  %694 = (%692, %693) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.7/self_attn/Concat:0:0 */;
  %695 = concatenate(%694, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Concat:0:0 */;
  %696 = multiply(%690, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Mul:0:0 */;
  %697 = multiply(%695, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Mul_1:0:0 */;
  %698 = add(%696, %697) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Add:0:0 */;
  %699 = multiply(%698, meta[relay.Constant][23] /* ty=Tensor[(1), float32] span=/model/layers.7/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Mul_6:0:0 */;
  %700 = reshape(%684, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/k_proj/MatMul:0:0 */;
  %701 = transpose(%onnx::MatMul_8481, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.7/self_attn/k_proj/MatMul:0:0 */;
  %702 = nn.dense(%700, %701, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.7/self_attn/k_proj/MatMul:0:0 */;
  %703 = reshape(%702, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.7/self_attn/k_proj/MatMul:0:0 */;
  %704 = reshape(%703, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.7/self_attn/Reshape_1:0:0 */;
  %705 = transpose(%704, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Transpose_1:0:0 */;
  %706 = strided_slice(%705, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.7/self_attn/Slice_3:0:0 */;
  %707 = negative(%706) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.7/self_attn/Neg_1:0:0 */;
  %708 = strided_slice(%705, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.7/self_attn/Slice_2:0:0 */;
  %709 = (%707, %708) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.7/self_attn/Concat_1:0:0 */;
  %710 = concatenate(%709, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Concat_1:0:0 */;
  %711 = multiply(%705, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Mul_2:0:0 */;
  %712 = multiply(%710, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Mul_3:0:0 */;
  %713 = add(%711, %712) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Add_1:0:0 */;
  %714 = expand_dims(%713, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.7/self_attn/Unsqueeze:0:0 */;
  %715 = broadcast_to(%714, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.7/self_attn/Expand:0:0 */;
  %716 = reshape(%715, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Reshape_3:0:0 */;
  %717 = transpose(%716, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.7/self_attn/Transpose_3:0:0 */;
  %718 = multiply(%717, meta[relay.Constant][24] /* ty=Tensor[(1), float32] span=/model/layers.7/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.7/self_attn/Mul_7:0:0 */;
  %719 = reshape(%718, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.7/self_attn/MatMul:0:0 */;
  %720 = reshape(%699, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.7/self_attn/MatMul:0:0 */;
  %721 = transpose(%719, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.7/self_attn/MatMul:0:0 */;
  %722 = nn.batch_matmul(%720, %721, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.7/self_attn/MatMul:0:0 */;
  %723 = reshape(%722, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.7/self_attn/MatMul:0:0 */;
  %724 = add(%723, meta[relay.Constant][25] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.7/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.7/self_attn/Add_2:0:0 */;
  %725 = nn.softmax(%724, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.7/self_attn/Softmax:0:0 */;
  %726 = reshape(%684, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/v_proj/MatMul:0:0 */;
  %727 = transpose(%onnx::MatMul_8482, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.7/self_attn/v_proj/MatMul:0:0 */;
  %728 = nn.dense(%726, %727, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.7/self_attn/v_proj/MatMul:0:0 */;
  %729 = reshape(%728, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.7/self_attn/v_proj/MatMul:0:0 */;
  %730 = reshape(%729, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.7/self_attn/Reshape_2:0:0 */;
  %731 = transpose(%730, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.7/self_attn/Transpose_2:0:0 */;
  %732 = expand_dims(%731, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.7/self_attn/Unsqueeze_1:0:0 */;
  %733 = broadcast_to(%732, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.7/self_attn/Expand_1:0:0 */;
  %734 = reshape(%733, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/Reshape_4:0:0 */;
  %735 = reshape(%734, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.7/self_attn/MatMul_1:0:0 */;
  %736 = reshape(%725, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.7/self_attn/MatMul_1:0:0 */;
  %737 = transpose(%735, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.7/self_attn/MatMul_1:0:0 */;
  %738 = nn.batch_matmul(%736, %737, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.7/self_attn/MatMul_1:0:0 */;
  %739 = reshape(%738, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.7/self_attn/MatMul_1:0:0 */;
  %740 = transpose(%739, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.7/self_attn/Transpose_4:0:0 */;
  %741 = reshape(%740, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/self_attn/Reshape_5:0:0 */;
  %742 = reshape(%741, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/o_proj/MatMul:0:0 */;
  %743 = transpose(%onnx::MatMul_8548, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.7/self_attn/o_proj/MatMul:0:0 */;
  %744 = nn.dense(%742, %743, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/self_attn/o_proj/MatMul:0:0 */;
  %745 = reshape(%744, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/self_attn/o_proj/MatMul:0:0 */;
  %746 = add(%676, %745) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/Add:0:0 */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/post_attention_layernorm/Cast:0:0 */;
  %748 = power(%747, 2f /* ty=float32 span=/model/layers.7/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/post_attention_layernorm/Pow:0:0 */;
  %749 = mean(%748, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/post_attention_layernorm/ReduceMean:0:0 */;
  %750 = add(%749, 1e-05f /* ty=float32 span=/model/layers.7/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/post_attention_layernorm/Add:0:0 */;
  %751 = sqrt(%750) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/post_attention_layernorm/Sqrt:0:0 */;
  %752 = divide(1f /* ty=float32 span=/model/layers.7/post_attention_layernorm/Constant_2:0:0 */, %751) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.7/post_attention_layernorm/Div:0:0 */;
  %753 = multiply(%747, %752) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/post_attention_layernorm/Mul:0:0 */;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/post_attention_layernorm/Cast_1:0:0 */;
  %755 = multiply(%model.layers.7.post_attention_layernorm.weight, %754) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/post_attention_layernorm/Mul_1:0:0 */;
  %756 = reshape(%755, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/mlp/gate_proj/MatMul:0:0 */;
  %757 = transpose(%onnx::MatMul_8549, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.7/mlp/gate_proj/MatMul:0:0 */;
  %758 = nn.dense(%756, %757, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.7/mlp/gate_proj/MatMul:0:0 */;
  %759 = reshape(%758, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.7/mlp/gate_proj/MatMul:0:0 */;
  %760 = sigmoid(%759) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.7/mlp/act_fn/Sigmoid:0:0 */;
  %761 = reshape(%755, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/mlp/up_proj/MatMul:0:0 */;
  %762 = transpose(%onnx::MatMul_8550, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.7/mlp/up_proj/MatMul:0:0 */;
  %763 = nn.dense(%761, %762, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.7/mlp/up_proj/MatMul:0:0 */;
  %764 = multiply(%759, %760) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.7/mlp/act_fn/Mul:0:0 */;
  %765 = reshape(%763, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.7/mlp/up_proj/MatMul:0:0 */;
  %766 = multiply(%764, %765) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.7/mlp/Mul:0:0 */;
  %767 = reshape(%766, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.7/mlp/down_proj/MatMul:0:0 */;
  %768 = transpose(%onnx::MatMul_8551, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.7/mlp/down_proj/MatMul:0:0 */;
  %769 = nn.dense(%767, %768, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.7/mlp/down_proj/MatMul:0:0 */;
  %770 = reshape(%769, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/mlp/down_proj/MatMul:0:0 */;
  %771 = add(%747, %770) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.7/Add_1:0:0 */;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/input_layernorm/Cast:0:0 */;
  %773 = power(%772, 2f /* ty=float32 span=/model/layers.8/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/input_layernorm/Pow:0:0 */;
  %774 = mean(%773, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/input_layernorm/ReduceMean:0:0 */;
  %775 = add(%774, 1e-05f /* ty=float32 span=/model/layers.8/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/input_layernorm/Add:0:0 */;
  %776 = sqrt(%775) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/input_layernorm/Sqrt:0:0 */;
  %777 = divide(1f /* ty=float32 span=/model/layers.8/input_layernorm/Constant_2:0:0 */, %776) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/input_layernorm/Div:0:0 */;
  %778 = multiply(%772, %777) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/input_layernorm/Mul:0:0 */;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/input_layernorm/Cast_1:0:0 */;
  %780 = multiply(%model.layers.8.input_layernorm.weight, %779) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/input_layernorm/Mul_1:0:0 */;
  %781 = reshape(%780, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/q_proj/MatMul:0:0 */;
  %782 = transpose(%onnx::MatMul_8552, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.8/self_attn/q_proj/MatMul:0:0 */;
  %783 = nn.dense(%781, %782, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/q_proj/MatMul:0:0 */;
  %784 = reshape(%783, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/self_attn/q_proj/MatMul:0:0 */;
  %785 = reshape(%784, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.8/self_attn/Reshape:0:0 */;
  %786 = transpose(%785, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Transpose:0:0 */;
  %787 = strided_slice(%786, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.8/self_attn/Slice_1:0:0 */;
  %788 = negative(%787) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.8/self_attn/Neg:0:0 */;
  %789 = strided_slice(%786, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.8/self_attn/Slice:0:0 */;
  %790 = (%788, %789) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.8/self_attn/Concat:0:0 */;
  %791 = concatenate(%790, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Concat:0:0 */;
  %792 = multiply(%786, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Mul:0:0 */;
  %793 = multiply(%791, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Mul_1:0:0 */;
  %794 = add(%792, %793) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Add:0:0 */;
  %795 = multiply(%794, meta[relay.Constant][26] /* ty=Tensor[(1), float32] span=/model/layers.8/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Mul_6:0:0 */;
  %796 = reshape(%780, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/k_proj/MatMul:0:0 */;
  %797 = transpose(%onnx::MatMul_8553, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.8/self_attn/k_proj/MatMul:0:0 */;
  %798 = nn.dense(%796, %797, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.8/self_attn/k_proj/MatMul:0:0 */;
  %799 = reshape(%798, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.8/self_attn/k_proj/MatMul:0:0 */;
  %800 = reshape(%799, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.8/self_attn/Reshape_1:0:0 */;
  %801 = transpose(%800, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Transpose_1:0:0 */;
  %802 = strided_slice(%801, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.8/self_attn/Slice_3:0:0 */;
  %803 = negative(%802) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.8/self_attn/Neg_1:0:0 */;
  %804 = strided_slice(%801, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.8/self_attn/Slice_2:0:0 */;
  %805 = (%803, %804) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.8/self_attn/Concat_1:0:0 */;
  %806 = concatenate(%805, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Concat_1:0:0 */;
  %807 = multiply(%801, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Mul_2:0:0 */;
  %808 = multiply(%806, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Mul_3:0:0 */;
  %809 = add(%807, %808) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Add_1:0:0 */;
  %810 = expand_dims(%809, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.8/self_attn/Unsqueeze:0:0 */;
  %811 = broadcast_to(%810, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.8/self_attn/Expand:0:0 */;
  %812 = reshape(%811, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Reshape_3:0:0 */;
  %813 = transpose(%812, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.8/self_attn/Transpose_3:0:0 */;
  %814 = multiply(%813, meta[relay.Constant][27] /* ty=Tensor[(1), float32] span=/model/layers.8/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.8/self_attn/Mul_7:0:0 */;
  %815 = reshape(%814, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.8/self_attn/MatMul:0:0 */;
  %816 = reshape(%795, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.8/self_attn/MatMul:0:0 */;
  %817 = transpose(%815, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.8/self_attn/MatMul:0:0 */;
  %818 = nn.batch_matmul(%816, %817, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.8/self_attn/MatMul:0:0 */;
  %819 = reshape(%818, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.8/self_attn/MatMul:0:0 */;
  %820 = add(%819, meta[relay.Constant][28] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.8/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.8/self_attn/Add_2:0:0 */;
  %821 = nn.softmax(%820, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.8/self_attn/Softmax:0:0 */;
  %822 = reshape(%780, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/v_proj/MatMul:0:0 */;
  %823 = transpose(%onnx::MatMul_8554, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.8/self_attn/v_proj/MatMul:0:0 */;
  %824 = nn.dense(%822, %823, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.8/self_attn/v_proj/MatMul:0:0 */;
  %825 = reshape(%824, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.8/self_attn/v_proj/MatMul:0:0 */;
  %826 = reshape(%825, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.8/self_attn/Reshape_2:0:0 */;
  %827 = transpose(%826, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.8/self_attn/Transpose_2:0:0 */;
  %828 = expand_dims(%827, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.8/self_attn/Unsqueeze_1:0:0 */;
  %829 = broadcast_to(%828, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.8/self_attn/Expand_1:0:0 */;
  %830 = reshape(%829, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/Reshape_4:0:0 */;
  %831 = reshape(%830, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.8/self_attn/MatMul_1:0:0 */;
  %832 = reshape(%821, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.8/self_attn/MatMul_1:0:0 */;
  %833 = transpose(%831, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.8/self_attn/MatMul_1:0:0 */;
  %834 = nn.batch_matmul(%832, %833, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.8/self_attn/MatMul_1:0:0 */;
  %835 = reshape(%834, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.8/self_attn/MatMul_1:0:0 */;
  %836 = transpose(%835, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.8/self_attn/Transpose_4:0:0 */;
  %837 = reshape(%836, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/self_attn/Reshape_5:0:0 */;
  %838 = reshape(%837, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/o_proj/MatMul:0:0 */;
  %839 = transpose(%onnx::MatMul_8620, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.8/self_attn/o_proj/MatMul:0:0 */;
  %840 = nn.dense(%838, %839, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/self_attn/o_proj/MatMul:0:0 */;
  %841 = reshape(%840, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/self_attn/o_proj/MatMul:0:0 */;
  %842 = add(%772, %841) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/Add:0:0 */;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/post_attention_layernorm/Cast:0:0 */;
  %844 = power(%843, 2f /* ty=float32 span=/model/layers.8/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/post_attention_layernorm/Pow:0:0 */;
  %845 = mean(%844, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/post_attention_layernorm/ReduceMean:0:0 */;
  %846 = add(%845, 1e-05f /* ty=float32 span=/model/layers.8/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/post_attention_layernorm/Add:0:0 */;
  %847 = sqrt(%846) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/post_attention_layernorm/Sqrt:0:0 */;
  %848 = divide(1f /* ty=float32 span=/model/layers.8/post_attention_layernorm/Constant_2:0:0 */, %847) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.8/post_attention_layernorm/Div:0:0 */;
  %849 = multiply(%843, %848) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/post_attention_layernorm/Mul:0:0 */;
  %850 = cast(%849, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/post_attention_layernorm/Cast_1:0:0 */;
  %851 = multiply(%model.layers.8.post_attention_layernorm.weight, %850) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/post_attention_layernorm/Mul_1:0:0 */;
  %852 = reshape(%851, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/mlp/gate_proj/MatMul:0:0 */;
  %853 = transpose(%onnx::MatMul_8621, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.8/mlp/gate_proj/MatMul:0:0 */;
  %854 = nn.dense(%852, %853, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.8/mlp/gate_proj/MatMul:0:0 */;
  %855 = reshape(%854, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.8/mlp/gate_proj/MatMul:0:0 */;
  %856 = sigmoid(%855) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.8/mlp/act_fn/Sigmoid:0:0 */;
  %857 = reshape(%851, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/mlp/up_proj/MatMul:0:0 */;
  %858 = transpose(%onnx::MatMul_8622, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.8/mlp/up_proj/MatMul:0:0 */;
  %859 = nn.dense(%857, %858, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.8/mlp/up_proj/MatMul:0:0 */;
  %860 = multiply(%855, %856) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.8/mlp/act_fn/Mul:0:0 */;
  %861 = reshape(%859, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.8/mlp/up_proj/MatMul:0:0 */;
  %862 = multiply(%860, %861) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.8/mlp/Mul:0:0 */;
  %863 = reshape(%862, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.8/mlp/down_proj/MatMul:0:0 */;
  %864 = transpose(%onnx::MatMul_8623, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.8/mlp/down_proj/MatMul:0:0 */;
  %865 = nn.dense(%863, %864, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.8/mlp/down_proj/MatMul:0:0 */;
  %866 = reshape(%865, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/mlp/down_proj/MatMul:0:0 */;
  %867 = add(%843, %866) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.8/Add_1:0:0 */;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/input_layernorm/Cast:0:0 */;
  %869 = power(%868, 2f /* ty=float32 span=/model/layers.9/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/input_layernorm/Pow:0:0 */;
  %870 = mean(%869, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/input_layernorm/ReduceMean:0:0 */;
  %871 = add(%870, 1e-05f /* ty=float32 span=/model/layers.9/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/input_layernorm/Add:0:0 */;
  %872 = sqrt(%871) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/input_layernorm/Sqrt:0:0 */;
  %873 = divide(1f /* ty=float32 span=/model/layers.9/input_layernorm/Constant_2:0:0 */, %872) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/input_layernorm/Div:0:0 */;
  %874 = multiply(%868, %873) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/input_layernorm/Mul:0:0 */;
  %875 = cast(%874, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/input_layernorm/Cast_1:0:0 */;
  %876 = multiply(%model.layers.9.input_layernorm.weight, %875) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/input_layernorm/Mul_1:0:0 */;
  %877 = reshape(%876, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/q_proj/MatMul:0:0 */;
  %878 = transpose(%onnx::MatMul_8624, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.9/self_attn/q_proj/MatMul:0:0 */;
  %879 = nn.dense(%877, %878, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/q_proj/MatMul:0:0 */;
  %880 = reshape(%879, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/self_attn/q_proj/MatMul:0:0 */;
  %881 = reshape(%880, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.9/self_attn/Reshape:0:0 */;
  %882 = transpose(%881, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Transpose:0:0 */;
  %883 = strided_slice(%882, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.9/self_attn/Slice_1:0:0 */;
  %884 = negative(%883) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.9/self_attn/Neg:0:0 */;
  %885 = strided_slice(%882, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.9/self_attn/Slice:0:0 */;
  %886 = (%884, %885) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.9/self_attn/Concat:0:0 */;
  %887 = concatenate(%886, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Concat:0:0 */;
  %888 = multiply(%882, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Mul:0:0 */;
  %889 = multiply(%887, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Mul_1:0:0 */;
  %890 = add(%888, %889) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Add:0:0 */;
  %891 = multiply(%890, meta[relay.Constant][29] /* ty=Tensor[(1), float32] span=/model/layers.9/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Mul_6:0:0 */;
  %892 = reshape(%876, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/k_proj/MatMul:0:0 */;
  %893 = transpose(%onnx::MatMul_8625, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.9/self_attn/k_proj/MatMul:0:0 */;
  %894 = nn.dense(%892, %893, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.9/self_attn/k_proj/MatMul:0:0 */;
  %895 = reshape(%894, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.9/self_attn/k_proj/MatMul:0:0 */;
  %896 = reshape(%895, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.9/self_attn/Reshape_1:0:0 */;
  %897 = transpose(%896, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Transpose_1:0:0 */;
  %898 = strided_slice(%897, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.9/self_attn/Slice_3:0:0 */;
  %899 = negative(%898) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.9/self_attn/Neg_1:0:0 */;
  %900 = strided_slice(%897, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.9/self_attn/Slice_2:0:0 */;
  %901 = (%899, %900) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.9/self_attn/Concat_1:0:0 */;
  %902 = concatenate(%901, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Concat_1:0:0 */;
  %903 = multiply(%897, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Mul_2:0:0 */;
  %904 = multiply(%902, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Mul_3:0:0 */;
  %905 = add(%903, %904) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Add_1:0:0 */;
  %906 = expand_dims(%905, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.9/self_attn/Unsqueeze:0:0 */;
  %907 = broadcast_to(%906, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.9/self_attn/Expand:0:0 */;
  %908 = reshape(%907, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Reshape_3:0:0 */;
  %909 = transpose(%908, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.9/self_attn/Transpose_3:0:0 */;
  %910 = multiply(%909, meta[relay.Constant][30] /* ty=Tensor[(1), float32] span=/model/layers.9/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.9/self_attn/Mul_7:0:0 */;
  %911 = reshape(%910, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.9/self_attn/MatMul:0:0 */;
  %912 = reshape(%891, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.9/self_attn/MatMul:0:0 */;
  %913 = transpose(%911, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.9/self_attn/MatMul:0:0 */;
  %914 = nn.batch_matmul(%912, %913, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.9/self_attn/MatMul:0:0 */;
  %915 = reshape(%914, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.9/self_attn/MatMul:0:0 */;
  %916 = add(%915, meta[relay.Constant][31] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.9/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.9/self_attn/Add_2:0:0 */;
  %917 = nn.softmax(%916, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.9/self_attn/Softmax:0:0 */;
  %918 = reshape(%876, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/v_proj/MatMul:0:0 */;
  %919 = transpose(%onnx::MatMul_8626, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.9/self_attn/v_proj/MatMul:0:0 */;
  %920 = nn.dense(%918, %919, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.9/self_attn/v_proj/MatMul:0:0 */;
  %921 = reshape(%920, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.9/self_attn/v_proj/MatMul:0:0 */;
  %922 = reshape(%921, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.9/self_attn/Reshape_2:0:0 */;
  %923 = transpose(%922, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.9/self_attn/Transpose_2:0:0 */;
  %924 = expand_dims(%923, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.9/self_attn/Unsqueeze_1:0:0 */;
  %925 = broadcast_to(%924, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.9/self_attn/Expand_1:0:0 */;
  %926 = reshape(%925, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/Reshape_4:0:0 */;
  %927 = reshape(%926, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.9/self_attn/MatMul_1:0:0 */;
  %928 = reshape(%917, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.9/self_attn/MatMul_1:0:0 */;
  %929 = transpose(%927, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.9/self_attn/MatMul_1:0:0 */;
  %930 = nn.batch_matmul(%928, %929, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.9/self_attn/MatMul_1:0:0 */;
  %931 = reshape(%930, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.9/self_attn/MatMul_1:0:0 */;
  %932 = transpose(%931, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.9/self_attn/Transpose_4:0:0 */;
  %933 = reshape(%932, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/self_attn/Reshape_5:0:0 */;
  %934 = reshape(%933, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/o_proj/MatMul:0:0 */;
  %935 = transpose(%onnx::MatMul_8692, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.9/self_attn/o_proj/MatMul:0:0 */;
  %936 = nn.dense(%934, %935, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/self_attn/o_proj/MatMul:0:0 */;
  %937 = reshape(%936, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/self_attn/o_proj/MatMul:0:0 */;
  %938 = add(%868, %937) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/Add:0:0 */;
  %939 = cast(%938, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/post_attention_layernorm/Cast:0:0 */;
  %940 = power(%939, 2f /* ty=float32 span=/model/layers.9/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/post_attention_layernorm/Pow:0:0 */;
  %941 = mean(%940, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/post_attention_layernorm/ReduceMean:0:0 */;
  %942 = add(%941, 1e-05f /* ty=float32 span=/model/layers.9/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/post_attention_layernorm/Add:0:0 */;
  %943 = sqrt(%942) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/post_attention_layernorm/Sqrt:0:0 */;
  %944 = divide(1f /* ty=float32 span=/model/layers.9/post_attention_layernorm/Constant_2:0:0 */, %943) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.9/post_attention_layernorm/Div:0:0 */;
  %945 = multiply(%939, %944) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/post_attention_layernorm/Mul:0:0 */;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/post_attention_layernorm/Cast_1:0:0 */;
  %947 = multiply(%model.layers.9.post_attention_layernorm.weight, %946) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/post_attention_layernorm/Mul_1:0:0 */;
  %948 = reshape(%947, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/mlp/gate_proj/MatMul:0:0 */;
  %949 = transpose(%onnx::MatMul_8693, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.9/mlp/gate_proj/MatMul:0:0 */;
  %950 = nn.dense(%948, %949, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.9/mlp/gate_proj/MatMul:0:0 */;
  %951 = reshape(%950, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.9/mlp/gate_proj/MatMul:0:0 */;
  %952 = sigmoid(%951) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.9/mlp/act_fn/Sigmoid:0:0 */;
  %953 = reshape(%947, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/mlp/up_proj/MatMul:0:0 */;
  %954 = transpose(%onnx::MatMul_8694, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.9/mlp/up_proj/MatMul:0:0 */;
  %955 = nn.dense(%953, %954, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.9/mlp/up_proj/MatMul:0:0 */;
  %956 = multiply(%951, %952) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.9/mlp/act_fn/Mul:0:0 */;
  %957 = reshape(%955, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.9/mlp/up_proj/MatMul:0:0 */;
  %958 = multiply(%956, %957) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.9/mlp/Mul:0:0 */;
  %959 = reshape(%958, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.9/mlp/down_proj/MatMul:0:0 */;
  %960 = transpose(%onnx::MatMul_8695, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.9/mlp/down_proj/MatMul:0:0 */;
  %961 = nn.dense(%959, %960, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.9/mlp/down_proj/MatMul:0:0 */;
  %962 = reshape(%961, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/mlp/down_proj/MatMul:0:0 */;
  %963 = add(%939, %962) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.9/Add_1:0:0 */;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/input_layernorm/Cast:0:0 */;
  %965 = power(%964, 2f /* ty=float32 span=/model/layers.10/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/input_layernorm/Pow:0:0 */;
  %966 = mean(%965, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/input_layernorm/ReduceMean:0:0 */;
  %967 = add(%966, 1e-05f /* ty=float32 span=/model/layers.10/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/input_layernorm/Add:0:0 */;
  %968 = sqrt(%967) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/input_layernorm/Sqrt:0:0 */;
  %969 = divide(1f /* ty=float32 span=/model/layers.10/input_layernorm/Constant_2:0:0 */, %968) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/input_layernorm/Div:0:0 */;
  %970 = multiply(%964, %969) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/input_layernorm/Mul:0:0 */;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/input_layernorm/Cast_1:0:0 */;
  %972 = multiply(%model.layers.10.input_layernorm.weight, %971) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/input_layernorm/Mul_1:0:0 */;
  %973 = reshape(%972, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/q_proj/MatMul:0:0 */;
  %974 = transpose(%onnx::MatMul_8696, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.10/self_attn/q_proj/MatMul:0:0 */;
  %975 = nn.dense(%973, %974, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/q_proj/MatMul:0:0 */;
  %976 = reshape(%975, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/self_attn/q_proj/MatMul:0:0 */;
  %977 = reshape(%976, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.10/self_attn/Reshape:0:0 */;
  %978 = transpose(%977, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Transpose:0:0 */;
  %979 = strided_slice(%978, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.10/self_attn/Slice_1:0:0 */;
  %980 = negative(%979) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.10/self_attn/Neg:0:0 */;
  %981 = strided_slice(%978, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.10/self_attn/Slice:0:0 */;
  %982 = (%980, %981) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.10/self_attn/Concat:0:0 */;
  %983 = concatenate(%982, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Concat:0:0 */;
  %984 = multiply(%978, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Mul:0:0 */;
  %985 = multiply(%983, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Mul_1:0:0 */;
  %986 = add(%984, %985) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Add:0:0 */;
  %987 = multiply(%986, meta[relay.Constant][32] /* ty=Tensor[(1), float32] span=/model/layers.10/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Mul_6:0:0 */;
  %988 = reshape(%972, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/k_proj/MatMul:0:0 */;
  %989 = transpose(%onnx::MatMul_8697, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.10/self_attn/k_proj/MatMul:0:0 */;
  %990 = nn.dense(%988, %989, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.10/self_attn/k_proj/MatMul:0:0 */;
  %991 = reshape(%990, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.10/self_attn/k_proj/MatMul:0:0 */;
  %992 = reshape(%991, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.10/self_attn/Reshape_1:0:0 */;
  %993 = transpose(%992, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Transpose_1:0:0 */;
  %994 = strided_slice(%993, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.10/self_attn/Slice_3:0:0 */;
  %995 = negative(%994) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.10/self_attn/Neg_1:0:0 */;
  %996 = strided_slice(%993, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.10/self_attn/Slice_2:0:0 */;
  %997 = (%995, %996) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.10/self_attn/Concat_1:0:0 */;
  %998 = concatenate(%997, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Concat_1:0:0 */;
  %999 = multiply(%993, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Mul_2:0:0 */;
  %1000 = multiply(%998, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Mul_3:0:0 */;
  %1001 = add(%999, %1000) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Add_1:0:0 */;
  %1002 = expand_dims(%1001, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.10/self_attn/Unsqueeze:0:0 */;
  %1003 = broadcast_to(%1002, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.10/self_attn/Expand:0:0 */;
  %1004 = reshape(%1003, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Reshape_3:0:0 */;
  %1005 = transpose(%1004, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.10/self_attn/Transpose_3:0:0 */;
  %1006 = multiply(%1005, meta[relay.Constant][33] /* ty=Tensor[(1), float32] span=/model/layers.10/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.10/self_attn/Mul_7:0:0 */;
  %1007 = reshape(%1006, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.10/self_attn/MatMul:0:0 */;
  %1008 = reshape(%987, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.10/self_attn/MatMul:0:0 */;
  %1009 = transpose(%1007, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.10/self_attn/MatMul:0:0 */;
  %1010 = nn.batch_matmul(%1008, %1009, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.10/self_attn/MatMul:0:0 */;
  %1011 = reshape(%1010, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.10/self_attn/MatMul:0:0 */;
  %1012 = add(%1011, meta[relay.Constant][34] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.10/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.10/self_attn/Add_2:0:0 */;
  %1013 = nn.softmax(%1012, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.10/self_attn/Softmax:0:0 */;
  %1014 = reshape(%972, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/v_proj/MatMul:0:0 */;
  %1015 = transpose(%onnx::MatMul_8698, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.10/self_attn/v_proj/MatMul:0:0 */;
  %1016 = nn.dense(%1014, %1015, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.10/self_attn/v_proj/MatMul:0:0 */;
  %1017 = reshape(%1016, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.10/self_attn/v_proj/MatMul:0:0 */;
  %1018 = reshape(%1017, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.10/self_attn/Reshape_2:0:0 */;
  %1019 = transpose(%1018, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.10/self_attn/Transpose_2:0:0 */;
  %1020 = expand_dims(%1019, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.10/self_attn/Unsqueeze_1:0:0 */;
  %1021 = broadcast_to(%1020, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.10/self_attn/Expand_1:0:0 */;
  %1022 = reshape(%1021, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/Reshape_4:0:0 */;
  %1023 = reshape(%1022, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.10/self_attn/MatMul_1:0:0 */;
  %1024 = reshape(%1013, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.10/self_attn/MatMul_1:0:0 */;
  %1025 = transpose(%1023, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.10/self_attn/MatMul_1:0:0 */;
  %1026 = nn.batch_matmul(%1024, %1025, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.10/self_attn/MatMul_1:0:0 */;
  %1027 = reshape(%1026, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.10/self_attn/MatMul_1:0:0 */;
  %1028 = transpose(%1027, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.10/self_attn/Transpose_4:0:0 */;
  %1029 = reshape(%1028, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/self_attn/Reshape_5:0:0 */;
  %1030 = reshape(%1029, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/o_proj/MatMul:0:0 */;
  %1031 = transpose(%onnx::MatMul_8764, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.10/self_attn/o_proj/MatMul:0:0 */;
  %1032 = nn.dense(%1030, %1031, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/self_attn/o_proj/MatMul:0:0 */;
  %1033 = reshape(%1032, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/self_attn/o_proj/MatMul:0:0 */;
  %1034 = add(%964, %1033) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/Add:0:0 */;
  %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/post_attention_layernorm/Cast:0:0 */;
  %1036 = power(%1035, 2f /* ty=float32 span=/model/layers.10/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/post_attention_layernorm/Pow:0:0 */;
  %1037 = mean(%1036, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/post_attention_layernorm/ReduceMean:0:0 */;
  %1038 = add(%1037, 1e-05f /* ty=float32 span=/model/layers.10/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/post_attention_layernorm/Add:0:0 */;
  %1039 = sqrt(%1038) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/post_attention_layernorm/Sqrt:0:0 */;
  %1040 = divide(1f /* ty=float32 span=/model/layers.10/post_attention_layernorm/Constant_2:0:0 */, %1039) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.10/post_attention_layernorm/Div:0:0 */;
  %1041 = multiply(%1035, %1040) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/post_attention_layernorm/Mul:0:0 */;
  %1042 = cast(%1041, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/post_attention_layernorm/Cast_1:0:0 */;
  %1043 = multiply(%model.layers.10.post_attention_layernorm.weight, %1042) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/post_attention_layernorm/Mul_1:0:0 */;
  %1044 = reshape(%1043, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/mlp/gate_proj/MatMul:0:0 */;
  %1045 = transpose(%onnx::MatMul_8765, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.10/mlp/gate_proj/MatMul:0:0 */;
  %1046 = nn.dense(%1044, %1045, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.10/mlp/gate_proj/MatMul:0:0 */;
  %1047 = reshape(%1046, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.10/mlp/gate_proj/MatMul:0:0 */;
  %1048 = sigmoid(%1047) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.10/mlp/act_fn/Sigmoid:0:0 */;
  %1049 = reshape(%1043, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/mlp/up_proj/MatMul:0:0 */;
  %1050 = transpose(%onnx::MatMul_8766, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.10/mlp/up_proj/MatMul:0:0 */;
  %1051 = nn.dense(%1049, %1050, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.10/mlp/up_proj/MatMul:0:0 */;
  %1052 = multiply(%1047, %1048) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.10/mlp/act_fn/Mul:0:0 */;
  %1053 = reshape(%1051, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.10/mlp/up_proj/MatMul:0:0 */;
  %1054 = multiply(%1052, %1053) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.10/mlp/Mul:0:0 */;
  %1055 = reshape(%1054, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.10/mlp/down_proj/MatMul:0:0 */;
  %1056 = transpose(%onnx::MatMul_8767, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.10/mlp/down_proj/MatMul:0:0 */;
  %1057 = nn.dense(%1055, %1056, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.10/mlp/down_proj/MatMul:0:0 */;
  %1058 = reshape(%1057, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/mlp/down_proj/MatMul:0:0 */;
  %1059 = add(%1035, %1058) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.10/Add_1:0:0 */;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/input_layernorm/Cast:0:0 */;
  %1061 = power(%1060, 2f /* ty=float32 span=/model/layers.11/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/input_layernorm/Pow:0:0 */;
  %1062 = mean(%1061, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/input_layernorm/ReduceMean:0:0 */;
  %1063 = add(%1062, 1e-05f /* ty=float32 span=/model/layers.11/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/input_layernorm/Add:0:0 */;
  %1064 = sqrt(%1063) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/input_layernorm/Sqrt:0:0 */;
  %1065 = divide(1f /* ty=float32 span=/model/layers.11/input_layernorm/Constant_2:0:0 */, %1064) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/input_layernorm/Div:0:0 */;
  %1066 = multiply(%1060, %1065) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/input_layernorm/Mul:0:0 */;
  %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/input_layernorm/Cast_1:0:0 */;
  %1068 = multiply(%model.layers.11.input_layernorm.weight, %1067) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/input_layernorm/Mul_1:0:0 */;
  %1069 = reshape(%1068, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/q_proj/MatMul:0:0 */;
  %1070 = transpose(%onnx::MatMul_8768, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.11/self_attn/q_proj/MatMul:0:0 */;
  %1071 = nn.dense(%1069, %1070, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/q_proj/MatMul:0:0 */;
  %1072 = reshape(%1071, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/self_attn/q_proj/MatMul:0:0 */;
  %1073 = reshape(%1072, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.11/self_attn/Reshape:0:0 */;
  %1074 = transpose(%1073, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Transpose:0:0 */;
  %1075 = strided_slice(%1074, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.11/self_attn/Slice_1:0:0 */;
  %1076 = negative(%1075) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.11/self_attn/Neg:0:0 */;
  %1077 = strided_slice(%1074, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.11/self_attn/Slice:0:0 */;
  %1078 = (%1076, %1077) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.11/self_attn/Concat:0:0 */;
  %1079 = concatenate(%1078, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Concat:0:0 */;
  %1080 = multiply(%1074, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Mul:0:0 */;
  %1081 = multiply(%1079, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Mul_1:0:0 */;
  %1082 = add(%1080, %1081) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Add:0:0 */;
  %1083 = multiply(%1082, meta[relay.Constant][35] /* ty=Tensor[(1), float32] span=/model/layers.11/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Mul_6:0:0 */;
  %1084 = reshape(%1068, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/k_proj/MatMul:0:0 */;
  %1085 = transpose(%onnx::MatMul_8769, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.11/self_attn/k_proj/MatMul:0:0 */;
  %1086 = nn.dense(%1084, %1085, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.11/self_attn/k_proj/MatMul:0:0 */;
  %1087 = reshape(%1086, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.11/self_attn/k_proj/MatMul:0:0 */;
  %1088 = reshape(%1087, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.11/self_attn/Reshape_1:0:0 */;
  %1089 = transpose(%1088, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Transpose_1:0:0 */;
  %1090 = strided_slice(%1089, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.11/self_attn/Slice_3:0:0 */;
  %1091 = negative(%1090) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.11/self_attn/Neg_1:0:0 */;
  %1092 = strided_slice(%1089, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.11/self_attn/Slice_2:0:0 */;
  %1093 = (%1091, %1092) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.11/self_attn/Concat_1:0:0 */;
  %1094 = concatenate(%1093, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Concat_1:0:0 */;
  %1095 = multiply(%1089, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Mul_2:0:0 */;
  %1096 = multiply(%1094, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Mul_3:0:0 */;
  %1097 = add(%1095, %1096) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Add_1:0:0 */;
  %1098 = expand_dims(%1097, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.11/self_attn/Unsqueeze:0:0 */;
  %1099 = broadcast_to(%1098, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.11/self_attn/Expand:0:0 */;
  %1100 = reshape(%1099, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Reshape_3:0:0 */;
  %1101 = transpose(%1100, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.11/self_attn/Transpose_3:0:0 */;
  %1102 = multiply(%1101, meta[relay.Constant][36] /* ty=Tensor[(1), float32] span=/model/layers.11/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.11/self_attn/Mul_7:0:0 */;
  %1103 = reshape(%1102, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.11/self_attn/MatMul:0:0 */;
  %1104 = reshape(%1083, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.11/self_attn/MatMul:0:0 */;
  %1105 = transpose(%1103, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.11/self_attn/MatMul:0:0 */;
  %1106 = nn.batch_matmul(%1104, %1105, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.11/self_attn/MatMul:0:0 */;
  %1107 = reshape(%1106, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.11/self_attn/MatMul:0:0 */;
  %1108 = add(%1107, meta[relay.Constant][37] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.11/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.11/self_attn/Add_2:0:0 */;
  %1109 = nn.softmax(%1108, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.11/self_attn/Softmax:0:0 */;
  %1110 = reshape(%1068, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/v_proj/MatMul:0:0 */;
  %1111 = transpose(%onnx::MatMul_8770, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.11/self_attn/v_proj/MatMul:0:0 */;
  %1112 = nn.dense(%1110, %1111, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.11/self_attn/v_proj/MatMul:0:0 */;
  %1113 = reshape(%1112, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.11/self_attn/v_proj/MatMul:0:0 */;
  %1114 = reshape(%1113, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.11/self_attn/Reshape_2:0:0 */;
  %1115 = transpose(%1114, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.11/self_attn/Transpose_2:0:0 */;
  %1116 = expand_dims(%1115, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.11/self_attn/Unsqueeze_1:0:0 */;
  %1117 = broadcast_to(%1116, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.11/self_attn/Expand_1:0:0 */;
  %1118 = reshape(%1117, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/Reshape_4:0:0 */;
  %1119 = reshape(%1118, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.11/self_attn/MatMul_1:0:0 */;
  %1120 = reshape(%1109, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.11/self_attn/MatMul_1:0:0 */;
  %1121 = transpose(%1119, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.11/self_attn/MatMul_1:0:0 */;
  %1122 = nn.batch_matmul(%1120, %1121, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.11/self_attn/MatMul_1:0:0 */;
  %1123 = reshape(%1122, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.11/self_attn/MatMul_1:0:0 */;
  %1124 = transpose(%1123, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.11/self_attn/Transpose_4:0:0 */;
  %1125 = reshape(%1124, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/self_attn/Reshape_5:0:0 */;
  %1126 = reshape(%1125, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/o_proj/MatMul:0:0 */;
  %1127 = transpose(%onnx::MatMul_8836, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.11/self_attn/o_proj/MatMul:0:0 */;
  %1128 = nn.dense(%1126, %1127, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/self_attn/o_proj/MatMul:0:0 */;
  %1129 = reshape(%1128, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/self_attn/o_proj/MatMul:0:0 */;
  %1130 = add(%1060, %1129) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/Add:0:0 */;
  %1131 = cast(%1130, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/post_attention_layernorm/Cast:0:0 */;
  %1132 = power(%1131, 2f /* ty=float32 span=/model/layers.11/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/post_attention_layernorm/Pow:0:0 */;
  %1133 = mean(%1132, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/post_attention_layernorm/ReduceMean:0:0 */;
  %1134 = add(%1133, 1e-05f /* ty=float32 span=/model/layers.11/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/post_attention_layernorm/Add:0:0 */;
  %1135 = sqrt(%1134) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/post_attention_layernorm/Sqrt:0:0 */;
  %1136 = divide(1f /* ty=float32 span=/model/layers.11/post_attention_layernorm/Constant_2:0:0 */, %1135) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.11/post_attention_layernorm/Div:0:0 */;
  %1137 = multiply(%1131, %1136) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/post_attention_layernorm/Mul:0:0 */;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/post_attention_layernorm/Cast_1:0:0 */;
  %1139 = multiply(%model.layers.11.post_attention_layernorm.weight, %1138) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/post_attention_layernorm/Mul_1:0:0 */;
  %1140 = reshape(%1139, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/mlp/gate_proj/MatMul:0:0 */;
  %1141 = transpose(%onnx::MatMul_8837, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.11/mlp/gate_proj/MatMul:0:0 */;
  %1142 = nn.dense(%1140, %1141, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.11/mlp/gate_proj/MatMul:0:0 */;
  %1143 = reshape(%1142, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.11/mlp/gate_proj/MatMul:0:0 */;
  %1144 = sigmoid(%1143) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.11/mlp/act_fn/Sigmoid:0:0 */;
  %1145 = reshape(%1139, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/mlp/up_proj/MatMul:0:0 */;
  %1146 = transpose(%onnx::MatMul_8838, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.11/mlp/up_proj/MatMul:0:0 */;
  %1147 = nn.dense(%1145, %1146, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.11/mlp/up_proj/MatMul:0:0 */;
  %1148 = multiply(%1143, %1144) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.11/mlp/act_fn/Mul:0:0 */;
  %1149 = reshape(%1147, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.11/mlp/up_proj/MatMul:0:0 */;
  %1150 = multiply(%1148, %1149) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.11/mlp/Mul:0:0 */;
  %1151 = reshape(%1150, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.11/mlp/down_proj/MatMul:0:0 */;
  %1152 = transpose(%onnx::MatMul_8839, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.11/mlp/down_proj/MatMul:0:0 */;
  %1153 = nn.dense(%1151, %1152, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.11/mlp/down_proj/MatMul:0:0 */;
  %1154 = reshape(%1153, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/mlp/down_proj/MatMul:0:0 */;
  %1155 = add(%1131, %1154) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.11/Add_1:0:0 */;
  %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/input_layernorm/Cast:0:0 */;
  %1157 = power(%1156, 2f /* ty=float32 span=/model/layers.12/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/input_layernorm/Pow:0:0 */;
  %1158 = mean(%1157, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/input_layernorm/ReduceMean:0:0 */;
  %1159 = add(%1158, 1e-05f /* ty=float32 span=/model/layers.12/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/input_layernorm/Add:0:0 */;
  %1160 = sqrt(%1159) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/input_layernorm/Sqrt:0:0 */;
  %1161 = divide(1f /* ty=float32 span=/model/layers.12/input_layernorm/Constant_2:0:0 */, %1160) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/input_layernorm/Div:0:0 */;
  %1162 = multiply(%1156, %1161) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/input_layernorm/Mul:0:0 */;
  %1163 = cast(%1162, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/input_layernorm/Cast_1:0:0 */;
  %1164 = multiply(%model.layers.12.input_layernorm.weight, %1163) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/input_layernorm/Mul_1:0:0 */;
  %1165 = reshape(%1164, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/q_proj/MatMul:0:0 */;
  %1166 = transpose(%onnx::MatMul_8840, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.12/self_attn/q_proj/MatMul:0:0 */;
  %1167 = nn.dense(%1165, %1166, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/q_proj/MatMul:0:0 */;
  %1168 = reshape(%1167, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/self_attn/q_proj/MatMul:0:0 */;
  %1169 = reshape(%1168, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.12/self_attn/Reshape:0:0 */;
  %1170 = transpose(%1169, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Transpose:0:0 */;
  %1171 = strided_slice(%1170, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.12/self_attn/Slice_1:0:0 */;
  %1172 = negative(%1171) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.12/self_attn/Neg:0:0 */;
  %1173 = strided_slice(%1170, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.12/self_attn/Slice:0:0 */;
  %1174 = (%1172, %1173) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.12/self_attn/Concat:0:0 */;
  %1175 = concatenate(%1174, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Concat:0:0 */;
  %1176 = multiply(%1170, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Mul:0:0 */;
  %1177 = multiply(%1175, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Mul_1:0:0 */;
  %1178 = add(%1176, %1177) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Add:0:0 */;
  %1179 = multiply(%1178, meta[relay.Constant][38] /* ty=Tensor[(1), float32] span=/model/layers.12/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Mul_6:0:0 */;
  %1180 = reshape(%1164, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/k_proj/MatMul:0:0 */;
  %1181 = transpose(%onnx::MatMul_8841, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.12/self_attn/k_proj/MatMul:0:0 */;
  %1182 = nn.dense(%1180, %1181, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.12/self_attn/k_proj/MatMul:0:0 */;
  %1183 = reshape(%1182, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.12/self_attn/k_proj/MatMul:0:0 */;
  %1184 = reshape(%1183, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.12/self_attn/Reshape_1:0:0 */;
  %1185 = transpose(%1184, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Transpose_1:0:0 */;
  %1186 = strided_slice(%1185, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.12/self_attn/Slice_3:0:0 */;
  %1187 = negative(%1186) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.12/self_attn/Neg_1:0:0 */;
  %1188 = strided_slice(%1185, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.12/self_attn/Slice_2:0:0 */;
  %1189 = (%1187, %1188) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.12/self_attn/Concat_1:0:0 */;
  %1190 = concatenate(%1189, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Concat_1:0:0 */;
  %1191 = multiply(%1185, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Mul_2:0:0 */;
  %1192 = multiply(%1190, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Mul_3:0:0 */;
  %1193 = add(%1191, %1192) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Add_1:0:0 */;
  %1194 = expand_dims(%1193, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.12/self_attn/Unsqueeze:0:0 */;
  %1195 = broadcast_to(%1194, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.12/self_attn/Expand:0:0 */;
  %1196 = reshape(%1195, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Reshape_3:0:0 */;
  %1197 = transpose(%1196, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.12/self_attn/Transpose_3:0:0 */;
  %1198 = multiply(%1197, meta[relay.Constant][39] /* ty=Tensor[(1), float32] span=/model/layers.12/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.12/self_attn/Mul_7:0:0 */;
  %1199 = reshape(%1198, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.12/self_attn/MatMul:0:0 */;
  %1200 = reshape(%1179, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.12/self_attn/MatMul:0:0 */;
  %1201 = transpose(%1199, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.12/self_attn/MatMul:0:0 */;
  %1202 = nn.batch_matmul(%1200, %1201, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.12/self_attn/MatMul:0:0 */;
  %1203 = reshape(%1202, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.12/self_attn/MatMul:0:0 */;
  %1204 = add(%1203, meta[relay.Constant][40] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.12/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.12/self_attn/Add_2:0:0 */;
  %1205 = nn.softmax(%1204, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.12/self_attn/Softmax:0:0 */;
  %1206 = reshape(%1164, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/v_proj/MatMul:0:0 */;
  %1207 = transpose(%onnx::MatMul_8842, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.12/self_attn/v_proj/MatMul:0:0 */;
  %1208 = nn.dense(%1206, %1207, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.12/self_attn/v_proj/MatMul:0:0 */;
  %1209 = reshape(%1208, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.12/self_attn/v_proj/MatMul:0:0 */;
  %1210 = reshape(%1209, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.12/self_attn/Reshape_2:0:0 */;
  %1211 = transpose(%1210, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.12/self_attn/Transpose_2:0:0 */;
  %1212 = expand_dims(%1211, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.12/self_attn/Unsqueeze_1:0:0 */;
  %1213 = broadcast_to(%1212, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.12/self_attn/Expand_1:0:0 */;
  %1214 = reshape(%1213, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/Reshape_4:0:0 */;
  %1215 = reshape(%1214, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.12/self_attn/MatMul_1:0:0 */;
  %1216 = reshape(%1205, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.12/self_attn/MatMul_1:0:0 */;
  %1217 = transpose(%1215, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.12/self_attn/MatMul_1:0:0 */;
  %1218 = nn.batch_matmul(%1216, %1217, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.12/self_attn/MatMul_1:0:0 */;
  %1219 = reshape(%1218, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.12/self_attn/MatMul_1:0:0 */;
  %1220 = transpose(%1219, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.12/self_attn/Transpose_4:0:0 */;
  %1221 = reshape(%1220, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/self_attn/Reshape_5:0:0 */;
  %1222 = reshape(%1221, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/o_proj/MatMul:0:0 */;
  %1223 = transpose(%onnx::MatMul_8908, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.12/self_attn/o_proj/MatMul:0:0 */;
  %1224 = nn.dense(%1222, %1223, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/self_attn/o_proj/MatMul:0:0 */;
  %1225 = reshape(%1224, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/self_attn/o_proj/MatMul:0:0 */;
  %1226 = add(%1156, %1225) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/Add:0:0 */;
  %1227 = cast(%1226, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/post_attention_layernorm/Cast:0:0 */;
  %1228 = power(%1227, 2f /* ty=float32 span=/model/layers.12/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/post_attention_layernorm/Pow:0:0 */;
  %1229 = mean(%1228, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/post_attention_layernorm/ReduceMean:0:0 */;
  %1230 = add(%1229, 1e-05f /* ty=float32 span=/model/layers.12/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/post_attention_layernorm/Add:0:0 */;
  %1231 = sqrt(%1230) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/post_attention_layernorm/Sqrt:0:0 */;
  %1232 = divide(1f /* ty=float32 span=/model/layers.12/post_attention_layernorm/Constant_2:0:0 */, %1231) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.12/post_attention_layernorm/Div:0:0 */;
  %1233 = multiply(%1227, %1232) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/post_attention_layernorm/Mul:0:0 */;
  %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/post_attention_layernorm/Cast_1:0:0 */;
  %1235 = multiply(%model.layers.12.post_attention_layernorm.weight, %1234) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/post_attention_layernorm/Mul_1:0:0 */;
  %1236 = reshape(%1235, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/mlp/gate_proj/MatMul:0:0 */;
  %1237 = transpose(%onnx::MatMul_8909, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.12/mlp/gate_proj/MatMul:0:0 */;
  %1238 = nn.dense(%1236, %1237, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.12/mlp/gate_proj/MatMul:0:0 */;
  %1239 = reshape(%1238, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.12/mlp/gate_proj/MatMul:0:0 */;
  %1240 = sigmoid(%1239) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.12/mlp/act_fn/Sigmoid:0:0 */;
  %1241 = reshape(%1235, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/mlp/up_proj/MatMul:0:0 */;
  %1242 = transpose(%onnx::MatMul_8910, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.12/mlp/up_proj/MatMul:0:0 */;
  %1243 = nn.dense(%1241, %1242, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.12/mlp/up_proj/MatMul:0:0 */;
  %1244 = multiply(%1239, %1240) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.12/mlp/act_fn/Mul:0:0 */;
  %1245 = reshape(%1243, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.12/mlp/up_proj/MatMul:0:0 */;
  %1246 = multiply(%1244, %1245) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.12/mlp/Mul:0:0 */;
  %1247 = reshape(%1246, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.12/mlp/down_proj/MatMul:0:0 */;
  %1248 = transpose(%onnx::MatMul_8911, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.12/mlp/down_proj/MatMul:0:0 */;
  %1249 = nn.dense(%1247, %1248, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.12/mlp/down_proj/MatMul:0:0 */;
  %1250 = reshape(%1249, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/mlp/down_proj/MatMul:0:0 */;
  %1251 = add(%1227, %1250) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.12/Add_1:0:0 */;
  %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/input_layernorm/Cast:0:0 */;
  %1253 = power(%1252, 2f /* ty=float32 span=/model/layers.13/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/input_layernorm/Pow:0:0 */;
  %1254 = mean(%1253, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/input_layernorm/ReduceMean:0:0 */;
  %1255 = add(%1254, 1e-05f /* ty=float32 span=/model/layers.13/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/input_layernorm/Add:0:0 */;
  %1256 = sqrt(%1255) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/input_layernorm/Sqrt:0:0 */;
  %1257 = divide(1f /* ty=float32 span=/model/layers.13/input_layernorm/Constant_2:0:0 */, %1256) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/input_layernorm/Div:0:0 */;
  %1258 = multiply(%1252, %1257) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/input_layernorm/Mul:0:0 */;
  %1259 = cast(%1258, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/input_layernorm/Cast_1:0:0 */;
  %1260 = multiply(%model.layers.13.input_layernorm.weight, %1259) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/input_layernorm/Mul_1:0:0 */;
  %1261 = reshape(%1260, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/q_proj/MatMul:0:0 */;
  %1262 = transpose(%onnx::MatMul_8912, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.13/self_attn/q_proj/MatMul:0:0 */;
  %1263 = nn.dense(%1261, %1262, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/q_proj/MatMul:0:0 */;
  %1264 = reshape(%1263, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/self_attn/q_proj/MatMul:0:0 */;
  %1265 = reshape(%1264, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.13/self_attn/Reshape:0:0 */;
  %1266 = transpose(%1265, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Transpose:0:0 */;
  %1267 = strided_slice(%1266, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.13/self_attn/Slice_1:0:0 */;
  %1268 = negative(%1267) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.13/self_attn/Neg:0:0 */;
  %1269 = strided_slice(%1266, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.13/self_attn/Slice:0:0 */;
  %1270 = (%1268, %1269) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.13/self_attn/Concat:0:0 */;
  %1271 = concatenate(%1270, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Concat:0:0 */;
  %1272 = multiply(%1266, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Mul:0:0 */;
  %1273 = multiply(%1271, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Mul_1:0:0 */;
  %1274 = add(%1272, %1273) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Add:0:0 */;
  %1275 = multiply(%1274, meta[relay.Constant][41] /* ty=Tensor[(1), float32] span=/model/layers.13/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Mul_6:0:0 */;
  %1276 = reshape(%1260, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/k_proj/MatMul:0:0 */;
  %1277 = transpose(%onnx::MatMul_8913, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.13/self_attn/k_proj/MatMul:0:0 */;
  %1278 = nn.dense(%1276, %1277, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.13/self_attn/k_proj/MatMul:0:0 */;
  %1279 = reshape(%1278, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.13/self_attn/k_proj/MatMul:0:0 */;
  %1280 = reshape(%1279, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.13/self_attn/Reshape_1:0:0 */;
  %1281 = transpose(%1280, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Transpose_1:0:0 */;
  %1282 = strided_slice(%1281, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.13/self_attn/Slice_3:0:0 */;
  %1283 = negative(%1282) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.13/self_attn/Neg_1:0:0 */;
  %1284 = strided_slice(%1281, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.13/self_attn/Slice_2:0:0 */;
  %1285 = (%1283, %1284) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.13/self_attn/Concat_1:0:0 */;
  %1286 = concatenate(%1285, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Concat_1:0:0 */;
  %1287 = multiply(%1281, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Mul_2:0:0 */;
  %1288 = multiply(%1286, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Mul_3:0:0 */;
  %1289 = add(%1287, %1288) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Add_1:0:0 */;
  %1290 = expand_dims(%1289, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.13/self_attn/Unsqueeze:0:0 */;
  %1291 = broadcast_to(%1290, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.13/self_attn/Expand:0:0 */;
  %1292 = reshape(%1291, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Reshape_3:0:0 */;
  %1293 = transpose(%1292, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.13/self_attn/Transpose_3:0:0 */;
  %1294 = multiply(%1293, meta[relay.Constant][42] /* ty=Tensor[(1), float32] span=/model/layers.13/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.13/self_attn/Mul_7:0:0 */;
  %1295 = reshape(%1294, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.13/self_attn/MatMul:0:0 */;
  %1296 = reshape(%1275, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.13/self_attn/MatMul:0:0 */;
  %1297 = transpose(%1295, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.13/self_attn/MatMul:0:0 */;
  %1298 = nn.batch_matmul(%1296, %1297, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.13/self_attn/MatMul:0:0 */;
  %1299 = reshape(%1298, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.13/self_attn/MatMul:0:0 */;
  %1300 = add(%1299, meta[relay.Constant][43] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.13/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.13/self_attn/Add_2:0:0 */;
  %1301 = nn.softmax(%1300, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.13/self_attn/Softmax:0:0 */;
  %1302 = reshape(%1260, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/v_proj/MatMul:0:0 */;
  %1303 = transpose(%onnx::MatMul_8914, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.13/self_attn/v_proj/MatMul:0:0 */;
  %1304 = nn.dense(%1302, %1303, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.13/self_attn/v_proj/MatMul:0:0 */;
  %1305 = reshape(%1304, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.13/self_attn/v_proj/MatMul:0:0 */;
  %1306 = reshape(%1305, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.13/self_attn/Reshape_2:0:0 */;
  %1307 = transpose(%1306, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.13/self_attn/Transpose_2:0:0 */;
  %1308 = expand_dims(%1307, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.13/self_attn/Unsqueeze_1:0:0 */;
  %1309 = broadcast_to(%1308, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.13/self_attn/Expand_1:0:0 */;
  %1310 = reshape(%1309, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/Reshape_4:0:0 */;
  %1311 = reshape(%1310, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.13/self_attn/MatMul_1:0:0 */;
  %1312 = reshape(%1301, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.13/self_attn/MatMul_1:0:0 */;
  %1313 = transpose(%1311, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.13/self_attn/MatMul_1:0:0 */;
  %1314 = nn.batch_matmul(%1312, %1313, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.13/self_attn/MatMul_1:0:0 */;
  %1315 = reshape(%1314, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.13/self_attn/MatMul_1:0:0 */;
  %1316 = transpose(%1315, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.13/self_attn/Transpose_4:0:0 */;
  %1317 = reshape(%1316, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/self_attn/Reshape_5:0:0 */;
  %1318 = reshape(%1317, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/o_proj/MatMul:0:0 */;
  %1319 = transpose(%onnx::MatMul_8980, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.13/self_attn/o_proj/MatMul:0:0 */;
  %1320 = nn.dense(%1318, %1319, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/self_attn/o_proj/MatMul:0:0 */;
  %1321 = reshape(%1320, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/self_attn/o_proj/MatMul:0:0 */;
  %1322 = add(%1252, %1321) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/Add:0:0 */;
  %1323 = cast(%1322, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/post_attention_layernorm/Cast:0:0 */;
  %1324 = power(%1323, 2f /* ty=float32 span=/model/layers.13/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/post_attention_layernorm/Pow:0:0 */;
  %1325 = mean(%1324, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/post_attention_layernorm/ReduceMean:0:0 */;
  %1326 = add(%1325, 1e-05f /* ty=float32 span=/model/layers.13/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/post_attention_layernorm/Add:0:0 */;
  %1327 = sqrt(%1326) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/post_attention_layernorm/Sqrt:0:0 */;
  %1328 = divide(1f /* ty=float32 span=/model/layers.13/post_attention_layernorm/Constant_2:0:0 */, %1327) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.13/post_attention_layernorm/Div:0:0 */;
  %1329 = multiply(%1323, %1328) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/post_attention_layernorm/Mul:0:0 */;
  %1330 = cast(%1329, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/post_attention_layernorm/Cast_1:0:0 */;
  %1331 = multiply(%model.layers.13.post_attention_layernorm.weight, %1330) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/post_attention_layernorm/Mul_1:0:0 */;
  %1332 = reshape(%1331, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/mlp/gate_proj/MatMul:0:0 */;
  %1333 = transpose(%onnx::MatMul_8981, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.13/mlp/gate_proj/MatMul:0:0 */;
  %1334 = nn.dense(%1332, %1333, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.13/mlp/gate_proj/MatMul:0:0 */;
  %1335 = reshape(%1334, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.13/mlp/gate_proj/MatMul:0:0 */;
  %1336 = sigmoid(%1335) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.13/mlp/act_fn/Sigmoid:0:0 */;
  %1337 = reshape(%1331, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/mlp/up_proj/MatMul:0:0 */;
  %1338 = transpose(%onnx::MatMul_8982, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.13/mlp/up_proj/MatMul:0:0 */;
  %1339 = nn.dense(%1337, %1338, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.13/mlp/up_proj/MatMul:0:0 */;
  %1340 = multiply(%1335, %1336) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.13/mlp/act_fn/Mul:0:0 */;
  %1341 = reshape(%1339, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.13/mlp/up_proj/MatMul:0:0 */;
  %1342 = multiply(%1340, %1341) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.13/mlp/Mul:0:0 */;
  %1343 = reshape(%1342, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.13/mlp/down_proj/MatMul:0:0 */;
  %1344 = transpose(%onnx::MatMul_8983, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.13/mlp/down_proj/MatMul:0:0 */;
  %1345 = nn.dense(%1343, %1344, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.13/mlp/down_proj/MatMul:0:0 */;
  %1346 = reshape(%1345, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/mlp/down_proj/MatMul:0:0 */;
  %1347 = add(%1323, %1346) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.13/Add_1:0:0 */;
  %1348 = cast(%1347, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/input_layernorm/Cast:0:0 */;
  %1349 = power(%1348, 2f /* ty=float32 span=/model/layers.14/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/input_layernorm/Pow:0:0 */;
  %1350 = mean(%1349, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/input_layernorm/ReduceMean:0:0 */;
  %1351 = add(%1350, 1e-05f /* ty=float32 span=/model/layers.14/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/input_layernorm/Add:0:0 */;
  %1352 = sqrt(%1351) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/input_layernorm/Sqrt:0:0 */;
  %1353 = divide(1f /* ty=float32 span=/model/layers.14/input_layernorm/Constant_2:0:0 */, %1352) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/input_layernorm/Div:0:0 */;
  %1354 = multiply(%1348, %1353) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/input_layernorm/Mul:0:0 */;
  %1355 = cast(%1354, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/input_layernorm/Cast_1:0:0 */;
  %1356 = multiply(%model.layers.14.input_layernorm.weight, %1355) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/input_layernorm/Mul_1:0:0 */;
  %1357 = reshape(%1356, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/q_proj/MatMul:0:0 */;
  %1358 = transpose(%onnx::MatMul_8984, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.14/self_attn/q_proj/MatMul:0:0 */;
  %1359 = nn.dense(%1357, %1358, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/q_proj/MatMul:0:0 */;
  %1360 = reshape(%1359, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/self_attn/q_proj/MatMul:0:0 */;
  %1361 = reshape(%1360, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.14/self_attn/Reshape:0:0 */;
  %1362 = transpose(%1361, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Transpose:0:0 */;
  %1363 = strided_slice(%1362, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.14/self_attn/Slice_1:0:0 */;
  %1364 = negative(%1363) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.14/self_attn/Neg:0:0 */;
  %1365 = strided_slice(%1362, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.14/self_attn/Slice:0:0 */;
  %1366 = (%1364, %1365) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.14/self_attn/Concat:0:0 */;
  %1367 = concatenate(%1366, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Concat:0:0 */;
  %1368 = multiply(%1362, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Mul:0:0 */;
  %1369 = multiply(%1367, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Mul_1:0:0 */;
  %1370 = add(%1368, %1369) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Add:0:0 */;
  %1371 = multiply(%1370, meta[relay.Constant][44] /* ty=Tensor[(1), float32] span=/model/layers.14/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Mul_6:0:0 */;
  %1372 = reshape(%1356, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/k_proj/MatMul:0:0 */;
  %1373 = transpose(%onnx::MatMul_8985, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.14/self_attn/k_proj/MatMul:0:0 */;
  %1374 = nn.dense(%1372, %1373, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.14/self_attn/k_proj/MatMul:0:0 */;
  %1375 = reshape(%1374, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.14/self_attn/k_proj/MatMul:0:0 */;
  %1376 = reshape(%1375, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.14/self_attn/Reshape_1:0:0 */;
  %1377 = transpose(%1376, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Transpose_1:0:0 */;
  %1378 = strided_slice(%1377, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.14/self_attn/Slice_3:0:0 */;
  %1379 = negative(%1378) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.14/self_attn/Neg_1:0:0 */;
  %1380 = strided_slice(%1377, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.14/self_attn/Slice_2:0:0 */;
  %1381 = (%1379, %1380) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.14/self_attn/Concat_1:0:0 */;
  %1382 = concatenate(%1381, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Concat_1:0:0 */;
  %1383 = multiply(%1377, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Mul_2:0:0 */;
  %1384 = multiply(%1382, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Mul_3:0:0 */;
  %1385 = add(%1383, %1384) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Add_1:0:0 */;
  %1386 = expand_dims(%1385, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.14/self_attn/Unsqueeze:0:0 */;
  %1387 = broadcast_to(%1386, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.14/self_attn/Expand:0:0 */;
  %1388 = reshape(%1387, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Reshape_3:0:0 */;
  %1389 = transpose(%1388, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.14/self_attn/Transpose_3:0:0 */;
  %1390 = multiply(%1389, meta[relay.Constant][45] /* ty=Tensor[(1), float32] span=/model/layers.14/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.14/self_attn/Mul_7:0:0 */;
  %1391 = reshape(%1390, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.14/self_attn/MatMul:0:0 */;
  %1392 = reshape(%1371, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.14/self_attn/MatMul:0:0 */;
  %1393 = transpose(%1391, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.14/self_attn/MatMul:0:0 */;
  %1394 = nn.batch_matmul(%1392, %1393, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.14/self_attn/MatMul:0:0 */;
  %1395 = reshape(%1394, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.14/self_attn/MatMul:0:0 */;
  %1396 = add(%1395, meta[relay.Constant][46] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.14/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.14/self_attn/Add_2:0:0 */;
  %1397 = nn.softmax(%1396, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.14/self_attn/Softmax:0:0 */;
  %1398 = reshape(%1356, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/v_proj/MatMul:0:0 */;
  %1399 = transpose(%onnx::MatMul_8986, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.14/self_attn/v_proj/MatMul:0:0 */;
  %1400 = nn.dense(%1398, %1399, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.14/self_attn/v_proj/MatMul:0:0 */;
  %1401 = reshape(%1400, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.14/self_attn/v_proj/MatMul:0:0 */;
  %1402 = reshape(%1401, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.14/self_attn/Reshape_2:0:0 */;
  %1403 = transpose(%1402, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.14/self_attn/Transpose_2:0:0 */;
  %1404 = expand_dims(%1403, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.14/self_attn/Unsqueeze_1:0:0 */;
  %1405 = broadcast_to(%1404, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.14/self_attn/Expand_1:0:0 */;
  %1406 = reshape(%1405, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/Reshape_4:0:0 */;
  %1407 = reshape(%1406, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.14/self_attn/MatMul_1:0:0 */;
  %1408 = reshape(%1397, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.14/self_attn/MatMul_1:0:0 */;
  %1409 = transpose(%1407, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.14/self_attn/MatMul_1:0:0 */;
  %1410 = nn.batch_matmul(%1408, %1409, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.14/self_attn/MatMul_1:0:0 */;
  %1411 = reshape(%1410, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.14/self_attn/MatMul_1:0:0 */;
  %1412 = transpose(%1411, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.14/self_attn/Transpose_4:0:0 */;
  %1413 = reshape(%1412, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/self_attn/Reshape_5:0:0 */;
  %1414 = reshape(%1413, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/o_proj/MatMul:0:0 */;
  %1415 = transpose(%onnx::MatMul_9052, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.14/self_attn/o_proj/MatMul:0:0 */;
  %1416 = nn.dense(%1414, %1415, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/self_attn/o_proj/MatMul:0:0 */;
  %1417 = reshape(%1416, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/self_attn/o_proj/MatMul:0:0 */;
  %1418 = add(%1348, %1417) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/Add:0:0 */;
  %1419 = cast(%1418, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/post_attention_layernorm/Cast:0:0 */;
  %1420 = power(%1419, 2f /* ty=float32 span=/model/layers.14/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/post_attention_layernorm/Pow:0:0 */;
  %1421 = mean(%1420, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/post_attention_layernorm/ReduceMean:0:0 */;
  %1422 = add(%1421, 1e-05f /* ty=float32 span=/model/layers.14/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/post_attention_layernorm/Add:0:0 */;
  %1423 = sqrt(%1422) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/post_attention_layernorm/Sqrt:0:0 */;
  %1424 = divide(1f /* ty=float32 span=/model/layers.14/post_attention_layernorm/Constant_2:0:0 */, %1423) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.14/post_attention_layernorm/Div:0:0 */;
  %1425 = multiply(%1419, %1424) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/post_attention_layernorm/Mul:0:0 */;
  %1426 = cast(%1425, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/post_attention_layernorm/Cast_1:0:0 */;
  %1427 = multiply(%model.layers.14.post_attention_layernorm.weight, %1426) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/post_attention_layernorm/Mul_1:0:0 */;
  %1428 = reshape(%1427, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/mlp/gate_proj/MatMul:0:0 */;
  %1429 = transpose(%onnx::MatMul_9053, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.14/mlp/gate_proj/MatMul:0:0 */;
  %1430 = nn.dense(%1428, %1429, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.14/mlp/gate_proj/MatMul:0:0 */;
  %1431 = reshape(%1430, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.14/mlp/gate_proj/MatMul:0:0 */;
  %1432 = sigmoid(%1431) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.14/mlp/act_fn/Sigmoid:0:0 */;
  %1433 = reshape(%1427, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/mlp/up_proj/MatMul:0:0 */;
  %1434 = transpose(%onnx::MatMul_9054, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.14/mlp/up_proj/MatMul:0:0 */;
  %1435 = nn.dense(%1433, %1434, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.14/mlp/up_proj/MatMul:0:0 */;
  %1436 = multiply(%1431, %1432) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.14/mlp/act_fn/Mul:0:0 */;
  %1437 = reshape(%1435, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.14/mlp/up_proj/MatMul:0:0 */;
  %1438 = multiply(%1436, %1437) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.14/mlp/Mul:0:0 */;
  %1439 = reshape(%1438, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.14/mlp/down_proj/MatMul:0:0 */;
  %1440 = transpose(%onnx::MatMul_9055, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.14/mlp/down_proj/MatMul:0:0 */;
  %1441 = nn.dense(%1439, %1440, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.14/mlp/down_proj/MatMul:0:0 */;
  %1442 = reshape(%1441, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/mlp/down_proj/MatMul:0:0 */;
  %1443 = add(%1419, %1442) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.14/Add_1:0:0 */;
  %1444 = cast(%1443, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/input_layernorm/Cast:0:0 */;
  %1445 = power(%1444, 2f /* ty=float32 span=/model/layers.15/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/input_layernorm/Pow:0:0 */;
  %1446 = mean(%1445, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/input_layernorm/ReduceMean:0:0 */;
  %1447 = add(%1446, 1e-05f /* ty=float32 span=/model/layers.15/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/input_layernorm/Add:0:0 */;
  %1448 = sqrt(%1447) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/input_layernorm/Sqrt:0:0 */;
  %1449 = divide(1f /* ty=float32 span=/model/layers.15/input_layernorm/Constant_2:0:0 */, %1448) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/input_layernorm/Div:0:0 */;
  %1450 = multiply(%1444, %1449) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/input_layernorm/Mul:0:0 */;
  %1451 = cast(%1450, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/input_layernorm/Cast_1:0:0 */;
  %1452 = multiply(%model.layers.15.input_layernorm.weight, %1451) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/input_layernorm/Mul_1:0:0 */;
  %1453 = reshape(%1452, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/q_proj/MatMul:0:0 */;
  %1454 = transpose(%onnx::MatMul_9056, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.15/self_attn/q_proj/MatMul:0:0 */;
  %1455 = nn.dense(%1453, %1454, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/q_proj/MatMul:0:0 */;
  %1456 = reshape(%1455, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/self_attn/q_proj/MatMul:0:0 */;
  %1457 = reshape(%1456, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.15/self_attn/Reshape:0:0 */;
  %1458 = transpose(%1457, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Transpose:0:0 */;
  %1459 = strided_slice(%1458, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.15/self_attn/Slice_1:0:0 */;
  %1460 = negative(%1459) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.15/self_attn/Neg:0:0 */;
  %1461 = strided_slice(%1458, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.15/self_attn/Slice:0:0 */;
  %1462 = (%1460, %1461) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.15/self_attn/Concat:0:0 */;
  %1463 = concatenate(%1462, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Concat:0:0 */;
  %1464 = multiply(%1458, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Mul:0:0 */;
  %1465 = multiply(%1463, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Mul_1:0:0 */;
  %1466 = add(%1464, %1465) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Add:0:0 */;
  %1467 = multiply(%1466, meta[relay.Constant][47] /* ty=Tensor[(1), float32] span=/model/layers.15/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Mul_6:0:0 */;
  %1468 = reshape(%1452, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/k_proj/MatMul:0:0 */;
  %1469 = transpose(%onnx::MatMul_9057, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.15/self_attn/k_proj/MatMul:0:0 */;
  %1470 = nn.dense(%1468, %1469, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.15/self_attn/k_proj/MatMul:0:0 */;
  %1471 = reshape(%1470, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.15/self_attn/k_proj/MatMul:0:0 */;
  %1472 = reshape(%1471, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.15/self_attn/Reshape_1:0:0 */;
  %1473 = transpose(%1472, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Transpose_1:0:0 */;
  %1474 = strided_slice(%1473, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.15/self_attn/Slice_3:0:0 */;
  %1475 = negative(%1474) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.15/self_attn/Neg_1:0:0 */;
  %1476 = strided_slice(%1473, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.15/self_attn/Slice_2:0:0 */;
  %1477 = (%1475, %1476) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.15/self_attn/Concat_1:0:0 */;
  %1478 = concatenate(%1477, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Concat_1:0:0 */;
  %1479 = multiply(%1473, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Mul_2:0:0 */;
  %1480 = multiply(%1478, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Mul_3:0:0 */;
  %1481 = add(%1479, %1480) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Add_1:0:0 */;
  %1482 = expand_dims(%1481, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.15/self_attn/Unsqueeze:0:0 */;
  %1483 = broadcast_to(%1482, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.15/self_attn/Expand:0:0 */;
  %1484 = reshape(%1483, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Reshape_3:0:0 */;
  %1485 = transpose(%1484, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.15/self_attn/Transpose_3:0:0 */;
  %1486 = multiply(%1485, meta[relay.Constant][48] /* ty=Tensor[(1), float32] span=/model/layers.15/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.15/self_attn/Mul_7:0:0 */;
  %1487 = reshape(%1486, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.15/self_attn/MatMul:0:0 */;
  %1488 = reshape(%1467, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.15/self_attn/MatMul:0:0 */;
  %1489 = transpose(%1487, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.15/self_attn/MatMul:0:0 */;
  %1490 = nn.batch_matmul(%1488, %1489, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.15/self_attn/MatMul:0:0 */;
  %1491 = reshape(%1490, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.15/self_attn/MatMul:0:0 */;
  %1492 = add(%1491, meta[relay.Constant][49] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.15/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.15/self_attn/Add_2:0:0 */;
  %1493 = nn.softmax(%1492, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.15/self_attn/Softmax:0:0 */;
  %1494 = reshape(%1452, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/v_proj/MatMul:0:0 */;
  %1495 = transpose(%onnx::MatMul_9058, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.15/self_attn/v_proj/MatMul:0:0 */;
  %1496 = nn.dense(%1494, %1495, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.15/self_attn/v_proj/MatMul:0:0 */;
  %1497 = reshape(%1496, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.15/self_attn/v_proj/MatMul:0:0 */;
  %1498 = reshape(%1497, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.15/self_attn/Reshape_2:0:0 */;
  %1499 = transpose(%1498, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.15/self_attn/Transpose_2:0:0 */;
  %1500 = expand_dims(%1499, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.15/self_attn/Unsqueeze_1:0:0 */;
  %1501 = broadcast_to(%1500, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.15/self_attn/Expand_1:0:0 */;
  %1502 = reshape(%1501, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/Reshape_4:0:0 */;
  %1503 = reshape(%1502, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.15/self_attn/MatMul_1:0:0 */;
  %1504 = reshape(%1493, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.15/self_attn/MatMul_1:0:0 */;
  %1505 = transpose(%1503, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.15/self_attn/MatMul_1:0:0 */;
  %1506 = nn.batch_matmul(%1504, %1505, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.15/self_attn/MatMul_1:0:0 */;
  %1507 = reshape(%1506, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.15/self_attn/MatMul_1:0:0 */;
  %1508 = transpose(%1507, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.15/self_attn/Transpose_4:0:0 */;
  %1509 = reshape(%1508, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/self_attn/Reshape_5:0:0 */;
  %1510 = reshape(%1509, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/o_proj/MatMul:0:0 */;
  %1511 = transpose(%onnx::MatMul_9124, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.15/self_attn/o_proj/MatMul:0:0 */;
  %1512 = nn.dense(%1510, %1511, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/self_attn/o_proj/MatMul:0:0 */;
  %1513 = reshape(%1512, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/self_attn/o_proj/MatMul:0:0 */;
  %1514 = add(%1444, %1513) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/Add:0:0 */;
  %1515 = cast(%1514, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/post_attention_layernorm/Cast:0:0 */;
  %1516 = power(%1515, 2f /* ty=float32 span=/model/layers.15/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/post_attention_layernorm/Pow:0:0 */;
  %1517 = mean(%1516, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/post_attention_layernorm/ReduceMean:0:0 */;
  %1518 = add(%1517, 1e-05f /* ty=float32 span=/model/layers.15/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/post_attention_layernorm/Add:0:0 */;
  %1519 = sqrt(%1518) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/post_attention_layernorm/Sqrt:0:0 */;
  %1520 = divide(1f /* ty=float32 span=/model/layers.15/post_attention_layernorm/Constant_2:0:0 */, %1519) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.15/post_attention_layernorm/Div:0:0 */;
  %1521 = multiply(%1515, %1520) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/post_attention_layernorm/Mul:0:0 */;
  %1522 = cast(%1521, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/post_attention_layernorm/Cast_1:0:0 */;
  %1523 = multiply(%model.layers.15.post_attention_layernorm.weight, %1522) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/post_attention_layernorm/Mul_1:0:0 */;
  %1524 = reshape(%1523, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/mlp/gate_proj/MatMul:0:0 */;
  %1525 = transpose(%onnx::MatMul_9125, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.15/mlp/gate_proj/MatMul:0:0 */;
  %1526 = nn.dense(%1524, %1525, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.15/mlp/gate_proj/MatMul:0:0 */;
  %1527 = reshape(%1526, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.15/mlp/gate_proj/MatMul:0:0 */;
  %1528 = sigmoid(%1527) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.15/mlp/act_fn/Sigmoid:0:0 */;
  %1529 = reshape(%1523, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/mlp/up_proj/MatMul:0:0 */;
  %1530 = transpose(%onnx::MatMul_9126, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.15/mlp/up_proj/MatMul:0:0 */;
  %1531 = nn.dense(%1529, %1530, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.15/mlp/up_proj/MatMul:0:0 */;
  %1532 = multiply(%1527, %1528) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.15/mlp/act_fn/Mul:0:0 */;
  %1533 = reshape(%1531, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.15/mlp/up_proj/MatMul:0:0 */;
  %1534 = multiply(%1532, %1533) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.15/mlp/Mul:0:0 */;
  %1535 = reshape(%1534, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.15/mlp/down_proj/MatMul:0:0 */;
  %1536 = transpose(%onnx::MatMul_9127, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.15/mlp/down_proj/MatMul:0:0 */;
  %1537 = nn.dense(%1535, %1536, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.15/mlp/down_proj/MatMul:0:0 */;
  %1538 = reshape(%1537, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/mlp/down_proj/MatMul:0:0 */;
  %1539 = add(%1515, %1538) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.15/Add_1:0:0 */;
  %1540 = cast(%1539, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/input_layernorm/Cast:0:0 */;
  %1541 = power(%1540, 2f /* ty=float32 span=/model/layers.16/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/input_layernorm/Pow:0:0 */;
  %1542 = mean(%1541, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/input_layernorm/ReduceMean:0:0 */;
  %1543 = add(%1542, 1e-05f /* ty=float32 span=/model/layers.16/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/input_layernorm/Add:0:0 */;
  %1544 = sqrt(%1543) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/input_layernorm/Sqrt:0:0 */;
  %1545 = divide(1f /* ty=float32 span=/model/layers.16/input_layernorm/Constant_2:0:0 */, %1544) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/input_layernorm/Div:0:0 */;
  %1546 = multiply(%1540, %1545) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/input_layernorm/Mul:0:0 */;
  %1547 = cast(%1546, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/input_layernorm/Cast_1:0:0 */;
  %1548 = multiply(%model.layers.16.input_layernorm.weight, %1547) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/input_layernorm/Mul_1:0:0 */;
  %1549 = reshape(%1548, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/q_proj/MatMul:0:0 */;
  %1550 = transpose(%onnx::MatMul_9128, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.16/self_attn/q_proj/MatMul:0:0 */;
  %1551 = nn.dense(%1549, %1550, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/q_proj/MatMul:0:0 */;
  %1552 = reshape(%1551, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/self_attn/q_proj/MatMul:0:0 */;
  %1553 = reshape(%1552, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.16/self_attn/Reshape:0:0 */;
  %1554 = transpose(%1553, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Transpose:0:0 */;
  %1555 = strided_slice(%1554, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.16/self_attn/Slice_1:0:0 */;
  %1556 = negative(%1555) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.16/self_attn/Neg:0:0 */;
  %1557 = strided_slice(%1554, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.16/self_attn/Slice:0:0 */;
  %1558 = (%1556, %1557) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.16/self_attn/Concat:0:0 */;
  %1559 = concatenate(%1558, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Concat:0:0 */;
  %1560 = multiply(%1554, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Mul:0:0 */;
  %1561 = multiply(%1559, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Mul_1:0:0 */;
  %1562 = add(%1560, %1561) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Add:0:0 */;
  %1563 = multiply(%1562, meta[relay.Constant][50] /* ty=Tensor[(1), float32] span=/model/layers.16/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Mul_6:0:0 */;
  %1564 = reshape(%1548, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/k_proj/MatMul:0:0 */;
  %1565 = transpose(%onnx::MatMul_9129, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.16/self_attn/k_proj/MatMul:0:0 */;
  %1566 = nn.dense(%1564, %1565, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.16/self_attn/k_proj/MatMul:0:0 */;
  %1567 = reshape(%1566, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.16/self_attn/k_proj/MatMul:0:0 */;
  %1568 = reshape(%1567, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.16/self_attn/Reshape_1:0:0 */;
  %1569 = transpose(%1568, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Transpose_1:0:0 */;
  %1570 = strided_slice(%1569, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.16/self_attn/Slice_3:0:0 */;
  %1571 = negative(%1570) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.16/self_attn/Neg_1:0:0 */;
  %1572 = strided_slice(%1569, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.16/self_attn/Slice_2:0:0 */;
  %1573 = (%1571, %1572) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.16/self_attn/Concat_1:0:0 */;
  %1574 = concatenate(%1573, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Concat_1:0:0 */;
  %1575 = multiply(%1569, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Mul_2:0:0 */;
  %1576 = multiply(%1574, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Mul_3:0:0 */;
  %1577 = add(%1575, %1576) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Add_1:0:0 */;
  %1578 = expand_dims(%1577, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.16/self_attn/Unsqueeze:0:0 */;
  %1579 = broadcast_to(%1578, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.16/self_attn/Expand:0:0 */;
  %1580 = reshape(%1579, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Reshape_3:0:0 */;
  %1581 = transpose(%1580, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.16/self_attn/Transpose_3:0:0 */;
  %1582 = multiply(%1581, meta[relay.Constant][51] /* ty=Tensor[(1), float32] span=/model/layers.16/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.16/self_attn/Mul_7:0:0 */;
  %1583 = reshape(%1582, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.16/self_attn/MatMul:0:0 */;
  %1584 = reshape(%1563, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.16/self_attn/MatMul:0:0 */;
  %1585 = transpose(%1583, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.16/self_attn/MatMul:0:0 */;
  %1586 = nn.batch_matmul(%1584, %1585, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.16/self_attn/MatMul:0:0 */;
  %1587 = reshape(%1586, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.16/self_attn/MatMul:0:0 */;
  %1588 = add(%1587, meta[relay.Constant][52] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.16/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.16/self_attn/Add_2:0:0 */;
  %1589 = nn.softmax(%1588, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.16/self_attn/Softmax:0:0 */;
  %1590 = reshape(%1548, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/v_proj/MatMul:0:0 */;
  %1591 = transpose(%onnx::MatMul_9130, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.16/self_attn/v_proj/MatMul:0:0 */;
  %1592 = nn.dense(%1590, %1591, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.16/self_attn/v_proj/MatMul:0:0 */;
  %1593 = reshape(%1592, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.16/self_attn/v_proj/MatMul:0:0 */;
  %1594 = reshape(%1593, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.16/self_attn/Reshape_2:0:0 */;
  %1595 = transpose(%1594, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.16/self_attn/Transpose_2:0:0 */;
  %1596 = expand_dims(%1595, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.16/self_attn/Unsqueeze_1:0:0 */;
  %1597 = broadcast_to(%1596, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.16/self_attn/Expand_1:0:0 */;
  %1598 = reshape(%1597, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/Reshape_4:0:0 */;
  %1599 = reshape(%1598, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.16/self_attn/MatMul_1:0:0 */;
  %1600 = reshape(%1589, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.16/self_attn/MatMul_1:0:0 */;
  %1601 = transpose(%1599, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.16/self_attn/MatMul_1:0:0 */;
  %1602 = nn.batch_matmul(%1600, %1601, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.16/self_attn/MatMul_1:0:0 */;
  %1603 = reshape(%1602, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.16/self_attn/MatMul_1:0:0 */;
  %1604 = transpose(%1603, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.16/self_attn/Transpose_4:0:0 */;
  %1605 = reshape(%1604, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/self_attn/Reshape_5:0:0 */;
  %1606 = reshape(%1605, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/o_proj/MatMul:0:0 */;
  %1607 = transpose(%onnx::MatMul_9196, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.16/self_attn/o_proj/MatMul:0:0 */;
  %1608 = nn.dense(%1606, %1607, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/self_attn/o_proj/MatMul:0:0 */;
  %1609 = reshape(%1608, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/self_attn/o_proj/MatMul:0:0 */;
  %1610 = add(%1540, %1609) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/Add:0:0 */;
  %1611 = cast(%1610, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/post_attention_layernorm/Cast:0:0 */;
  %1612 = power(%1611, 2f /* ty=float32 span=/model/layers.16/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/post_attention_layernorm/Pow:0:0 */;
  %1613 = mean(%1612, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/post_attention_layernorm/ReduceMean:0:0 */;
  %1614 = add(%1613, 1e-05f /* ty=float32 span=/model/layers.16/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/post_attention_layernorm/Add:0:0 */;
  %1615 = sqrt(%1614) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/post_attention_layernorm/Sqrt:0:0 */;
  %1616 = divide(1f /* ty=float32 span=/model/layers.16/post_attention_layernorm/Constant_2:0:0 */, %1615) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.16/post_attention_layernorm/Div:0:0 */;
  %1617 = multiply(%1611, %1616) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/post_attention_layernorm/Mul:0:0 */;
  %1618 = cast(%1617, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/post_attention_layernorm/Cast_1:0:0 */;
  %1619 = multiply(%model.layers.16.post_attention_layernorm.weight, %1618) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/post_attention_layernorm/Mul_1:0:0 */;
  %1620 = reshape(%1619, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/mlp/gate_proj/MatMul:0:0 */;
  %1621 = transpose(%onnx::MatMul_9197, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.16/mlp/gate_proj/MatMul:0:0 */;
  %1622 = nn.dense(%1620, %1621, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.16/mlp/gate_proj/MatMul:0:0 */;
  %1623 = reshape(%1622, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.16/mlp/gate_proj/MatMul:0:0 */;
  %1624 = sigmoid(%1623) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.16/mlp/act_fn/Sigmoid:0:0 */;
  %1625 = reshape(%1619, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/mlp/up_proj/MatMul:0:0 */;
  %1626 = transpose(%onnx::MatMul_9198, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.16/mlp/up_proj/MatMul:0:0 */;
  %1627 = nn.dense(%1625, %1626, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.16/mlp/up_proj/MatMul:0:0 */;
  %1628 = multiply(%1623, %1624) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.16/mlp/act_fn/Mul:0:0 */;
  %1629 = reshape(%1627, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.16/mlp/up_proj/MatMul:0:0 */;
  %1630 = multiply(%1628, %1629) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.16/mlp/Mul:0:0 */;
  %1631 = reshape(%1630, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.16/mlp/down_proj/MatMul:0:0 */;
  %1632 = transpose(%onnx::MatMul_9199, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.16/mlp/down_proj/MatMul:0:0 */;
  %1633 = nn.dense(%1631, %1632, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.16/mlp/down_proj/MatMul:0:0 */;
  %1634 = reshape(%1633, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/mlp/down_proj/MatMul:0:0 */;
  %1635 = add(%1611, %1634) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.16/Add_1:0:0 */;
  %1636 = cast(%1635, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/input_layernorm/Cast:0:0 */;
  %1637 = power(%1636, 2f /* ty=float32 span=/model/layers.17/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/input_layernorm/Pow:0:0 */;
  %1638 = mean(%1637, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/input_layernorm/ReduceMean:0:0 */;
  %1639 = add(%1638, 1e-05f /* ty=float32 span=/model/layers.17/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/input_layernorm/Add:0:0 */;
  %1640 = sqrt(%1639) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/input_layernorm/Sqrt:0:0 */;
  %1641 = divide(1f /* ty=float32 span=/model/layers.17/input_layernorm/Constant_2:0:0 */, %1640) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/input_layernorm/Div:0:0 */;
  %1642 = multiply(%1636, %1641) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/input_layernorm/Mul:0:0 */;
  %1643 = cast(%1642, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/input_layernorm/Cast_1:0:0 */;
  %1644 = multiply(%model.layers.17.input_layernorm.weight, %1643) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/input_layernorm/Mul_1:0:0 */;
  %1645 = reshape(%1644, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/q_proj/MatMul:0:0 */;
  %1646 = transpose(%onnx::MatMul_9200, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.17/self_attn/q_proj/MatMul:0:0 */;
  %1647 = nn.dense(%1645, %1646, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/q_proj/MatMul:0:0 */;
  %1648 = reshape(%1647, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/self_attn/q_proj/MatMul:0:0 */;
  %1649 = reshape(%1648, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.17/self_attn/Reshape:0:0 */;
  %1650 = transpose(%1649, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Transpose:0:0 */;
  %1651 = strided_slice(%1650, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.17/self_attn/Slice_1:0:0 */;
  %1652 = negative(%1651) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.17/self_attn/Neg:0:0 */;
  %1653 = strided_slice(%1650, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.17/self_attn/Slice:0:0 */;
  %1654 = (%1652, %1653) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.17/self_attn/Concat:0:0 */;
  %1655 = concatenate(%1654, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Concat:0:0 */;
  %1656 = multiply(%1650, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Mul:0:0 */;
  %1657 = multiply(%1655, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Mul_1:0:0 */;
  %1658 = add(%1656, %1657) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Add:0:0 */;
  %1659 = multiply(%1658, meta[relay.Constant][53] /* ty=Tensor[(1), float32] span=/model/layers.17/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Mul_6:0:0 */;
  %1660 = reshape(%1644, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/k_proj/MatMul:0:0 */;
  %1661 = transpose(%onnx::MatMul_9201, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.17/self_attn/k_proj/MatMul:0:0 */;
  %1662 = nn.dense(%1660, %1661, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.17/self_attn/k_proj/MatMul:0:0 */;
  %1663 = reshape(%1662, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.17/self_attn/k_proj/MatMul:0:0 */;
  %1664 = reshape(%1663, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.17/self_attn/Reshape_1:0:0 */;
  %1665 = transpose(%1664, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Transpose_1:0:0 */;
  %1666 = strided_slice(%1665, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.17/self_attn/Slice_3:0:0 */;
  %1667 = negative(%1666) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.17/self_attn/Neg_1:0:0 */;
  %1668 = strided_slice(%1665, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.17/self_attn/Slice_2:0:0 */;
  %1669 = (%1667, %1668) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.17/self_attn/Concat_1:0:0 */;
  %1670 = concatenate(%1669, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Concat_1:0:0 */;
  %1671 = multiply(%1665, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Mul_2:0:0 */;
  %1672 = multiply(%1670, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Mul_3:0:0 */;
  %1673 = add(%1671, %1672) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Add_1:0:0 */;
  %1674 = expand_dims(%1673, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.17/self_attn/Unsqueeze:0:0 */;
  %1675 = broadcast_to(%1674, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.17/self_attn/Expand:0:0 */;
  %1676 = reshape(%1675, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Reshape_3:0:0 */;
  %1677 = transpose(%1676, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.17/self_attn/Transpose_3:0:0 */;
  %1678 = multiply(%1677, meta[relay.Constant][54] /* ty=Tensor[(1), float32] span=/model/layers.17/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.17/self_attn/Mul_7:0:0 */;
  %1679 = reshape(%1678, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.17/self_attn/MatMul:0:0 */;
  %1680 = reshape(%1659, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.17/self_attn/MatMul:0:0 */;
  %1681 = transpose(%1679, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.17/self_attn/MatMul:0:0 */;
  %1682 = nn.batch_matmul(%1680, %1681, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.17/self_attn/MatMul:0:0 */;
  %1683 = reshape(%1682, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.17/self_attn/MatMul:0:0 */;
  %1684 = add(%1683, meta[relay.Constant][55] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.17/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.17/self_attn/Add_2:0:0 */;
  %1685 = nn.softmax(%1684, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.17/self_attn/Softmax:0:0 */;
  %1686 = reshape(%1644, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/v_proj/MatMul:0:0 */;
  %1687 = transpose(%onnx::MatMul_9202, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.17/self_attn/v_proj/MatMul:0:0 */;
  %1688 = nn.dense(%1686, %1687, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.17/self_attn/v_proj/MatMul:0:0 */;
  %1689 = reshape(%1688, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.17/self_attn/v_proj/MatMul:0:0 */;
  %1690 = reshape(%1689, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.17/self_attn/Reshape_2:0:0 */;
  %1691 = transpose(%1690, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.17/self_attn/Transpose_2:0:0 */;
  %1692 = expand_dims(%1691, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.17/self_attn/Unsqueeze_1:0:0 */;
  %1693 = broadcast_to(%1692, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.17/self_attn/Expand_1:0:0 */;
  %1694 = reshape(%1693, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/Reshape_4:0:0 */;
  %1695 = reshape(%1694, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.17/self_attn/MatMul_1:0:0 */;
  %1696 = reshape(%1685, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.17/self_attn/MatMul_1:0:0 */;
  %1697 = transpose(%1695, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.17/self_attn/MatMul_1:0:0 */;
  %1698 = nn.batch_matmul(%1696, %1697, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.17/self_attn/MatMul_1:0:0 */;
  %1699 = reshape(%1698, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.17/self_attn/MatMul_1:0:0 */;
  %1700 = transpose(%1699, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.17/self_attn/Transpose_4:0:0 */;
  %1701 = reshape(%1700, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/self_attn/Reshape_5:0:0 */;
  %1702 = reshape(%1701, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/o_proj/MatMul:0:0 */;
  %1703 = transpose(%onnx::MatMul_9268, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.17/self_attn/o_proj/MatMul:0:0 */;
  %1704 = nn.dense(%1702, %1703, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/self_attn/o_proj/MatMul:0:0 */;
  %1705 = reshape(%1704, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/self_attn/o_proj/MatMul:0:0 */;
  %1706 = add(%1636, %1705) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/Add:0:0 */;
  %1707 = cast(%1706, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/post_attention_layernorm/Cast:0:0 */;
  %1708 = power(%1707, 2f /* ty=float32 span=/model/layers.17/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/post_attention_layernorm/Pow:0:0 */;
  %1709 = mean(%1708, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/post_attention_layernorm/ReduceMean:0:0 */;
  %1710 = add(%1709, 1e-05f /* ty=float32 span=/model/layers.17/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/post_attention_layernorm/Add:0:0 */;
  %1711 = sqrt(%1710) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/post_attention_layernorm/Sqrt:0:0 */;
  %1712 = divide(1f /* ty=float32 span=/model/layers.17/post_attention_layernorm/Constant_2:0:0 */, %1711) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.17/post_attention_layernorm/Div:0:0 */;
  %1713 = multiply(%1707, %1712) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/post_attention_layernorm/Mul:0:0 */;
  %1714 = cast(%1713, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/post_attention_layernorm/Cast_1:0:0 */;
  %1715 = multiply(%model.layers.17.post_attention_layernorm.weight, %1714) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/post_attention_layernorm/Mul_1:0:0 */;
  %1716 = reshape(%1715, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/mlp/gate_proj/MatMul:0:0 */;
  %1717 = transpose(%onnx::MatMul_9269, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.17/mlp/gate_proj/MatMul:0:0 */;
  %1718 = nn.dense(%1716, %1717, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.17/mlp/gate_proj/MatMul:0:0 */;
  %1719 = reshape(%1718, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.17/mlp/gate_proj/MatMul:0:0 */;
  %1720 = sigmoid(%1719) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.17/mlp/act_fn/Sigmoid:0:0 */;
  %1721 = reshape(%1715, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/mlp/up_proj/MatMul:0:0 */;
  %1722 = transpose(%onnx::MatMul_9270, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.17/mlp/up_proj/MatMul:0:0 */;
  %1723 = nn.dense(%1721, %1722, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.17/mlp/up_proj/MatMul:0:0 */;
  %1724 = multiply(%1719, %1720) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.17/mlp/act_fn/Mul:0:0 */;
  %1725 = reshape(%1723, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.17/mlp/up_proj/MatMul:0:0 */;
  %1726 = multiply(%1724, %1725) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.17/mlp/Mul:0:0 */;
  %1727 = reshape(%1726, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.17/mlp/down_proj/MatMul:0:0 */;
  %1728 = transpose(%onnx::MatMul_9271, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.17/mlp/down_proj/MatMul:0:0 */;
  %1729 = nn.dense(%1727, %1728, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.17/mlp/down_proj/MatMul:0:0 */;
  %1730 = reshape(%1729, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/mlp/down_proj/MatMul:0:0 */;
  %1731 = add(%1707, %1730) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.17/Add_1:0:0 */;
  %1732 = cast(%1731, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/input_layernorm/Cast:0:0 */;
  %1733 = power(%1732, 2f /* ty=float32 span=/model/layers.18/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/input_layernorm/Pow:0:0 */;
  %1734 = mean(%1733, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/input_layernorm/ReduceMean:0:0 */;
  %1735 = add(%1734, 1e-05f /* ty=float32 span=/model/layers.18/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/input_layernorm/Add:0:0 */;
  %1736 = sqrt(%1735) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/input_layernorm/Sqrt:0:0 */;
  %1737 = divide(1f /* ty=float32 span=/model/layers.18/input_layernorm/Constant_2:0:0 */, %1736) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/input_layernorm/Div:0:0 */;
  %1738 = multiply(%1732, %1737) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/input_layernorm/Mul:0:0 */;
  %1739 = cast(%1738, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/input_layernorm/Cast_1:0:0 */;
  %1740 = multiply(%model.layers.18.input_layernorm.weight, %1739) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/input_layernorm/Mul_1:0:0 */;
  %1741 = reshape(%1740, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/q_proj/MatMul:0:0 */;
  %1742 = transpose(%onnx::MatMul_9272, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.18/self_attn/q_proj/MatMul:0:0 */;
  %1743 = nn.dense(%1741, %1742, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/q_proj/MatMul:0:0 */;
  %1744 = reshape(%1743, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/self_attn/q_proj/MatMul:0:0 */;
  %1745 = reshape(%1744, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.18/self_attn/Reshape:0:0 */;
  %1746 = transpose(%1745, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Transpose:0:0 */;
  %1747 = strided_slice(%1746, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.18/self_attn/Slice_1:0:0 */;
  %1748 = negative(%1747) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.18/self_attn/Neg:0:0 */;
  %1749 = strided_slice(%1746, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.18/self_attn/Slice:0:0 */;
  %1750 = (%1748, %1749) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.18/self_attn/Concat:0:0 */;
  %1751 = concatenate(%1750, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Concat:0:0 */;
  %1752 = multiply(%1746, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Mul:0:0 */;
  %1753 = multiply(%1751, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Mul_1:0:0 */;
  %1754 = add(%1752, %1753) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Add:0:0 */;
  %1755 = multiply(%1754, meta[relay.Constant][56] /* ty=Tensor[(1), float32] span=/model/layers.18/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Mul_6:0:0 */;
  %1756 = reshape(%1740, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/k_proj/MatMul:0:0 */;
  %1757 = transpose(%onnx::MatMul_9273, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.18/self_attn/k_proj/MatMul:0:0 */;
  %1758 = nn.dense(%1756, %1757, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.18/self_attn/k_proj/MatMul:0:0 */;
  %1759 = reshape(%1758, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.18/self_attn/k_proj/MatMul:0:0 */;
  %1760 = reshape(%1759, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.18/self_attn/Reshape_1:0:0 */;
  %1761 = transpose(%1760, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Transpose_1:0:0 */;
  %1762 = strided_slice(%1761, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.18/self_attn/Slice_3:0:0 */;
  %1763 = negative(%1762) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.18/self_attn/Neg_1:0:0 */;
  %1764 = strided_slice(%1761, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.18/self_attn/Slice_2:0:0 */;
  %1765 = (%1763, %1764) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.18/self_attn/Concat_1:0:0 */;
  %1766 = concatenate(%1765, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Concat_1:0:0 */;
  %1767 = multiply(%1761, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Mul_2:0:0 */;
  %1768 = multiply(%1766, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Mul_3:0:0 */;
  %1769 = add(%1767, %1768) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Add_1:0:0 */;
  %1770 = expand_dims(%1769, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.18/self_attn/Unsqueeze:0:0 */;
  %1771 = broadcast_to(%1770, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.18/self_attn/Expand:0:0 */;
  %1772 = reshape(%1771, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Reshape_3:0:0 */;
  %1773 = transpose(%1772, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.18/self_attn/Transpose_3:0:0 */;
  %1774 = multiply(%1773, meta[relay.Constant][57] /* ty=Tensor[(1), float32] span=/model/layers.18/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.18/self_attn/Mul_7:0:0 */;
  %1775 = reshape(%1774, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.18/self_attn/MatMul:0:0 */;
  %1776 = reshape(%1755, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.18/self_attn/MatMul:0:0 */;
  %1777 = transpose(%1775, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.18/self_attn/MatMul:0:0 */;
  %1778 = nn.batch_matmul(%1776, %1777, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.18/self_attn/MatMul:0:0 */;
  %1779 = reshape(%1778, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.18/self_attn/MatMul:0:0 */;
  %1780 = add(%1779, meta[relay.Constant][58] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.18/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.18/self_attn/Add_2:0:0 */;
  %1781 = nn.softmax(%1780, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.18/self_attn/Softmax:0:0 */;
  %1782 = reshape(%1740, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/v_proj/MatMul:0:0 */;
  %1783 = transpose(%onnx::MatMul_9274, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.18/self_attn/v_proj/MatMul:0:0 */;
  %1784 = nn.dense(%1782, %1783, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.18/self_attn/v_proj/MatMul:0:0 */;
  %1785 = reshape(%1784, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.18/self_attn/v_proj/MatMul:0:0 */;
  %1786 = reshape(%1785, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.18/self_attn/Reshape_2:0:0 */;
  %1787 = transpose(%1786, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.18/self_attn/Transpose_2:0:0 */;
  %1788 = expand_dims(%1787, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.18/self_attn/Unsqueeze_1:0:0 */;
  %1789 = broadcast_to(%1788, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.18/self_attn/Expand_1:0:0 */;
  %1790 = reshape(%1789, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/Reshape_4:0:0 */;
  %1791 = reshape(%1790, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.18/self_attn/MatMul_1:0:0 */;
  %1792 = reshape(%1781, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.18/self_attn/MatMul_1:0:0 */;
  %1793 = transpose(%1791, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.18/self_attn/MatMul_1:0:0 */;
  %1794 = nn.batch_matmul(%1792, %1793, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.18/self_attn/MatMul_1:0:0 */;
  %1795 = reshape(%1794, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.18/self_attn/MatMul_1:0:0 */;
  %1796 = transpose(%1795, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.18/self_attn/Transpose_4:0:0 */;
  %1797 = reshape(%1796, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/self_attn/Reshape_5:0:0 */;
  %1798 = reshape(%1797, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/o_proj/MatMul:0:0 */;
  %1799 = transpose(%onnx::MatMul_9340, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.18/self_attn/o_proj/MatMul:0:0 */;
  %1800 = nn.dense(%1798, %1799, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/self_attn/o_proj/MatMul:0:0 */;
  %1801 = reshape(%1800, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/self_attn/o_proj/MatMul:0:0 */;
  %1802 = add(%1732, %1801) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/Add:0:0 */;
  %1803 = cast(%1802, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/post_attention_layernorm/Cast:0:0 */;
  %1804 = power(%1803, 2f /* ty=float32 span=/model/layers.18/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/post_attention_layernorm/Pow:0:0 */;
  %1805 = mean(%1804, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/post_attention_layernorm/ReduceMean:0:0 */;
  %1806 = add(%1805, 1e-05f /* ty=float32 span=/model/layers.18/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/post_attention_layernorm/Add:0:0 */;
  %1807 = sqrt(%1806) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/post_attention_layernorm/Sqrt:0:0 */;
  %1808 = divide(1f /* ty=float32 span=/model/layers.18/post_attention_layernorm/Constant_2:0:0 */, %1807) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.18/post_attention_layernorm/Div:0:0 */;
  %1809 = multiply(%1803, %1808) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/post_attention_layernorm/Mul:0:0 */;
  %1810 = cast(%1809, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/post_attention_layernorm/Cast_1:0:0 */;
  %1811 = multiply(%model.layers.18.post_attention_layernorm.weight, %1810) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/post_attention_layernorm/Mul_1:0:0 */;
  %1812 = reshape(%1811, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/mlp/gate_proj/MatMul:0:0 */;
  %1813 = transpose(%onnx::MatMul_9341, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.18/mlp/gate_proj/MatMul:0:0 */;
  %1814 = nn.dense(%1812, %1813, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.18/mlp/gate_proj/MatMul:0:0 */;
  %1815 = reshape(%1814, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.18/mlp/gate_proj/MatMul:0:0 */;
  %1816 = sigmoid(%1815) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.18/mlp/act_fn/Sigmoid:0:0 */;
  %1817 = reshape(%1811, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/mlp/up_proj/MatMul:0:0 */;
  %1818 = transpose(%onnx::MatMul_9342, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.18/mlp/up_proj/MatMul:0:0 */;
  %1819 = nn.dense(%1817, %1818, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.18/mlp/up_proj/MatMul:0:0 */;
  %1820 = multiply(%1815, %1816) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.18/mlp/act_fn/Mul:0:0 */;
  %1821 = reshape(%1819, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.18/mlp/up_proj/MatMul:0:0 */;
  %1822 = multiply(%1820, %1821) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.18/mlp/Mul:0:0 */;
  %1823 = reshape(%1822, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.18/mlp/down_proj/MatMul:0:0 */;
  %1824 = transpose(%onnx::MatMul_9343, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.18/mlp/down_proj/MatMul:0:0 */;
  %1825 = nn.dense(%1823, %1824, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.18/mlp/down_proj/MatMul:0:0 */;
  %1826 = reshape(%1825, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/mlp/down_proj/MatMul:0:0 */;
  %1827 = add(%1803, %1826) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.18/Add_1:0:0 */;
  %1828 = cast(%1827, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/input_layernorm/Cast:0:0 */;
  %1829 = power(%1828, 2f /* ty=float32 span=/model/layers.19/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/input_layernorm/Pow:0:0 */;
  %1830 = mean(%1829, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/input_layernorm/ReduceMean:0:0 */;
  %1831 = add(%1830, 1e-05f /* ty=float32 span=/model/layers.19/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/input_layernorm/Add:0:0 */;
  %1832 = sqrt(%1831) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/input_layernorm/Sqrt:0:0 */;
  %1833 = divide(1f /* ty=float32 span=/model/layers.19/input_layernorm/Constant_2:0:0 */, %1832) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/input_layernorm/Div:0:0 */;
  %1834 = multiply(%1828, %1833) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/input_layernorm/Mul:0:0 */;
  %1835 = cast(%1834, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/input_layernorm/Cast_1:0:0 */;
  %1836 = multiply(%model.layers.19.input_layernorm.weight, %1835) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/input_layernorm/Mul_1:0:0 */;
  %1837 = reshape(%1836, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/q_proj/MatMul:0:0 */;
  %1838 = transpose(%onnx::MatMul_9344, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.19/self_attn/q_proj/MatMul:0:0 */;
  %1839 = nn.dense(%1837, %1838, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/q_proj/MatMul:0:0 */;
  %1840 = reshape(%1839, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/self_attn/q_proj/MatMul:0:0 */;
  %1841 = reshape(%1840, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.19/self_attn/Reshape:0:0 */;
  %1842 = transpose(%1841, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Transpose:0:0 */;
  %1843 = strided_slice(%1842, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.19/self_attn/Slice_1:0:0 */;
  %1844 = negative(%1843) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.19/self_attn/Neg:0:0 */;
  %1845 = strided_slice(%1842, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.19/self_attn/Slice:0:0 */;
  %1846 = (%1844, %1845) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.19/self_attn/Concat:0:0 */;
  %1847 = concatenate(%1846, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Concat:0:0 */;
  %1848 = multiply(%1842, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Mul:0:0 */;
  %1849 = multiply(%1847, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Mul_1:0:0 */;
  %1850 = add(%1848, %1849) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Add:0:0 */;
  %1851 = multiply(%1850, meta[relay.Constant][59] /* ty=Tensor[(1), float32] span=/model/layers.19/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Mul_6:0:0 */;
  %1852 = reshape(%1836, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/k_proj/MatMul:0:0 */;
  %1853 = transpose(%onnx::MatMul_9345, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.19/self_attn/k_proj/MatMul:0:0 */;
  %1854 = nn.dense(%1852, %1853, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.19/self_attn/k_proj/MatMul:0:0 */;
  %1855 = reshape(%1854, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.19/self_attn/k_proj/MatMul:0:0 */;
  %1856 = reshape(%1855, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.19/self_attn/Reshape_1:0:0 */;
  %1857 = transpose(%1856, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Transpose_1:0:0 */;
  %1858 = strided_slice(%1857, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.19/self_attn/Slice_3:0:0 */;
  %1859 = negative(%1858) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.19/self_attn/Neg_1:0:0 */;
  %1860 = strided_slice(%1857, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.19/self_attn/Slice_2:0:0 */;
  %1861 = (%1859, %1860) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.19/self_attn/Concat_1:0:0 */;
  %1862 = concatenate(%1861, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Concat_1:0:0 */;
  %1863 = multiply(%1857, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Mul_2:0:0 */;
  %1864 = multiply(%1862, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Mul_3:0:0 */;
  %1865 = add(%1863, %1864) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Add_1:0:0 */;
  %1866 = expand_dims(%1865, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.19/self_attn/Unsqueeze:0:0 */;
  %1867 = broadcast_to(%1866, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.19/self_attn/Expand:0:0 */;
  %1868 = reshape(%1867, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Reshape_3:0:0 */;
  %1869 = transpose(%1868, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.19/self_attn/Transpose_3:0:0 */;
  %1870 = multiply(%1869, meta[relay.Constant][60] /* ty=Tensor[(1), float32] span=/model/layers.19/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.19/self_attn/Mul_7:0:0 */;
  %1871 = reshape(%1870, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.19/self_attn/MatMul:0:0 */;
  %1872 = reshape(%1851, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.19/self_attn/MatMul:0:0 */;
  %1873 = transpose(%1871, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.19/self_attn/MatMul:0:0 */;
  %1874 = nn.batch_matmul(%1872, %1873, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.19/self_attn/MatMul:0:0 */;
  %1875 = reshape(%1874, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.19/self_attn/MatMul:0:0 */;
  %1876 = add(%1875, meta[relay.Constant][61] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.19/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.19/self_attn/Add_2:0:0 */;
  %1877 = nn.softmax(%1876, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.19/self_attn/Softmax:0:0 */;
  %1878 = reshape(%1836, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/v_proj/MatMul:0:0 */;
  %1879 = transpose(%onnx::MatMul_9346, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.19/self_attn/v_proj/MatMul:0:0 */;
  %1880 = nn.dense(%1878, %1879, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.19/self_attn/v_proj/MatMul:0:0 */;
  %1881 = reshape(%1880, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.19/self_attn/v_proj/MatMul:0:0 */;
  %1882 = reshape(%1881, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.19/self_attn/Reshape_2:0:0 */;
  %1883 = transpose(%1882, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.19/self_attn/Transpose_2:0:0 */;
  %1884 = expand_dims(%1883, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.19/self_attn/Unsqueeze_1:0:0 */;
  %1885 = broadcast_to(%1884, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.19/self_attn/Expand_1:0:0 */;
  %1886 = reshape(%1885, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/Reshape_4:0:0 */;
  %1887 = reshape(%1886, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.19/self_attn/MatMul_1:0:0 */;
  %1888 = reshape(%1877, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.19/self_attn/MatMul_1:0:0 */;
  %1889 = transpose(%1887, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.19/self_attn/MatMul_1:0:0 */;
  %1890 = nn.batch_matmul(%1888, %1889, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.19/self_attn/MatMul_1:0:0 */;
  %1891 = reshape(%1890, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.19/self_attn/MatMul_1:0:0 */;
  %1892 = transpose(%1891, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.19/self_attn/Transpose_4:0:0 */;
  %1893 = reshape(%1892, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/self_attn/Reshape_5:0:0 */;
  %1894 = reshape(%1893, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/o_proj/MatMul:0:0 */;
  %1895 = transpose(%onnx::MatMul_9412, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.19/self_attn/o_proj/MatMul:0:0 */;
  %1896 = nn.dense(%1894, %1895, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/self_attn/o_proj/MatMul:0:0 */;
  %1897 = reshape(%1896, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/self_attn/o_proj/MatMul:0:0 */;
  %1898 = add(%1828, %1897) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/Add:0:0 */;
  %1899 = cast(%1898, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/post_attention_layernorm/Cast:0:0 */;
  %1900 = power(%1899, 2f /* ty=float32 span=/model/layers.19/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/post_attention_layernorm/Pow:0:0 */;
  %1901 = mean(%1900, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/post_attention_layernorm/ReduceMean:0:0 */;
  %1902 = add(%1901, 1e-05f /* ty=float32 span=/model/layers.19/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/post_attention_layernorm/Add:0:0 */;
  %1903 = sqrt(%1902) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/post_attention_layernorm/Sqrt:0:0 */;
  %1904 = divide(1f /* ty=float32 span=/model/layers.19/post_attention_layernorm/Constant_2:0:0 */, %1903) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.19/post_attention_layernorm/Div:0:0 */;
  %1905 = multiply(%1899, %1904) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/post_attention_layernorm/Mul:0:0 */;
  %1906 = cast(%1905, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/post_attention_layernorm/Cast_1:0:0 */;
  %1907 = multiply(%model.layers.19.post_attention_layernorm.weight, %1906) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/post_attention_layernorm/Mul_1:0:0 */;
  %1908 = reshape(%1907, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/mlp/gate_proj/MatMul:0:0 */;
  %1909 = transpose(%onnx::MatMul_9413, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.19/mlp/gate_proj/MatMul:0:0 */;
  %1910 = nn.dense(%1908, %1909, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.19/mlp/gate_proj/MatMul:0:0 */;
  %1911 = reshape(%1910, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.19/mlp/gate_proj/MatMul:0:0 */;
  %1912 = sigmoid(%1911) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.19/mlp/act_fn/Sigmoid:0:0 */;
  %1913 = reshape(%1907, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/mlp/up_proj/MatMul:0:0 */;
  %1914 = transpose(%onnx::MatMul_9414, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.19/mlp/up_proj/MatMul:0:0 */;
  %1915 = nn.dense(%1913, %1914, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.19/mlp/up_proj/MatMul:0:0 */;
  %1916 = multiply(%1911, %1912) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.19/mlp/act_fn/Mul:0:0 */;
  %1917 = reshape(%1915, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.19/mlp/up_proj/MatMul:0:0 */;
  %1918 = multiply(%1916, %1917) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.19/mlp/Mul:0:0 */;
  %1919 = reshape(%1918, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.19/mlp/down_proj/MatMul:0:0 */;
  %1920 = transpose(%onnx::MatMul_9415, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.19/mlp/down_proj/MatMul:0:0 */;
  %1921 = nn.dense(%1919, %1920, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.19/mlp/down_proj/MatMul:0:0 */;
  %1922 = reshape(%1921, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/mlp/down_proj/MatMul:0:0 */;
  %1923 = add(%1899, %1922) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.19/Add_1:0:0 */;
  %1924 = cast(%1923, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/input_layernorm/Cast:0:0 */;
  %1925 = power(%1924, 2f /* ty=float32 span=/model/layers.20/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/input_layernorm/Pow:0:0 */;
  %1926 = mean(%1925, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/input_layernorm/ReduceMean:0:0 */;
  %1927 = add(%1926, 1e-05f /* ty=float32 span=/model/layers.20/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/input_layernorm/Add:0:0 */;
  %1928 = sqrt(%1927) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/input_layernorm/Sqrt:0:0 */;
  %1929 = divide(1f /* ty=float32 span=/model/layers.20/input_layernorm/Constant_2:0:0 */, %1928) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/input_layernorm/Div:0:0 */;
  %1930 = multiply(%1924, %1929) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/input_layernorm/Mul:0:0 */;
  %1931 = cast(%1930, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/input_layernorm/Cast_1:0:0 */;
  %1932 = multiply(%model.layers.20.input_layernorm.weight, %1931) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/input_layernorm/Mul_1:0:0 */;
  %1933 = reshape(%1932, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/q_proj/MatMul:0:0 */;
  %1934 = transpose(%onnx::MatMul_9416, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.20/self_attn/q_proj/MatMul:0:0 */;
  %1935 = nn.dense(%1933, %1934, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/q_proj/MatMul:0:0 */;
  %1936 = reshape(%1935, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/self_attn/q_proj/MatMul:0:0 */;
  %1937 = reshape(%1936, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.20/self_attn/Reshape:0:0 */;
  %1938 = transpose(%1937, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Transpose:0:0 */;
  %1939 = strided_slice(%1938, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.20/self_attn/Slice_1:0:0 */;
  %1940 = negative(%1939) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.20/self_attn/Neg:0:0 */;
  %1941 = strided_slice(%1938, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.20/self_attn/Slice:0:0 */;
  %1942 = (%1940, %1941) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.20/self_attn/Concat:0:0 */;
  %1943 = concatenate(%1942, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Concat:0:0 */;
  %1944 = multiply(%1938, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Mul:0:0 */;
  %1945 = multiply(%1943, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Mul_1:0:0 */;
  %1946 = add(%1944, %1945) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Add:0:0 */;
  %1947 = multiply(%1946, meta[relay.Constant][62] /* ty=Tensor[(1), float32] span=/model/layers.20/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Mul_6:0:0 */;
  %1948 = reshape(%1932, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/k_proj/MatMul:0:0 */;
  %1949 = transpose(%onnx::MatMul_9417, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.20/self_attn/k_proj/MatMul:0:0 */;
  %1950 = nn.dense(%1948, %1949, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.20/self_attn/k_proj/MatMul:0:0 */;
  %1951 = reshape(%1950, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.20/self_attn/k_proj/MatMul:0:0 */;
  %1952 = reshape(%1951, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.20/self_attn/Reshape_1:0:0 */;
  %1953 = transpose(%1952, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Transpose_1:0:0 */;
  %1954 = strided_slice(%1953, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.20/self_attn/Slice_3:0:0 */;
  %1955 = negative(%1954) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.20/self_attn/Neg_1:0:0 */;
  %1956 = strided_slice(%1953, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.20/self_attn/Slice_2:0:0 */;
  %1957 = (%1955, %1956) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.20/self_attn/Concat_1:0:0 */;
  %1958 = concatenate(%1957, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Concat_1:0:0 */;
  %1959 = multiply(%1953, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Mul_2:0:0 */;
  %1960 = multiply(%1958, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Mul_3:0:0 */;
  %1961 = add(%1959, %1960) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Add_1:0:0 */;
  %1962 = expand_dims(%1961, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.20/self_attn/Unsqueeze:0:0 */;
  %1963 = broadcast_to(%1962, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.20/self_attn/Expand:0:0 */;
  %1964 = reshape(%1963, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Reshape_3:0:0 */;
  %1965 = transpose(%1964, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.20/self_attn/Transpose_3:0:0 */;
  %1966 = multiply(%1965, meta[relay.Constant][63] /* ty=Tensor[(1), float32] span=/model/layers.20/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.20/self_attn/Mul_7:0:0 */;
  %1967 = reshape(%1966, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.20/self_attn/MatMul:0:0 */;
  %1968 = reshape(%1947, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.20/self_attn/MatMul:0:0 */;
  %1969 = transpose(%1967, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.20/self_attn/MatMul:0:0 */;
  %1970 = nn.batch_matmul(%1968, %1969, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.20/self_attn/MatMul:0:0 */;
  %1971 = reshape(%1970, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.20/self_attn/MatMul:0:0 */;
  %1972 = add(%1971, meta[relay.Constant][64] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.20/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.20/self_attn/Add_2:0:0 */;
  %1973 = nn.softmax(%1972, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.20/self_attn/Softmax:0:0 */;
  %1974 = reshape(%1932, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/v_proj/MatMul:0:0 */;
  %1975 = transpose(%onnx::MatMul_9418, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.20/self_attn/v_proj/MatMul:0:0 */;
  %1976 = nn.dense(%1974, %1975, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.20/self_attn/v_proj/MatMul:0:0 */;
  %1977 = reshape(%1976, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.20/self_attn/v_proj/MatMul:0:0 */;
  %1978 = reshape(%1977, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.20/self_attn/Reshape_2:0:0 */;
  %1979 = transpose(%1978, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.20/self_attn/Transpose_2:0:0 */;
  %1980 = expand_dims(%1979, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.20/self_attn/Unsqueeze_1:0:0 */;
  %1981 = broadcast_to(%1980, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.20/self_attn/Expand_1:0:0 */;
  %1982 = reshape(%1981, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/Reshape_4:0:0 */;
  %1983 = reshape(%1982, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.20/self_attn/MatMul_1:0:0 */;
  %1984 = reshape(%1973, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.20/self_attn/MatMul_1:0:0 */;
  %1985 = transpose(%1983, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.20/self_attn/MatMul_1:0:0 */;
  %1986 = nn.batch_matmul(%1984, %1985, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.20/self_attn/MatMul_1:0:0 */;
  %1987 = reshape(%1986, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.20/self_attn/MatMul_1:0:0 */;
  %1988 = transpose(%1987, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.20/self_attn/Transpose_4:0:0 */;
  %1989 = reshape(%1988, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/self_attn/Reshape_5:0:0 */;
  %1990 = reshape(%1989, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/o_proj/MatMul:0:0 */;
  %1991 = transpose(%onnx::MatMul_9484, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.20/self_attn/o_proj/MatMul:0:0 */;
  %1992 = nn.dense(%1990, %1991, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/self_attn/o_proj/MatMul:0:0 */;
  %1993 = reshape(%1992, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/self_attn/o_proj/MatMul:0:0 */;
  %1994 = add(%1924, %1993) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/Add:0:0 */;
  %1995 = cast(%1994, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/post_attention_layernorm/Cast:0:0 */;
  %1996 = power(%1995, 2f /* ty=float32 span=/model/layers.20/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/post_attention_layernorm/Pow:0:0 */;
  %1997 = mean(%1996, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/post_attention_layernorm/ReduceMean:0:0 */;
  %1998 = add(%1997, 1e-05f /* ty=float32 span=/model/layers.20/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/post_attention_layernorm/Add:0:0 */;
  %1999 = sqrt(%1998) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/post_attention_layernorm/Sqrt:0:0 */;
  %2000 = divide(1f /* ty=float32 span=/model/layers.20/post_attention_layernorm/Constant_2:0:0 */, %1999) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.20/post_attention_layernorm/Div:0:0 */;
  %2001 = multiply(%1995, %2000) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/post_attention_layernorm/Mul:0:0 */;
  %2002 = cast(%2001, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/post_attention_layernorm/Cast_1:0:0 */;
  %2003 = multiply(%model.layers.20.post_attention_layernorm.weight, %2002) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/post_attention_layernorm/Mul_1:0:0 */;
  %2004 = reshape(%2003, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/mlp/gate_proj/MatMul:0:0 */;
  %2005 = transpose(%onnx::MatMul_9485, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.20/mlp/gate_proj/MatMul:0:0 */;
  %2006 = nn.dense(%2004, %2005, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.20/mlp/gate_proj/MatMul:0:0 */;
  %2007 = reshape(%2006, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.20/mlp/gate_proj/MatMul:0:0 */;
  %2008 = sigmoid(%2007) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.20/mlp/act_fn/Sigmoid:0:0 */;
  %2009 = reshape(%2003, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/mlp/up_proj/MatMul:0:0 */;
  %2010 = transpose(%onnx::MatMul_9486, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.20/mlp/up_proj/MatMul:0:0 */;
  %2011 = nn.dense(%2009, %2010, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.20/mlp/up_proj/MatMul:0:0 */;
  %2012 = multiply(%2007, %2008) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.20/mlp/act_fn/Mul:0:0 */;
  %2013 = reshape(%2011, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.20/mlp/up_proj/MatMul:0:0 */;
  %2014 = multiply(%2012, %2013) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.20/mlp/Mul:0:0 */;
  %2015 = reshape(%2014, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.20/mlp/down_proj/MatMul:0:0 */;
  %2016 = transpose(%onnx::MatMul_9487, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.20/mlp/down_proj/MatMul:0:0 */;
  %2017 = nn.dense(%2015, %2016, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.20/mlp/down_proj/MatMul:0:0 */;
  %2018 = reshape(%2017, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/mlp/down_proj/MatMul:0:0 */;
  %2019 = add(%1995, %2018) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.20/Add_1:0:0 */;
  %2020 = cast(%2019, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/input_layernorm/Cast:0:0 */;
  %2021 = power(%2020, 2f /* ty=float32 span=/model/layers.21/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/input_layernorm/Pow:0:0 */;
  %2022 = mean(%2021, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/input_layernorm/ReduceMean:0:0 */;
  %2023 = add(%2022, 1e-05f /* ty=float32 span=/model/layers.21/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/input_layernorm/Add:0:0 */;
  %2024 = sqrt(%2023) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/input_layernorm/Sqrt:0:0 */;
  %2025 = divide(1f /* ty=float32 span=/model/layers.21/input_layernorm/Constant_2:0:0 */, %2024) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/input_layernorm/Div:0:0 */;
  %2026 = multiply(%2020, %2025) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/input_layernorm/Mul:0:0 */;
  %2027 = cast(%2026, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/input_layernorm/Cast_1:0:0 */;
  %2028 = multiply(%model.layers.21.input_layernorm.weight, %2027) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/input_layernorm/Mul_1:0:0 */;
  %2029 = reshape(%2028, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/q_proj/MatMul:0:0 */;
  %2030 = transpose(%onnx::MatMul_9488, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.21/self_attn/q_proj/MatMul:0:0 */;
  %2031 = nn.dense(%2029, %2030, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/q_proj/MatMul:0:0 */;
  %2032 = reshape(%2031, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/self_attn/q_proj/MatMul:0:0 */;
  %2033 = reshape(%2032, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.21/self_attn/Reshape:0:0 */;
  %2034 = transpose(%2033, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Transpose:0:0 */;
  %2035 = strided_slice(%2034, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.21/self_attn/Slice_1:0:0 */;
  %2036 = negative(%2035) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.21/self_attn/Neg:0:0 */;
  %2037 = strided_slice(%2034, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.21/self_attn/Slice:0:0 */;
  %2038 = (%2036, %2037) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.21/self_attn/Concat:0:0 */;
  %2039 = concatenate(%2038, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Concat:0:0 */;
  %2040 = multiply(%2034, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Mul:0:0 */;
  %2041 = multiply(%2039, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Mul_1:0:0 */;
  %2042 = add(%2040, %2041) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Add:0:0 */;
  %2043 = multiply(%2042, meta[relay.Constant][65] /* ty=Tensor[(1), float32] span=/model/layers.21/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Mul_6:0:0 */;
  %2044 = reshape(%2028, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/k_proj/MatMul:0:0 */;
  %2045 = transpose(%onnx::MatMul_9489, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.21/self_attn/k_proj/MatMul:0:0 */;
  %2046 = nn.dense(%2044, %2045, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.21/self_attn/k_proj/MatMul:0:0 */;
  %2047 = reshape(%2046, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.21/self_attn/k_proj/MatMul:0:0 */;
  %2048 = reshape(%2047, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.21/self_attn/Reshape_1:0:0 */;
  %2049 = transpose(%2048, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Transpose_1:0:0 */;
  %2050 = strided_slice(%2049, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.21/self_attn/Slice_3:0:0 */;
  %2051 = negative(%2050) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.21/self_attn/Neg_1:0:0 */;
  %2052 = strided_slice(%2049, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.21/self_attn/Slice_2:0:0 */;
  %2053 = (%2051, %2052) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.21/self_attn/Concat_1:0:0 */;
  %2054 = concatenate(%2053, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Concat_1:0:0 */;
  %2055 = multiply(%2049, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Mul_2:0:0 */;
  %2056 = multiply(%2054, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Mul_3:0:0 */;
  %2057 = add(%2055, %2056) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Add_1:0:0 */;
  %2058 = expand_dims(%2057, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.21/self_attn/Unsqueeze:0:0 */;
  %2059 = broadcast_to(%2058, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.21/self_attn/Expand:0:0 */;
  %2060 = reshape(%2059, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Reshape_3:0:0 */;
  %2061 = transpose(%2060, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.21/self_attn/Transpose_3:0:0 */;
  %2062 = multiply(%2061, meta[relay.Constant][66] /* ty=Tensor[(1), float32] span=/model/layers.21/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.21/self_attn/Mul_7:0:0 */;
  %2063 = reshape(%2062, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.21/self_attn/MatMul:0:0 */;
  %2064 = reshape(%2043, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.21/self_attn/MatMul:0:0 */;
  %2065 = transpose(%2063, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.21/self_attn/MatMul:0:0 */;
  %2066 = nn.batch_matmul(%2064, %2065, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.21/self_attn/MatMul:0:0 */;
  %2067 = reshape(%2066, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.21/self_attn/MatMul:0:0 */;
  %2068 = add(%2067, meta[relay.Constant][67] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.21/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.21/self_attn/Add_2:0:0 */;
  %2069 = nn.softmax(%2068, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.21/self_attn/Softmax:0:0 */;
  %2070 = reshape(%2028, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/v_proj/MatMul:0:0 */;
  %2071 = transpose(%onnx::MatMul_9490, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.21/self_attn/v_proj/MatMul:0:0 */;
  %2072 = nn.dense(%2070, %2071, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.21/self_attn/v_proj/MatMul:0:0 */;
  %2073 = reshape(%2072, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.21/self_attn/v_proj/MatMul:0:0 */;
  %2074 = reshape(%2073, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.21/self_attn/Reshape_2:0:0 */;
  %2075 = transpose(%2074, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.21/self_attn/Transpose_2:0:0 */;
  %2076 = expand_dims(%2075, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.21/self_attn/Unsqueeze_1:0:0 */;
  %2077 = broadcast_to(%2076, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.21/self_attn/Expand_1:0:0 */;
  %2078 = reshape(%2077, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/Reshape_4:0:0 */;
  %2079 = reshape(%2078, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.21/self_attn/MatMul_1:0:0 */;
  %2080 = reshape(%2069, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.21/self_attn/MatMul_1:0:0 */;
  %2081 = transpose(%2079, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.21/self_attn/MatMul_1:0:0 */;
  %2082 = nn.batch_matmul(%2080, %2081, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.21/self_attn/MatMul_1:0:0 */;
  %2083 = reshape(%2082, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.21/self_attn/MatMul_1:0:0 */;
  %2084 = transpose(%2083, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.21/self_attn/Transpose_4:0:0 */;
  %2085 = reshape(%2084, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/self_attn/Reshape_5:0:0 */;
  %2086 = reshape(%2085, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/o_proj/MatMul:0:0 */;
  %2087 = transpose(%onnx::MatMul_9556, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.21/self_attn/o_proj/MatMul:0:0 */;
  %2088 = nn.dense(%2086, %2087, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/self_attn/o_proj/MatMul:0:0 */;
  %2089 = reshape(%2088, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/self_attn/o_proj/MatMul:0:0 */;
  %2090 = add(%2020, %2089) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/Add:0:0 */;
  %2091 = cast(%2090, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/post_attention_layernorm/Cast:0:0 */;
  %2092 = power(%2091, 2f /* ty=float32 span=/model/layers.21/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/post_attention_layernorm/Pow:0:0 */;
  %2093 = mean(%2092, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/post_attention_layernorm/ReduceMean:0:0 */;
  %2094 = add(%2093, 1e-05f /* ty=float32 span=/model/layers.21/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/post_attention_layernorm/Add:0:0 */;
  %2095 = sqrt(%2094) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/post_attention_layernorm/Sqrt:0:0 */;
  %2096 = divide(1f /* ty=float32 span=/model/layers.21/post_attention_layernorm/Constant_2:0:0 */, %2095) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.21/post_attention_layernorm/Div:0:0 */;
  %2097 = multiply(%2091, %2096) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/post_attention_layernorm/Mul:0:0 */;
  %2098 = cast(%2097, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/post_attention_layernorm/Cast_1:0:0 */;
  %2099 = multiply(%model.layers.21.post_attention_layernorm.weight, %2098) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/post_attention_layernorm/Mul_1:0:0 */;
  %2100 = reshape(%2099, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/mlp/gate_proj/MatMul:0:0 */;
  %2101 = transpose(%onnx::MatMul_9557, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.21/mlp/gate_proj/MatMul:0:0 */;
  %2102 = nn.dense(%2100, %2101, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.21/mlp/gate_proj/MatMul:0:0 */;
  %2103 = reshape(%2102, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.21/mlp/gate_proj/MatMul:0:0 */;
  %2104 = sigmoid(%2103) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.21/mlp/act_fn/Sigmoid:0:0 */;
  %2105 = reshape(%2099, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/mlp/up_proj/MatMul:0:0 */;
  %2106 = transpose(%onnx::MatMul_9558, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.21/mlp/up_proj/MatMul:0:0 */;
  %2107 = nn.dense(%2105, %2106, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.21/mlp/up_proj/MatMul:0:0 */;
  %2108 = multiply(%2103, %2104) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.21/mlp/act_fn/Mul:0:0 */;
  %2109 = reshape(%2107, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.21/mlp/up_proj/MatMul:0:0 */;
  %2110 = multiply(%2108, %2109) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.21/mlp/Mul:0:0 */;
  %2111 = reshape(%2110, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.21/mlp/down_proj/MatMul:0:0 */;
  %2112 = transpose(%onnx::MatMul_9559, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.21/mlp/down_proj/MatMul:0:0 */;
  %2113 = nn.dense(%2111, %2112, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.21/mlp/down_proj/MatMul:0:0 */;
  %2114 = reshape(%2113, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/mlp/down_proj/MatMul:0:0 */;
  %2115 = add(%2091, %2114) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.21/Add_1:0:0 */;
  %2116 = cast(%2115, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/input_layernorm/Cast:0:0 */;
  %2117 = power(%2116, 2f /* ty=float32 span=/model/layers.22/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/input_layernorm/Pow:0:0 */;
  %2118 = mean(%2117, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/input_layernorm/ReduceMean:0:0 */;
  %2119 = add(%2118, 1e-05f /* ty=float32 span=/model/layers.22/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/input_layernorm/Add:0:0 */;
  %2120 = sqrt(%2119) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/input_layernorm/Sqrt:0:0 */;
  %2121 = divide(1f /* ty=float32 span=/model/layers.22/input_layernorm/Constant_2:0:0 */, %2120) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/input_layernorm/Div:0:0 */;
  %2122 = multiply(%2116, %2121) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/input_layernorm/Mul:0:0 */;
  %2123 = cast(%2122, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/input_layernorm/Cast_1:0:0 */;
  %2124 = multiply(%model.layers.22.input_layernorm.weight, %2123) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/input_layernorm/Mul_1:0:0 */;
  %2125 = reshape(%2124, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/q_proj/MatMul:0:0 */;
  %2126 = transpose(%onnx::MatMul_9560, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.22/self_attn/q_proj/MatMul:0:0 */;
  %2127 = nn.dense(%2125, %2126, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/q_proj/MatMul:0:0 */;
  %2128 = reshape(%2127, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/self_attn/q_proj/MatMul:0:0 */;
  %2129 = reshape(%2128, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.22/self_attn/Reshape:0:0 */;
  %2130 = transpose(%2129, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Transpose:0:0 */;
  %2131 = strided_slice(%2130, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.22/self_attn/Slice_1:0:0 */;
  %2132 = negative(%2131) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.22/self_attn/Neg:0:0 */;
  %2133 = strided_slice(%2130, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.22/self_attn/Slice:0:0 */;
  %2134 = (%2132, %2133) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.22/self_attn/Concat:0:0 */;
  %2135 = concatenate(%2134, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Concat:0:0 */;
  %2136 = multiply(%2130, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Mul:0:0 */;
  %2137 = multiply(%2135, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Mul_1:0:0 */;
  %2138 = add(%2136, %2137) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Add:0:0 */;
  %2139 = multiply(%2138, meta[relay.Constant][68] /* ty=Tensor[(1), float32] span=/model/layers.22/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Mul_6:0:0 */;
  %2140 = reshape(%2124, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/k_proj/MatMul:0:0 */;
  %2141 = transpose(%onnx::MatMul_9561, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.22/self_attn/k_proj/MatMul:0:0 */;
  %2142 = nn.dense(%2140, %2141, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.22/self_attn/k_proj/MatMul:0:0 */;
  %2143 = reshape(%2142, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.22/self_attn/k_proj/MatMul:0:0 */;
  %2144 = reshape(%2143, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.22/self_attn/Reshape_1:0:0 */;
  %2145 = transpose(%2144, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Transpose_1:0:0 */;
  %2146 = strided_slice(%2145, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.22/self_attn/Slice_3:0:0 */;
  %2147 = negative(%2146) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.22/self_attn/Neg_1:0:0 */;
  %2148 = strided_slice(%2145, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.22/self_attn/Slice_2:0:0 */;
  %2149 = (%2147, %2148) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.22/self_attn/Concat_1:0:0 */;
  %2150 = concatenate(%2149, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Concat_1:0:0 */;
  %2151 = multiply(%2145, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Mul_2:0:0 */;
  %2152 = multiply(%2150, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Mul_3:0:0 */;
  %2153 = add(%2151, %2152) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Add_1:0:0 */;
  %2154 = expand_dims(%2153, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.22/self_attn/Unsqueeze:0:0 */;
  %2155 = broadcast_to(%2154, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.22/self_attn/Expand:0:0 */;
  %2156 = reshape(%2155, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Reshape_3:0:0 */;
  %2157 = transpose(%2156, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.22/self_attn/Transpose_3:0:0 */;
  %2158 = multiply(%2157, meta[relay.Constant][69] /* ty=Tensor[(1), float32] span=/model/layers.22/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.22/self_attn/Mul_7:0:0 */;
  %2159 = reshape(%2158, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.22/self_attn/MatMul:0:0 */;
  %2160 = reshape(%2139, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.22/self_attn/MatMul:0:0 */;
  %2161 = transpose(%2159, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.22/self_attn/MatMul:0:0 */;
  %2162 = nn.batch_matmul(%2160, %2161, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.22/self_attn/MatMul:0:0 */;
  %2163 = reshape(%2162, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.22/self_attn/MatMul:0:0 */;
  %2164 = add(%2163, meta[relay.Constant][70] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.22/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.22/self_attn/Add_2:0:0 */;
  %2165 = nn.softmax(%2164, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.22/self_attn/Softmax:0:0 */;
  %2166 = reshape(%2124, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/v_proj/MatMul:0:0 */;
  %2167 = transpose(%onnx::MatMul_9562, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.22/self_attn/v_proj/MatMul:0:0 */;
  %2168 = nn.dense(%2166, %2167, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.22/self_attn/v_proj/MatMul:0:0 */;
  %2169 = reshape(%2168, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.22/self_attn/v_proj/MatMul:0:0 */;
  %2170 = reshape(%2169, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.22/self_attn/Reshape_2:0:0 */;
  %2171 = transpose(%2170, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.22/self_attn/Transpose_2:0:0 */;
  %2172 = expand_dims(%2171, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.22/self_attn/Unsqueeze_1:0:0 */;
  %2173 = broadcast_to(%2172, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.22/self_attn/Expand_1:0:0 */;
  %2174 = reshape(%2173, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/Reshape_4:0:0 */;
  %2175 = reshape(%2174, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.22/self_attn/MatMul_1:0:0 */;
  %2176 = reshape(%2165, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.22/self_attn/MatMul_1:0:0 */;
  %2177 = transpose(%2175, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.22/self_attn/MatMul_1:0:0 */;
  %2178 = nn.batch_matmul(%2176, %2177, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.22/self_attn/MatMul_1:0:0 */;
  %2179 = reshape(%2178, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.22/self_attn/MatMul_1:0:0 */;
  %2180 = transpose(%2179, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.22/self_attn/Transpose_4:0:0 */;
  %2181 = reshape(%2180, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/self_attn/Reshape_5:0:0 */;
  %2182 = reshape(%2181, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/o_proj/MatMul:0:0 */;
  %2183 = transpose(%onnx::MatMul_9628, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.22/self_attn/o_proj/MatMul:0:0 */;
  %2184 = nn.dense(%2182, %2183, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/self_attn/o_proj/MatMul:0:0 */;
  %2185 = reshape(%2184, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/self_attn/o_proj/MatMul:0:0 */;
  %2186 = add(%2116, %2185) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/Add:0:0 */;
  %2187 = cast(%2186, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/post_attention_layernorm/Cast:0:0 */;
  %2188 = power(%2187, 2f /* ty=float32 span=/model/layers.22/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/post_attention_layernorm/Pow:0:0 */;
  %2189 = mean(%2188, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/post_attention_layernorm/ReduceMean:0:0 */;
  %2190 = add(%2189, 1e-05f /* ty=float32 span=/model/layers.22/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/post_attention_layernorm/Add:0:0 */;
  %2191 = sqrt(%2190) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/post_attention_layernorm/Sqrt:0:0 */;
  %2192 = divide(1f /* ty=float32 span=/model/layers.22/post_attention_layernorm/Constant_2:0:0 */, %2191) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.22/post_attention_layernorm/Div:0:0 */;
  %2193 = multiply(%2187, %2192) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/post_attention_layernorm/Mul:0:0 */;
  %2194 = cast(%2193, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/post_attention_layernorm/Cast_1:0:0 */;
  %2195 = multiply(%model.layers.22.post_attention_layernorm.weight, %2194) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/post_attention_layernorm/Mul_1:0:0 */;
  %2196 = reshape(%2195, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/mlp/gate_proj/MatMul:0:0 */;
  %2197 = transpose(%onnx::MatMul_9629, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.22/mlp/gate_proj/MatMul:0:0 */;
  %2198 = nn.dense(%2196, %2197, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.22/mlp/gate_proj/MatMul:0:0 */;
  %2199 = reshape(%2198, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.22/mlp/gate_proj/MatMul:0:0 */;
  %2200 = sigmoid(%2199) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.22/mlp/act_fn/Sigmoid:0:0 */;
  %2201 = reshape(%2195, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/mlp/up_proj/MatMul:0:0 */;
  %2202 = transpose(%onnx::MatMul_9630, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.22/mlp/up_proj/MatMul:0:0 */;
  %2203 = nn.dense(%2201, %2202, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.22/mlp/up_proj/MatMul:0:0 */;
  %2204 = multiply(%2199, %2200) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.22/mlp/act_fn/Mul:0:0 */;
  %2205 = reshape(%2203, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.22/mlp/up_proj/MatMul:0:0 */;
  %2206 = multiply(%2204, %2205) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.22/mlp/Mul:0:0 */;
  %2207 = reshape(%2206, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.22/mlp/down_proj/MatMul:0:0 */;
  %2208 = transpose(%onnx::MatMul_9631, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.22/mlp/down_proj/MatMul:0:0 */;
  %2209 = nn.dense(%2207, %2208, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.22/mlp/down_proj/MatMul:0:0 */;
  %2210 = reshape(%2209, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/mlp/down_proj/MatMul:0:0 */;
  %2211 = add(%2187, %2210) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.22/Add_1:0:0 */;
  %2212 = cast(%2211, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/input_layernorm/Cast:0:0 */;
  %2213 = power(%2212, 2f /* ty=float32 span=/model/layers.23/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/input_layernorm/Pow:0:0 */;
  %2214 = mean(%2213, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/input_layernorm/ReduceMean:0:0 */;
  %2215 = add(%2214, 1e-05f /* ty=float32 span=/model/layers.23/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/input_layernorm/Add:0:0 */;
  %2216 = sqrt(%2215) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/input_layernorm/Sqrt:0:0 */;
  %2217 = divide(1f /* ty=float32 span=/model/layers.23/input_layernorm/Constant_2:0:0 */, %2216) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/input_layernorm/Div:0:0 */;
  %2218 = multiply(%2212, %2217) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/input_layernorm/Mul:0:0 */;
  %2219 = cast(%2218, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/input_layernorm/Cast_1:0:0 */;
  %2220 = multiply(%model.layers.23.input_layernorm.weight, %2219) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/input_layernorm/Mul_1:0:0 */;
  %2221 = reshape(%2220, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/q_proj/MatMul:0:0 */;
  %2222 = transpose(%onnx::MatMul_9632, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.23/self_attn/q_proj/MatMul:0:0 */;
  %2223 = nn.dense(%2221, %2222, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/q_proj/MatMul:0:0 */;
  %2224 = reshape(%2223, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/self_attn/q_proj/MatMul:0:0 */;
  %2225 = reshape(%2224, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.23/self_attn/Reshape:0:0 */;
  %2226 = transpose(%2225, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Transpose:0:0 */;
  %2227 = strided_slice(%2226, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.23/self_attn/Slice_1:0:0 */;
  %2228 = negative(%2227) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.23/self_attn/Neg:0:0 */;
  %2229 = strided_slice(%2226, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.23/self_attn/Slice:0:0 */;
  %2230 = (%2228, %2229) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.23/self_attn/Concat:0:0 */;
  %2231 = concatenate(%2230, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Concat:0:0 */;
  %2232 = multiply(%2226, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Mul:0:0 */;
  %2233 = multiply(%2231, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Mul_1:0:0 */;
  %2234 = add(%2232, %2233) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Add:0:0 */;
  %2235 = multiply(%2234, meta[relay.Constant][71] /* ty=Tensor[(1), float32] span=/model/layers.23/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Mul_6:0:0 */;
  %2236 = reshape(%2220, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/k_proj/MatMul:0:0 */;
  %2237 = transpose(%onnx::MatMul_9633, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.23/self_attn/k_proj/MatMul:0:0 */;
  %2238 = nn.dense(%2236, %2237, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.23/self_attn/k_proj/MatMul:0:0 */;
  %2239 = reshape(%2238, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.23/self_attn/k_proj/MatMul:0:0 */;
  %2240 = reshape(%2239, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.23/self_attn/Reshape_1:0:0 */;
  %2241 = transpose(%2240, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Transpose_1:0:0 */;
  %2242 = strided_slice(%2241, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.23/self_attn/Slice_3:0:0 */;
  %2243 = negative(%2242) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.23/self_attn/Neg_1:0:0 */;
  %2244 = strided_slice(%2241, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.23/self_attn/Slice_2:0:0 */;
  %2245 = (%2243, %2244) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.23/self_attn/Concat_1:0:0 */;
  %2246 = concatenate(%2245, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Concat_1:0:0 */;
  %2247 = multiply(%2241, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Mul_2:0:0 */;
  %2248 = multiply(%2246, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Mul_3:0:0 */;
  %2249 = add(%2247, %2248) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Add_1:0:0 */;
  %2250 = expand_dims(%2249, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.23/self_attn/Unsqueeze:0:0 */;
  %2251 = broadcast_to(%2250, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.23/self_attn/Expand:0:0 */;
  %2252 = reshape(%2251, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Reshape_3:0:0 */;
  %2253 = transpose(%2252, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.23/self_attn/Transpose_3:0:0 */;
  %2254 = multiply(%2253, meta[relay.Constant][72] /* ty=Tensor[(1), float32] span=/model/layers.23/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.23/self_attn/Mul_7:0:0 */;
  %2255 = reshape(%2254, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.23/self_attn/MatMul:0:0 */;
  %2256 = reshape(%2235, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.23/self_attn/MatMul:0:0 */;
  %2257 = transpose(%2255, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.23/self_attn/MatMul:0:0 */;
  %2258 = nn.batch_matmul(%2256, %2257, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.23/self_attn/MatMul:0:0 */;
  %2259 = reshape(%2258, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.23/self_attn/MatMul:0:0 */;
  %2260 = add(%2259, meta[relay.Constant][73] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.23/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.23/self_attn/Add_2:0:0 */;
  %2261 = nn.softmax(%2260, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.23/self_attn/Softmax:0:0 */;
  %2262 = reshape(%2220, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/v_proj/MatMul:0:0 */;
  %2263 = transpose(%onnx::MatMul_9634, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.23/self_attn/v_proj/MatMul:0:0 */;
  %2264 = nn.dense(%2262, %2263, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.23/self_attn/v_proj/MatMul:0:0 */;
  %2265 = reshape(%2264, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.23/self_attn/v_proj/MatMul:0:0 */;
  %2266 = reshape(%2265, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.23/self_attn/Reshape_2:0:0 */;
  %2267 = transpose(%2266, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.23/self_attn/Transpose_2:0:0 */;
  %2268 = expand_dims(%2267, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.23/self_attn/Unsqueeze_1:0:0 */;
  %2269 = broadcast_to(%2268, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.23/self_attn/Expand_1:0:0 */;
  %2270 = reshape(%2269, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/Reshape_4:0:0 */;
  %2271 = reshape(%2270, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.23/self_attn/MatMul_1:0:0 */;
  %2272 = reshape(%2261, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.23/self_attn/MatMul_1:0:0 */;
  %2273 = transpose(%2271, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.23/self_attn/MatMul_1:0:0 */;
  %2274 = nn.batch_matmul(%2272, %2273, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.23/self_attn/MatMul_1:0:0 */;
  %2275 = reshape(%2274, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.23/self_attn/MatMul_1:0:0 */;
  %2276 = transpose(%2275, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.23/self_attn/Transpose_4:0:0 */;
  %2277 = reshape(%2276, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/self_attn/Reshape_5:0:0 */;
  %2278 = reshape(%2277, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/o_proj/MatMul:0:0 */;
  %2279 = transpose(%onnx::MatMul_9700, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.23/self_attn/o_proj/MatMul:0:0 */;
  %2280 = nn.dense(%2278, %2279, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/self_attn/o_proj/MatMul:0:0 */;
  %2281 = reshape(%2280, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/self_attn/o_proj/MatMul:0:0 */;
  %2282 = add(%2212, %2281) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/Add:0:0 */;
  %2283 = cast(%2282, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/post_attention_layernorm/Cast:0:0 */;
  %2284 = power(%2283, 2f /* ty=float32 span=/model/layers.23/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/post_attention_layernorm/Pow:0:0 */;
  %2285 = mean(%2284, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/post_attention_layernorm/ReduceMean:0:0 */;
  %2286 = add(%2285, 1e-05f /* ty=float32 span=/model/layers.23/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/post_attention_layernorm/Add:0:0 */;
  %2287 = sqrt(%2286) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/post_attention_layernorm/Sqrt:0:0 */;
  %2288 = divide(1f /* ty=float32 span=/model/layers.23/post_attention_layernorm/Constant_2:0:0 */, %2287) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.23/post_attention_layernorm/Div:0:0 */;
  %2289 = multiply(%2283, %2288) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/post_attention_layernorm/Mul:0:0 */;
  %2290 = cast(%2289, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/post_attention_layernorm/Cast_1:0:0 */;
  %2291 = multiply(%model.layers.23.post_attention_layernorm.weight, %2290) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/post_attention_layernorm/Mul_1:0:0 */;
  %2292 = reshape(%2291, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/mlp/gate_proj/MatMul:0:0 */;
  %2293 = transpose(%onnx::MatMul_9701, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.23/mlp/gate_proj/MatMul:0:0 */;
  %2294 = nn.dense(%2292, %2293, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.23/mlp/gate_proj/MatMul:0:0 */;
  %2295 = reshape(%2294, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.23/mlp/gate_proj/MatMul:0:0 */;
  %2296 = sigmoid(%2295) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.23/mlp/act_fn/Sigmoid:0:0 */;
  %2297 = reshape(%2291, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/mlp/up_proj/MatMul:0:0 */;
  %2298 = transpose(%onnx::MatMul_9702, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.23/mlp/up_proj/MatMul:0:0 */;
  %2299 = nn.dense(%2297, %2298, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.23/mlp/up_proj/MatMul:0:0 */;
  %2300 = multiply(%2295, %2296) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.23/mlp/act_fn/Mul:0:0 */;
  %2301 = reshape(%2299, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.23/mlp/up_proj/MatMul:0:0 */;
  %2302 = multiply(%2300, %2301) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.23/mlp/Mul:0:0 */;
  %2303 = reshape(%2302, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.23/mlp/down_proj/MatMul:0:0 */;
  %2304 = transpose(%onnx::MatMul_9703, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.23/mlp/down_proj/MatMul:0:0 */;
  %2305 = nn.dense(%2303, %2304, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.23/mlp/down_proj/MatMul:0:0 */;
  %2306 = reshape(%2305, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/mlp/down_proj/MatMul:0:0 */;
  %2307 = add(%2283, %2306) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.23/Add_1:0:0 */;
  %2308 = cast(%2307, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/input_layernorm/Cast:0:0 */;
  %2309 = power(%2308, 2f /* ty=float32 span=/model/layers.24/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/input_layernorm/Pow:0:0 */;
  %2310 = mean(%2309, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/input_layernorm/ReduceMean:0:0 */;
  %2311 = add(%2310, 1e-05f /* ty=float32 span=/model/layers.24/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/input_layernorm/Add:0:0 */;
  %2312 = sqrt(%2311) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/input_layernorm/Sqrt:0:0 */;
  %2313 = divide(1f /* ty=float32 span=/model/layers.24/input_layernorm/Constant_2:0:0 */, %2312) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/input_layernorm/Div:0:0 */;
  %2314 = multiply(%2308, %2313) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/input_layernorm/Mul:0:0 */;
  %2315 = cast(%2314, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/input_layernorm/Cast_1:0:0 */;
  %2316 = multiply(%model.layers.24.input_layernorm.weight, %2315) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/input_layernorm/Mul_1:0:0 */;
  %2317 = reshape(%2316, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/q_proj/MatMul:0:0 */;
  %2318 = transpose(%onnx::MatMul_9704, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.24/self_attn/q_proj/MatMul:0:0 */;
  %2319 = nn.dense(%2317, %2318, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/q_proj/MatMul:0:0 */;
  %2320 = reshape(%2319, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/self_attn/q_proj/MatMul:0:0 */;
  %2321 = reshape(%2320, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.24/self_attn/Reshape:0:0 */;
  %2322 = transpose(%2321, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Transpose:0:0 */;
  %2323 = strided_slice(%2322, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.24/self_attn/Slice_1:0:0 */;
  %2324 = negative(%2323) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.24/self_attn/Neg:0:0 */;
  %2325 = strided_slice(%2322, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.24/self_attn/Slice:0:0 */;
  %2326 = (%2324, %2325) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.24/self_attn/Concat:0:0 */;
  %2327 = concatenate(%2326, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Concat:0:0 */;
  %2328 = multiply(%2322, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Mul:0:0 */;
  %2329 = multiply(%2327, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Mul_1:0:0 */;
  %2330 = add(%2328, %2329) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Add:0:0 */;
  %2331 = multiply(%2330, meta[relay.Constant][74] /* ty=Tensor[(1), float32] span=/model/layers.24/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Mul_6:0:0 */;
  %2332 = reshape(%2316, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/k_proj/MatMul:0:0 */;
  %2333 = transpose(%onnx::MatMul_9705, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.24/self_attn/k_proj/MatMul:0:0 */;
  %2334 = nn.dense(%2332, %2333, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.24/self_attn/k_proj/MatMul:0:0 */;
  %2335 = reshape(%2334, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.24/self_attn/k_proj/MatMul:0:0 */;
  %2336 = reshape(%2335, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.24/self_attn/Reshape_1:0:0 */;
  %2337 = transpose(%2336, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Transpose_1:0:0 */;
  %2338 = strided_slice(%2337, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.24/self_attn/Slice_3:0:0 */;
  %2339 = negative(%2338) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.24/self_attn/Neg_1:0:0 */;
  %2340 = strided_slice(%2337, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.24/self_attn/Slice_2:0:0 */;
  %2341 = (%2339, %2340) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.24/self_attn/Concat_1:0:0 */;
  %2342 = concatenate(%2341, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Concat_1:0:0 */;
  %2343 = multiply(%2337, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Mul_2:0:0 */;
  %2344 = multiply(%2342, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Mul_3:0:0 */;
  %2345 = add(%2343, %2344) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Add_1:0:0 */;
  %2346 = expand_dims(%2345, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.24/self_attn/Unsqueeze:0:0 */;
  %2347 = broadcast_to(%2346, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.24/self_attn/Expand:0:0 */;
  %2348 = reshape(%2347, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Reshape_3:0:0 */;
  %2349 = transpose(%2348, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.24/self_attn/Transpose_3:0:0 */;
  %2350 = multiply(%2349, meta[relay.Constant][75] /* ty=Tensor[(1), float32] span=/model/layers.24/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.24/self_attn/Mul_7:0:0 */;
  %2351 = reshape(%2350, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.24/self_attn/MatMul:0:0 */;
  %2352 = reshape(%2331, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.24/self_attn/MatMul:0:0 */;
  %2353 = transpose(%2351, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.24/self_attn/MatMul:0:0 */;
  %2354 = nn.batch_matmul(%2352, %2353, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.24/self_attn/MatMul:0:0 */;
  %2355 = reshape(%2354, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.24/self_attn/MatMul:0:0 */;
  %2356 = add(%2355, meta[relay.Constant][76] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.24/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.24/self_attn/Add_2:0:0 */;
  %2357 = nn.softmax(%2356, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.24/self_attn/Softmax:0:0 */;
  %2358 = reshape(%2316, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/v_proj/MatMul:0:0 */;
  %2359 = transpose(%onnx::MatMul_9706, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.24/self_attn/v_proj/MatMul:0:0 */;
  %2360 = nn.dense(%2358, %2359, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.24/self_attn/v_proj/MatMul:0:0 */;
  %2361 = reshape(%2360, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.24/self_attn/v_proj/MatMul:0:0 */;
  %2362 = reshape(%2361, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.24/self_attn/Reshape_2:0:0 */;
  %2363 = transpose(%2362, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.24/self_attn/Transpose_2:0:0 */;
  %2364 = expand_dims(%2363, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.24/self_attn/Unsqueeze_1:0:0 */;
  %2365 = broadcast_to(%2364, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.24/self_attn/Expand_1:0:0 */;
  %2366 = reshape(%2365, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/Reshape_4:0:0 */;
  %2367 = reshape(%2366, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.24/self_attn/MatMul_1:0:0 */;
  %2368 = reshape(%2357, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.24/self_attn/MatMul_1:0:0 */;
  %2369 = transpose(%2367, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.24/self_attn/MatMul_1:0:0 */;
  %2370 = nn.batch_matmul(%2368, %2369, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.24/self_attn/MatMul_1:0:0 */;
  %2371 = reshape(%2370, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.24/self_attn/MatMul_1:0:0 */;
  %2372 = transpose(%2371, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.24/self_attn/Transpose_4:0:0 */;
  %2373 = reshape(%2372, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/self_attn/Reshape_5:0:0 */;
  %2374 = reshape(%2373, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/o_proj/MatMul:0:0 */;
  %2375 = transpose(%onnx::MatMul_9772, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.24/self_attn/o_proj/MatMul:0:0 */;
  %2376 = nn.dense(%2374, %2375, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/self_attn/o_proj/MatMul:0:0 */;
  %2377 = reshape(%2376, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/self_attn/o_proj/MatMul:0:0 */;
  %2378 = add(%2308, %2377) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/Add:0:0 */;
  %2379 = cast(%2378, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/post_attention_layernorm/Cast:0:0 */;
  %2380 = power(%2379, 2f /* ty=float32 span=/model/layers.24/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/post_attention_layernorm/Pow:0:0 */;
  %2381 = mean(%2380, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/post_attention_layernorm/ReduceMean:0:0 */;
  %2382 = add(%2381, 1e-05f /* ty=float32 span=/model/layers.24/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/post_attention_layernorm/Add:0:0 */;
  %2383 = sqrt(%2382) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/post_attention_layernorm/Sqrt:0:0 */;
  %2384 = divide(1f /* ty=float32 span=/model/layers.24/post_attention_layernorm/Constant_2:0:0 */, %2383) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.24/post_attention_layernorm/Div:0:0 */;
  %2385 = multiply(%2379, %2384) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/post_attention_layernorm/Mul:0:0 */;
  %2386 = cast(%2385, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/post_attention_layernorm/Cast_1:0:0 */;
  %2387 = multiply(%model.layers.24.post_attention_layernorm.weight, %2386) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/post_attention_layernorm/Mul_1:0:0 */;
  %2388 = reshape(%2387, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/mlp/gate_proj/MatMul:0:0 */;
  %2389 = transpose(%onnx::MatMul_9773, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.24/mlp/gate_proj/MatMul:0:0 */;
  %2390 = nn.dense(%2388, %2389, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.24/mlp/gate_proj/MatMul:0:0 */;
  %2391 = reshape(%2390, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.24/mlp/gate_proj/MatMul:0:0 */;
  %2392 = sigmoid(%2391) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.24/mlp/act_fn/Sigmoid:0:0 */;
  %2393 = reshape(%2387, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/mlp/up_proj/MatMul:0:0 */;
  %2394 = transpose(%onnx::MatMul_9774, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.24/mlp/up_proj/MatMul:0:0 */;
  %2395 = nn.dense(%2393, %2394, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.24/mlp/up_proj/MatMul:0:0 */;
  %2396 = multiply(%2391, %2392) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.24/mlp/act_fn/Mul:0:0 */;
  %2397 = reshape(%2395, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.24/mlp/up_proj/MatMul:0:0 */;
  %2398 = multiply(%2396, %2397) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.24/mlp/Mul:0:0 */;
  %2399 = reshape(%2398, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.24/mlp/down_proj/MatMul:0:0 */;
  %2400 = transpose(%onnx::MatMul_9775, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.24/mlp/down_proj/MatMul:0:0 */;
  %2401 = nn.dense(%2399, %2400, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.24/mlp/down_proj/MatMul:0:0 */;
  %2402 = reshape(%2401, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/mlp/down_proj/MatMul:0:0 */;
  %2403 = add(%2379, %2402) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.24/Add_1:0:0 */;
  %2404 = cast(%2403, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/input_layernorm/Cast:0:0 */;
  %2405 = power(%2404, 2f /* ty=float32 span=/model/layers.25/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/input_layernorm/Pow:0:0 */;
  %2406 = mean(%2405, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/input_layernorm/ReduceMean:0:0 */;
  %2407 = add(%2406, 1e-05f /* ty=float32 span=/model/layers.25/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/input_layernorm/Add:0:0 */;
  %2408 = sqrt(%2407) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/input_layernorm/Sqrt:0:0 */;
  %2409 = divide(1f /* ty=float32 span=/model/layers.25/input_layernorm/Constant_2:0:0 */, %2408) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/input_layernorm/Div:0:0 */;
  %2410 = multiply(%2404, %2409) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/input_layernorm/Mul:0:0 */;
  %2411 = cast(%2410, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/input_layernorm/Cast_1:0:0 */;
  %2412 = multiply(%model.layers.25.input_layernorm.weight, %2411) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/input_layernorm/Mul_1:0:0 */;
  %2413 = reshape(%2412, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/q_proj/MatMul:0:0 */;
  %2414 = transpose(%onnx::MatMul_9776, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.25/self_attn/q_proj/MatMul:0:0 */;
  %2415 = nn.dense(%2413, %2414, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/q_proj/MatMul:0:0 */;
  %2416 = reshape(%2415, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/self_attn/q_proj/MatMul:0:0 */;
  %2417 = reshape(%2416, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.25/self_attn/Reshape:0:0 */;
  %2418 = transpose(%2417, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Transpose:0:0 */;
  %2419 = strided_slice(%2418, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.25/self_attn/Slice_1:0:0 */;
  %2420 = negative(%2419) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.25/self_attn/Neg:0:0 */;
  %2421 = strided_slice(%2418, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.25/self_attn/Slice:0:0 */;
  %2422 = (%2420, %2421) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.25/self_attn/Concat:0:0 */;
  %2423 = concatenate(%2422, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Concat:0:0 */;
  %2424 = multiply(%2418, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Mul:0:0 */;
  %2425 = multiply(%2423, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Mul_1:0:0 */;
  %2426 = add(%2424, %2425) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Add:0:0 */;
  %2427 = multiply(%2426, meta[relay.Constant][77] /* ty=Tensor[(1), float32] span=/model/layers.25/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Mul_6:0:0 */;
  %2428 = reshape(%2412, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/k_proj/MatMul:0:0 */;
  %2429 = transpose(%onnx::MatMul_9777, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.25/self_attn/k_proj/MatMul:0:0 */;
  %2430 = nn.dense(%2428, %2429, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.25/self_attn/k_proj/MatMul:0:0 */;
  %2431 = reshape(%2430, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.25/self_attn/k_proj/MatMul:0:0 */;
  %2432 = reshape(%2431, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.25/self_attn/Reshape_1:0:0 */;
  %2433 = transpose(%2432, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Transpose_1:0:0 */;
  %2434 = strided_slice(%2433, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.25/self_attn/Slice_3:0:0 */;
  %2435 = negative(%2434) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.25/self_attn/Neg_1:0:0 */;
  %2436 = strided_slice(%2433, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.25/self_attn/Slice_2:0:0 */;
  %2437 = (%2435, %2436) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.25/self_attn/Concat_1:0:0 */;
  %2438 = concatenate(%2437, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Concat_1:0:0 */;
  %2439 = multiply(%2433, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Mul_2:0:0 */;
  %2440 = multiply(%2438, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Mul_3:0:0 */;
  %2441 = add(%2439, %2440) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Add_1:0:0 */;
  %2442 = expand_dims(%2441, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.25/self_attn/Unsqueeze:0:0 */;
  %2443 = broadcast_to(%2442, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.25/self_attn/Expand:0:0 */;
  %2444 = reshape(%2443, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Reshape_3:0:0 */;
  %2445 = transpose(%2444, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.25/self_attn/Transpose_3:0:0 */;
  %2446 = multiply(%2445, meta[relay.Constant][78] /* ty=Tensor[(1), float32] span=/model/layers.25/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.25/self_attn/Mul_7:0:0 */;
  %2447 = reshape(%2446, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.25/self_attn/MatMul:0:0 */;
  %2448 = reshape(%2427, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.25/self_attn/MatMul:0:0 */;
  %2449 = transpose(%2447, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.25/self_attn/MatMul:0:0 */;
  %2450 = nn.batch_matmul(%2448, %2449, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.25/self_attn/MatMul:0:0 */;
  %2451 = reshape(%2450, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.25/self_attn/MatMul:0:0 */;
  %2452 = add(%2451, meta[relay.Constant][79] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.25/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.25/self_attn/Add_2:0:0 */;
  %2453 = nn.softmax(%2452, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.25/self_attn/Softmax:0:0 */;
  %2454 = reshape(%2412, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/v_proj/MatMul:0:0 */;
  %2455 = transpose(%onnx::MatMul_9778, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.25/self_attn/v_proj/MatMul:0:0 */;
  %2456 = nn.dense(%2454, %2455, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.25/self_attn/v_proj/MatMul:0:0 */;
  %2457 = reshape(%2456, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.25/self_attn/v_proj/MatMul:0:0 */;
  %2458 = reshape(%2457, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.25/self_attn/Reshape_2:0:0 */;
  %2459 = transpose(%2458, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.25/self_attn/Transpose_2:0:0 */;
  %2460 = expand_dims(%2459, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.25/self_attn/Unsqueeze_1:0:0 */;
  %2461 = broadcast_to(%2460, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.25/self_attn/Expand_1:0:0 */;
  %2462 = reshape(%2461, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/Reshape_4:0:0 */;
  %2463 = reshape(%2462, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.25/self_attn/MatMul_1:0:0 */;
  %2464 = reshape(%2453, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.25/self_attn/MatMul_1:0:0 */;
  %2465 = transpose(%2463, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.25/self_attn/MatMul_1:0:0 */;
  %2466 = nn.batch_matmul(%2464, %2465, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.25/self_attn/MatMul_1:0:0 */;
  %2467 = reshape(%2466, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.25/self_attn/MatMul_1:0:0 */;
  %2468 = transpose(%2467, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.25/self_attn/Transpose_4:0:0 */;
  %2469 = reshape(%2468, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/self_attn/Reshape_5:0:0 */;
  %2470 = reshape(%2469, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/o_proj/MatMul:0:0 */;
  %2471 = transpose(%onnx::MatMul_9844, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.25/self_attn/o_proj/MatMul:0:0 */;
  %2472 = nn.dense(%2470, %2471, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/self_attn/o_proj/MatMul:0:0 */;
  %2473 = reshape(%2472, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/self_attn/o_proj/MatMul:0:0 */;
  %2474 = add(%2404, %2473) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/Add:0:0 */;
  %2475 = cast(%2474, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/post_attention_layernorm/Cast:0:0 */;
  %2476 = power(%2475, 2f /* ty=float32 span=/model/layers.25/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/post_attention_layernorm/Pow:0:0 */;
  %2477 = mean(%2476, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/post_attention_layernorm/ReduceMean:0:0 */;
  %2478 = add(%2477, 1e-05f /* ty=float32 span=/model/layers.25/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/post_attention_layernorm/Add:0:0 */;
  %2479 = sqrt(%2478) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/post_attention_layernorm/Sqrt:0:0 */;
  %2480 = divide(1f /* ty=float32 span=/model/layers.25/post_attention_layernorm/Constant_2:0:0 */, %2479) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.25/post_attention_layernorm/Div:0:0 */;
  %2481 = multiply(%2475, %2480) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/post_attention_layernorm/Mul:0:0 */;
  %2482 = cast(%2481, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/post_attention_layernorm/Cast_1:0:0 */;
  %2483 = multiply(%model.layers.25.post_attention_layernorm.weight, %2482) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/post_attention_layernorm/Mul_1:0:0 */;
  %2484 = reshape(%2483, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/mlp/gate_proj/MatMul:0:0 */;
  %2485 = transpose(%onnx::MatMul_9845, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.25/mlp/gate_proj/MatMul:0:0 */;
  %2486 = nn.dense(%2484, %2485, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.25/mlp/gate_proj/MatMul:0:0 */;
  %2487 = reshape(%2486, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.25/mlp/gate_proj/MatMul:0:0 */;
  %2488 = sigmoid(%2487) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.25/mlp/act_fn/Sigmoid:0:0 */;
  %2489 = reshape(%2483, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/mlp/up_proj/MatMul:0:0 */;
  %2490 = transpose(%onnx::MatMul_9846, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.25/mlp/up_proj/MatMul:0:0 */;
  %2491 = nn.dense(%2489, %2490, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.25/mlp/up_proj/MatMul:0:0 */;
  %2492 = multiply(%2487, %2488) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.25/mlp/act_fn/Mul:0:0 */;
  %2493 = reshape(%2491, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.25/mlp/up_proj/MatMul:0:0 */;
  %2494 = multiply(%2492, %2493) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.25/mlp/Mul:0:0 */;
  %2495 = reshape(%2494, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.25/mlp/down_proj/MatMul:0:0 */;
  %2496 = transpose(%onnx::MatMul_9847, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.25/mlp/down_proj/MatMul:0:0 */;
  %2497 = nn.dense(%2495, %2496, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.25/mlp/down_proj/MatMul:0:0 */;
  %2498 = reshape(%2497, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/mlp/down_proj/MatMul:0:0 */;
  %2499 = add(%2475, %2498) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.25/Add_1:0:0 */;
  %2500 = cast(%2499, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/input_layernorm/Cast:0:0 */;
  %2501 = power(%2500, 2f /* ty=float32 span=/model/layers.26/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/input_layernorm/Pow:0:0 */;
  %2502 = mean(%2501, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/input_layernorm/ReduceMean:0:0 */;
  %2503 = add(%2502, 1e-05f /* ty=float32 span=/model/layers.26/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/input_layernorm/Add:0:0 */;
  %2504 = sqrt(%2503) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/input_layernorm/Sqrt:0:0 */;
  %2505 = divide(1f /* ty=float32 span=/model/layers.26/input_layernorm/Constant_2:0:0 */, %2504) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/input_layernorm/Div:0:0 */;
  %2506 = multiply(%2500, %2505) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/input_layernorm/Mul:0:0 */;
  %2507 = cast(%2506, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/input_layernorm/Cast_1:0:0 */;
  %2508 = multiply(%model.layers.26.input_layernorm.weight, %2507) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/input_layernorm/Mul_1:0:0 */;
  %2509 = reshape(%2508, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/q_proj/MatMul:0:0 */;
  %2510 = transpose(%onnx::MatMul_9848, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.26/self_attn/q_proj/MatMul:0:0 */;
  %2511 = nn.dense(%2509, %2510, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/q_proj/MatMul:0:0 */;
  %2512 = reshape(%2511, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/self_attn/q_proj/MatMul:0:0 */;
  %2513 = reshape(%2512, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.26/self_attn/Reshape:0:0 */;
  %2514 = transpose(%2513, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Transpose:0:0 */;
  %2515 = strided_slice(%2514, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.26/self_attn/Slice_1:0:0 */;
  %2516 = negative(%2515) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.26/self_attn/Neg:0:0 */;
  %2517 = strided_slice(%2514, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.26/self_attn/Slice:0:0 */;
  %2518 = (%2516, %2517) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.26/self_attn/Concat:0:0 */;
  %2519 = concatenate(%2518, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Concat:0:0 */;
  %2520 = multiply(%2514, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Mul:0:0 */;
  %2521 = multiply(%2519, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Mul_1:0:0 */;
  %2522 = add(%2520, %2521) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Add:0:0 */;
  %2523 = multiply(%2522, meta[relay.Constant][80] /* ty=Tensor[(1), float32] span=/model/layers.26/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Mul_6:0:0 */;
  %2524 = reshape(%2508, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/k_proj/MatMul:0:0 */;
  %2525 = transpose(%onnx::MatMul_9849, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.26/self_attn/k_proj/MatMul:0:0 */;
  %2526 = nn.dense(%2524, %2525, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.26/self_attn/k_proj/MatMul:0:0 */;
  %2527 = reshape(%2526, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.26/self_attn/k_proj/MatMul:0:0 */;
  %2528 = reshape(%2527, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.26/self_attn/Reshape_1:0:0 */;
  %2529 = transpose(%2528, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Transpose_1:0:0 */;
  %2530 = strided_slice(%2529, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.26/self_attn/Slice_3:0:0 */;
  %2531 = negative(%2530) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.26/self_attn/Neg_1:0:0 */;
  %2532 = strided_slice(%2529, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.26/self_attn/Slice_2:0:0 */;
  %2533 = (%2531, %2532) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.26/self_attn/Concat_1:0:0 */;
  %2534 = concatenate(%2533, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Concat_1:0:0 */;
  %2535 = multiply(%2529, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Mul_2:0:0 */;
  %2536 = multiply(%2534, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Mul_3:0:0 */;
  %2537 = add(%2535, %2536) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Add_1:0:0 */;
  %2538 = expand_dims(%2537, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.26/self_attn/Unsqueeze:0:0 */;
  %2539 = broadcast_to(%2538, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.26/self_attn/Expand:0:0 */;
  %2540 = reshape(%2539, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Reshape_3:0:0 */;
  %2541 = transpose(%2540, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.26/self_attn/Transpose_3:0:0 */;
  %2542 = multiply(%2541, meta[relay.Constant][81] /* ty=Tensor[(1), float32] span=/model/layers.26/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.26/self_attn/Mul_7:0:0 */;
  %2543 = reshape(%2542, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.26/self_attn/MatMul:0:0 */;
  %2544 = reshape(%2523, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.26/self_attn/MatMul:0:0 */;
  %2545 = transpose(%2543, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.26/self_attn/MatMul:0:0 */;
  %2546 = nn.batch_matmul(%2544, %2545, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.26/self_attn/MatMul:0:0 */;
  %2547 = reshape(%2546, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.26/self_attn/MatMul:0:0 */;
  %2548 = add(%2547, meta[relay.Constant][82] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.26/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.26/self_attn/Add_2:0:0 */;
  %2549 = nn.softmax(%2548, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.26/self_attn/Softmax:0:0 */;
  %2550 = reshape(%2508, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/v_proj/MatMul:0:0 */;
  %2551 = transpose(%onnx::MatMul_9850, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.26/self_attn/v_proj/MatMul:0:0 */;
  %2552 = nn.dense(%2550, %2551, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.26/self_attn/v_proj/MatMul:0:0 */;
  %2553 = reshape(%2552, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.26/self_attn/v_proj/MatMul:0:0 */;
  %2554 = reshape(%2553, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.26/self_attn/Reshape_2:0:0 */;
  %2555 = transpose(%2554, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.26/self_attn/Transpose_2:0:0 */;
  %2556 = expand_dims(%2555, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.26/self_attn/Unsqueeze_1:0:0 */;
  %2557 = broadcast_to(%2556, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.26/self_attn/Expand_1:0:0 */;
  %2558 = reshape(%2557, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/Reshape_4:0:0 */;
  %2559 = reshape(%2558, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.26/self_attn/MatMul_1:0:0 */;
  %2560 = reshape(%2549, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.26/self_attn/MatMul_1:0:0 */;
  %2561 = transpose(%2559, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.26/self_attn/MatMul_1:0:0 */;
  %2562 = nn.batch_matmul(%2560, %2561, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.26/self_attn/MatMul_1:0:0 */;
  %2563 = reshape(%2562, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.26/self_attn/MatMul_1:0:0 */;
  %2564 = transpose(%2563, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.26/self_attn/Transpose_4:0:0 */;
  %2565 = reshape(%2564, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/self_attn/Reshape_5:0:0 */;
  %2566 = reshape(%2565, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/o_proj/MatMul:0:0 */;
  %2567 = transpose(%onnx::MatMul_9916, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.26/self_attn/o_proj/MatMul:0:0 */;
  %2568 = nn.dense(%2566, %2567, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/self_attn/o_proj/MatMul:0:0 */;
  %2569 = reshape(%2568, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/self_attn/o_proj/MatMul:0:0 */;
  %2570 = add(%2500, %2569) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/Add:0:0 */;
  %2571 = cast(%2570, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/post_attention_layernorm/Cast:0:0 */;
  %2572 = power(%2571, 2f /* ty=float32 span=/model/layers.26/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/post_attention_layernorm/Pow:0:0 */;
  %2573 = mean(%2572, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/post_attention_layernorm/ReduceMean:0:0 */;
  %2574 = add(%2573, 1e-05f /* ty=float32 span=/model/layers.26/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/post_attention_layernorm/Add:0:0 */;
  %2575 = sqrt(%2574) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/post_attention_layernorm/Sqrt:0:0 */;
  %2576 = divide(1f /* ty=float32 span=/model/layers.26/post_attention_layernorm/Constant_2:0:0 */, %2575) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.26/post_attention_layernorm/Div:0:0 */;
  %2577 = multiply(%2571, %2576) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/post_attention_layernorm/Mul:0:0 */;
  %2578 = cast(%2577, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/post_attention_layernorm/Cast_1:0:0 */;
  %2579 = multiply(%model.layers.26.post_attention_layernorm.weight, %2578) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/post_attention_layernorm/Mul_1:0:0 */;
  %2580 = reshape(%2579, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/mlp/gate_proj/MatMul:0:0 */;
  %2581 = transpose(%onnx::MatMul_9917, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.26/mlp/gate_proj/MatMul:0:0 */;
  %2582 = nn.dense(%2580, %2581, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.26/mlp/gate_proj/MatMul:0:0 */;
  %2583 = reshape(%2582, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.26/mlp/gate_proj/MatMul:0:0 */;
  %2584 = sigmoid(%2583) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.26/mlp/act_fn/Sigmoid:0:0 */;
  %2585 = reshape(%2579, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/mlp/up_proj/MatMul:0:0 */;
  %2586 = transpose(%onnx::MatMul_9918, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.26/mlp/up_proj/MatMul:0:0 */;
  %2587 = nn.dense(%2585, %2586, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.26/mlp/up_proj/MatMul:0:0 */;
  %2588 = multiply(%2583, %2584) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.26/mlp/act_fn/Mul:0:0 */;
  %2589 = reshape(%2587, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.26/mlp/up_proj/MatMul:0:0 */;
  %2590 = multiply(%2588, %2589) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.26/mlp/Mul:0:0 */;
  %2591 = reshape(%2590, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.26/mlp/down_proj/MatMul:0:0 */;
  %2592 = transpose(%onnx::MatMul_9919, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.26/mlp/down_proj/MatMul:0:0 */;
  %2593 = nn.dense(%2591, %2592, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.26/mlp/down_proj/MatMul:0:0 */;
  %2594 = reshape(%2593, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/mlp/down_proj/MatMul:0:0 */;
  %2595 = add(%2571, %2594) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.26/Add_1:0:0 */;
  %2596 = cast(%2595, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/input_layernorm/Cast:0:0 */;
  %2597 = power(%2596, 2f /* ty=float32 span=/model/layers.27/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/input_layernorm/Pow:0:0 */;
  %2598 = mean(%2597, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/input_layernorm/ReduceMean:0:0 */;
  %2599 = add(%2598, 1e-05f /* ty=float32 span=/model/layers.27/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/input_layernorm/Add:0:0 */;
  %2600 = sqrt(%2599) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/input_layernorm/Sqrt:0:0 */;
  %2601 = divide(1f /* ty=float32 span=/model/layers.27/input_layernorm/Constant_2:0:0 */, %2600) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/input_layernorm/Div:0:0 */;
  %2602 = multiply(%2596, %2601) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/input_layernorm/Mul:0:0 */;
  %2603 = cast(%2602, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/input_layernorm/Cast_1:0:0 */;
  %2604 = multiply(%model.layers.27.input_layernorm.weight, %2603) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/input_layernorm/Mul_1:0:0 */;
  %2605 = reshape(%2604, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/q_proj/MatMul:0:0 */;
  %2606 = transpose(%onnx::MatMul_9920, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.27/self_attn/q_proj/MatMul:0:0 */;
  %2607 = nn.dense(%2605, %2606, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/q_proj/MatMul:0:0 */;
  %2608 = reshape(%2607, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/self_attn/q_proj/MatMul:0:0 */;
  %2609 = reshape(%2608, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.27/self_attn/Reshape:0:0 */;
  %2610 = transpose(%2609, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Transpose:0:0 */;
  %2611 = strided_slice(%2610, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.27/self_attn/Slice_1:0:0 */;
  %2612 = negative(%2611) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.27/self_attn/Neg:0:0 */;
  %2613 = strided_slice(%2610, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.27/self_attn/Slice:0:0 */;
  %2614 = (%2612, %2613) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.27/self_attn/Concat:0:0 */;
  %2615 = concatenate(%2614, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Concat:0:0 */;
  %2616 = multiply(%2610, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Mul:0:0 */;
  %2617 = multiply(%2615, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Mul_1:0:0 */;
  %2618 = add(%2616, %2617) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Add:0:0 */;
  %2619 = multiply(%2618, meta[relay.Constant][83] /* ty=Tensor[(1), float32] span=/model/layers.27/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Mul_6:0:0 */;
  %2620 = reshape(%2604, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/k_proj/MatMul:0:0 */;
  %2621 = transpose(%onnx::MatMul_9921, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.27/self_attn/k_proj/MatMul:0:0 */;
  %2622 = nn.dense(%2620, %2621, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.27/self_attn/k_proj/MatMul:0:0 */;
  %2623 = reshape(%2622, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.27/self_attn/k_proj/MatMul:0:0 */;
  %2624 = reshape(%2623, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.27/self_attn/Reshape_1:0:0 */;
  %2625 = transpose(%2624, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Transpose_1:0:0 */;
  %2626 = strided_slice(%2625, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.27/self_attn/Slice_3:0:0 */;
  %2627 = negative(%2626) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.27/self_attn/Neg_1:0:0 */;
  %2628 = strided_slice(%2625, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.27/self_attn/Slice_2:0:0 */;
  %2629 = (%2627, %2628) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.27/self_attn/Concat_1:0:0 */;
  %2630 = concatenate(%2629, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Concat_1:0:0 */;
  %2631 = multiply(%2625, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Mul_2:0:0 */;
  %2632 = multiply(%2630, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Mul_3:0:0 */;
  %2633 = add(%2631, %2632) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Add_1:0:0 */;
  %2634 = expand_dims(%2633, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.27/self_attn/Unsqueeze:0:0 */;
  %2635 = broadcast_to(%2634, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.27/self_attn/Expand:0:0 */;
  %2636 = reshape(%2635, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Reshape_3:0:0 */;
  %2637 = transpose(%2636, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.27/self_attn/Transpose_3:0:0 */;
  %2638 = multiply(%2637, meta[relay.Constant][84] /* ty=Tensor[(1), float32] span=/model/layers.27/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.27/self_attn/Mul_7:0:0 */;
  %2639 = reshape(%2638, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.27/self_attn/MatMul:0:0 */;
  %2640 = reshape(%2619, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.27/self_attn/MatMul:0:0 */;
  %2641 = transpose(%2639, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.27/self_attn/MatMul:0:0 */;
  %2642 = nn.batch_matmul(%2640, %2641, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.27/self_attn/MatMul:0:0 */;
  %2643 = reshape(%2642, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.27/self_attn/MatMul:0:0 */;
  %2644 = add(%2643, meta[relay.Constant][85] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.27/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.27/self_attn/Add_2:0:0 */;
  %2645 = nn.softmax(%2644, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.27/self_attn/Softmax:0:0 */;
  %2646 = reshape(%2604, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/v_proj/MatMul:0:0 */;
  %2647 = transpose(%onnx::MatMul_9922, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.27/self_attn/v_proj/MatMul:0:0 */;
  %2648 = nn.dense(%2646, %2647, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.27/self_attn/v_proj/MatMul:0:0 */;
  %2649 = reshape(%2648, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.27/self_attn/v_proj/MatMul:0:0 */;
  %2650 = reshape(%2649, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.27/self_attn/Reshape_2:0:0 */;
  %2651 = transpose(%2650, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.27/self_attn/Transpose_2:0:0 */;
  %2652 = expand_dims(%2651, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.27/self_attn/Unsqueeze_1:0:0 */;
  %2653 = broadcast_to(%2652, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.27/self_attn/Expand_1:0:0 */;
  %2654 = reshape(%2653, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/Reshape_4:0:0 */;
  %2655 = reshape(%2654, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.27/self_attn/MatMul_1:0:0 */;
  %2656 = reshape(%2645, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.27/self_attn/MatMul_1:0:0 */;
  %2657 = transpose(%2655, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.27/self_attn/MatMul_1:0:0 */;
  %2658 = nn.batch_matmul(%2656, %2657, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.27/self_attn/MatMul_1:0:0 */;
  %2659 = reshape(%2658, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.27/self_attn/MatMul_1:0:0 */;
  %2660 = transpose(%2659, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.27/self_attn/Transpose_4:0:0 */;
  %2661 = reshape(%2660, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/self_attn/Reshape_5:0:0 */;
  %2662 = reshape(%2661, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/o_proj/MatMul:0:0 */;
  %2663 = transpose(%onnx::MatMul_9988, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.27/self_attn/o_proj/MatMul:0:0 */;
  %2664 = nn.dense(%2662, %2663, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/self_attn/o_proj/MatMul:0:0 */;
  %2665 = reshape(%2664, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/self_attn/o_proj/MatMul:0:0 */;
  %2666 = add(%2596, %2665) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/Add:0:0 */;
  %2667 = cast(%2666, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/post_attention_layernorm/Cast:0:0 */;
  %2668 = power(%2667, 2f /* ty=float32 span=/model/layers.27/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/post_attention_layernorm/Pow:0:0 */;
  %2669 = mean(%2668, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/post_attention_layernorm/ReduceMean:0:0 */;
  %2670 = add(%2669, 1e-05f /* ty=float32 span=/model/layers.27/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/post_attention_layernorm/Add:0:0 */;
  %2671 = sqrt(%2670) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/post_attention_layernorm/Sqrt:0:0 */;
  %2672 = divide(1f /* ty=float32 span=/model/layers.27/post_attention_layernorm/Constant_2:0:0 */, %2671) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.27/post_attention_layernorm/Div:0:0 */;
  %2673 = multiply(%2667, %2672) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/post_attention_layernorm/Mul:0:0 */;
  %2674 = cast(%2673, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/post_attention_layernorm/Cast_1:0:0 */;
  %2675 = multiply(%model.layers.27.post_attention_layernorm.weight, %2674) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/post_attention_layernorm/Mul_1:0:0 */;
  %2676 = reshape(%2675, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/mlp/gate_proj/MatMul:0:0 */;
  %2677 = transpose(%onnx::MatMul_9989, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.27/mlp/gate_proj/MatMul:0:0 */;
  %2678 = nn.dense(%2676, %2677, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.27/mlp/gate_proj/MatMul:0:0 */;
  %2679 = reshape(%2678, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.27/mlp/gate_proj/MatMul:0:0 */;
  %2680 = sigmoid(%2679) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.27/mlp/act_fn/Sigmoid:0:0 */;
  %2681 = reshape(%2675, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/mlp/up_proj/MatMul:0:0 */;
  %2682 = transpose(%onnx::MatMul_9990, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.27/mlp/up_proj/MatMul:0:0 */;
  %2683 = nn.dense(%2681, %2682, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.27/mlp/up_proj/MatMul:0:0 */;
  %2684 = multiply(%2679, %2680) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.27/mlp/act_fn/Mul:0:0 */;
  %2685 = reshape(%2683, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.27/mlp/up_proj/MatMul:0:0 */;
  %2686 = multiply(%2684, %2685) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.27/mlp/Mul:0:0 */;
  %2687 = reshape(%2686, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.27/mlp/down_proj/MatMul:0:0 */;
  %2688 = transpose(%onnx::MatMul_9991, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.27/mlp/down_proj/MatMul:0:0 */;
  %2689 = nn.dense(%2687, %2688, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.27/mlp/down_proj/MatMul:0:0 */;
  %2690 = reshape(%2689, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/mlp/down_proj/MatMul:0:0 */;
  %2691 = add(%2667, %2690) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.27/Add_1:0:0 */;
  %2692 = cast(%2691, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/input_layernorm/Cast:0:0 */;
  %2693 = power(%2692, 2f /* ty=float32 span=/model/layers.28/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/input_layernorm/Pow:0:0 */;
  %2694 = mean(%2693, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/input_layernorm/ReduceMean:0:0 */;
  %2695 = add(%2694, 1e-05f /* ty=float32 span=/model/layers.28/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/input_layernorm/Add:0:0 */;
  %2696 = sqrt(%2695) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/input_layernorm/Sqrt:0:0 */;
  %2697 = divide(1f /* ty=float32 span=/model/layers.28/input_layernorm/Constant_2:0:0 */, %2696) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/input_layernorm/Div:0:0 */;
  %2698 = multiply(%2692, %2697) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/input_layernorm/Mul:0:0 */;
  %2699 = cast(%2698, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/input_layernorm/Cast_1:0:0 */;
  %2700 = multiply(%model.layers.28.input_layernorm.weight, %2699) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/input_layernorm/Mul_1:0:0 */;
  %2701 = reshape(%2700, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/q_proj/MatMul:0:0 */;
  %2702 = transpose(%onnx::MatMul_9992, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.28/self_attn/q_proj/MatMul:0:0 */;
  %2703 = nn.dense(%2701, %2702, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/q_proj/MatMul:0:0 */;
  %2704 = reshape(%2703, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/self_attn/q_proj/MatMul:0:0 */;
  %2705 = reshape(%2704, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.28/self_attn/Reshape:0:0 */;
  %2706 = transpose(%2705, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Transpose:0:0 */;
  %2707 = strided_slice(%2706, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.28/self_attn/Slice_1:0:0 */;
  %2708 = negative(%2707) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.28/self_attn/Neg:0:0 */;
  %2709 = strided_slice(%2706, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.28/self_attn/Slice:0:0 */;
  %2710 = (%2708, %2709) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.28/self_attn/Concat:0:0 */;
  %2711 = concatenate(%2710, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Concat:0:0 */;
  %2712 = multiply(%2706, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Mul:0:0 */;
  %2713 = multiply(%2711, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Mul_1:0:0 */;
  %2714 = add(%2712, %2713) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Add:0:0 */;
  %2715 = multiply(%2714, meta[relay.Constant][86] /* ty=Tensor[(1), float32] span=/model/layers.28/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Mul_6:0:0 */;
  %2716 = reshape(%2700, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/k_proj/MatMul:0:0 */;
  %2717 = transpose(%onnx::MatMul_9993, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.28/self_attn/k_proj/MatMul:0:0 */;
  %2718 = nn.dense(%2716, %2717, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.28/self_attn/k_proj/MatMul:0:0 */;
  %2719 = reshape(%2718, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.28/self_attn/k_proj/MatMul:0:0 */;
  %2720 = reshape(%2719, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.28/self_attn/Reshape_1:0:0 */;
  %2721 = transpose(%2720, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Transpose_1:0:0 */;
  %2722 = strided_slice(%2721, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.28/self_attn/Slice_3:0:0 */;
  %2723 = negative(%2722) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.28/self_attn/Neg_1:0:0 */;
  %2724 = strided_slice(%2721, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.28/self_attn/Slice_2:0:0 */;
  %2725 = (%2723, %2724) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.28/self_attn/Concat_1:0:0 */;
  %2726 = concatenate(%2725, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Concat_1:0:0 */;
  %2727 = multiply(%2721, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Mul_2:0:0 */;
  %2728 = multiply(%2726, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Mul_3:0:0 */;
  %2729 = add(%2727, %2728) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Add_1:0:0 */;
  %2730 = expand_dims(%2729, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.28/self_attn/Unsqueeze:0:0 */;
  %2731 = broadcast_to(%2730, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.28/self_attn/Expand:0:0 */;
  %2732 = reshape(%2731, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Reshape_3:0:0 */;
  %2733 = transpose(%2732, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.28/self_attn/Transpose_3:0:0 */;
  %2734 = multiply(%2733, meta[relay.Constant][87] /* ty=Tensor[(1), float32] span=/model/layers.28/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.28/self_attn/Mul_7:0:0 */;
  %2735 = reshape(%2734, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.28/self_attn/MatMul:0:0 */;
  %2736 = reshape(%2715, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.28/self_attn/MatMul:0:0 */;
  %2737 = transpose(%2735, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.28/self_attn/MatMul:0:0 */;
  %2738 = nn.batch_matmul(%2736, %2737, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.28/self_attn/MatMul:0:0 */;
  %2739 = reshape(%2738, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.28/self_attn/MatMul:0:0 */;
  %2740 = add(%2739, meta[relay.Constant][88] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.28/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.28/self_attn/Add_2:0:0 */;
  %2741 = nn.softmax(%2740, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.28/self_attn/Softmax:0:0 */;
  %2742 = reshape(%2700, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/v_proj/MatMul:0:0 */;
  %2743 = transpose(%onnx::MatMul_9994, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.28/self_attn/v_proj/MatMul:0:0 */;
  %2744 = nn.dense(%2742, %2743, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.28/self_attn/v_proj/MatMul:0:0 */;
  %2745 = reshape(%2744, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.28/self_attn/v_proj/MatMul:0:0 */;
  %2746 = reshape(%2745, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.28/self_attn/Reshape_2:0:0 */;
  %2747 = transpose(%2746, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.28/self_attn/Transpose_2:0:0 */;
  %2748 = expand_dims(%2747, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.28/self_attn/Unsqueeze_1:0:0 */;
  %2749 = broadcast_to(%2748, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.28/self_attn/Expand_1:0:0 */;
  %2750 = reshape(%2749, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/Reshape_4:0:0 */;
  %2751 = reshape(%2750, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.28/self_attn/MatMul_1:0:0 */;
  %2752 = reshape(%2741, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.28/self_attn/MatMul_1:0:0 */;
  %2753 = transpose(%2751, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.28/self_attn/MatMul_1:0:0 */;
  %2754 = nn.batch_matmul(%2752, %2753, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.28/self_attn/MatMul_1:0:0 */;
  %2755 = reshape(%2754, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.28/self_attn/MatMul_1:0:0 */;
  %2756 = transpose(%2755, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.28/self_attn/Transpose_4:0:0 */;
  %2757 = reshape(%2756, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/self_attn/Reshape_5:0:0 */;
  %2758 = reshape(%2757, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/o_proj/MatMul:0:0 */;
  %2759 = transpose(%onnx::MatMul_10060, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.28/self_attn/o_proj/MatMul:0:0 */;
  %2760 = nn.dense(%2758, %2759, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/self_attn/o_proj/MatMul:0:0 */;
  %2761 = reshape(%2760, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/self_attn/o_proj/MatMul:0:0 */;
  %2762 = add(%2692, %2761) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/Add:0:0 */;
  %2763 = cast(%2762, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/post_attention_layernorm/Cast:0:0 */;
  %2764 = power(%2763, 2f /* ty=float32 span=/model/layers.28/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/post_attention_layernorm/Pow:0:0 */;
  %2765 = mean(%2764, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/post_attention_layernorm/ReduceMean:0:0 */;
  %2766 = add(%2765, 1e-05f /* ty=float32 span=/model/layers.28/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/post_attention_layernorm/Add:0:0 */;
  %2767 = sqrt(%2766) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/post_attention_layernorm/Sqrt:0:0 */;
  %2768 = divide(1f /* ty=float32 span=/model/layers.28/post_attention_layernorm/Constant_2:0:0 */, %2767) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.28/post_attention_layernorm/Div:0:0 */;
  %2769 = multiply(%2763, %2768) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/post_attention_layernorm/Mul:0:0 */;
  %2770 = cast(%2769, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/post_attention_layernorm/Cast_1:0:0 */;
  %2771 = multiply(%model.layers.28.post_attention_layernorm.weight, %2770) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/post_attention_layernorm/Mul_1:0:0 */;
  %2772 = reshape(%2771, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/mlp/gate_proj/MatMul:0:0 */;
  %2773 = transpose(%onnx::MatMul_10061, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.28/mlp/gate_proj/MatMul:0:0 */;
  %2774 = nn.dense(%2772, %2773, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.28/mlp/gate_proj/MatMul:0:0 */;
  %2775 = reshape(%2774, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.28/mlp/gate_proj/MatMul:0:0 */;
  %2776 = sigmoid(%2775) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.28/mlp/act_fn/Sigmoid:0:0 */;
  %2777 = reshape(%2771, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/mlp/up_proj/MatMul:0:0 */;
  %2778 = transpose(%onnx::MatMul_10062, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.28/mlp/up_proj/MatMul:0:0 */;
  %2779 = nn.dense(%2777, %2778, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.28/mlp/up_proj/MatMul:0:0 */;
  %2780 = multiply(%2775, %2776) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.28/mlp/act_fn/Mul:0:0 */;
  %2781 = reshape(%2779, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.28/mlp/up_proj/MatMul:0:0 */;
  %2782 = multiply(%2780, %2781) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.28/mlp/Mul:0:0 */;
  %2783 = reshape(%2782, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.28/mlp/down_proj/MatMul:0:0 */;
  %2784 = transpose(%onnx::MatMul_10063, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.28/mlp/down_proj/MatMul:0:0 */;
  %2785 = nn.dense(%2783, %2784, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.28/mlp/down_proj/MatMul:0:0 */;
  %2786 = reshape(%2785, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/mlp/down_proj/MatMul:0:0 */;
  %2787 = add(%2763, %2786) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.28/Add_1:0:0 */;
  %2788 = cast(%2787, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/input_layernorm/Cast:0:0 */;
  %2789 = power(%2788, 2f /* ty=float32 span=/model/layers.29/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/input_layernorm/Pow:0:0 */;
  %2790 = mean(%2789, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/input_layernorm/ReduceMean:0:0 */;
  %2791 = add(%2790, 1e-05f /* ty=float32 span=/model/layers.29/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/input_layernorm/Add:0:0 */;
  %2792 = sqrt(%2791) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/input_layernorm/Sqrt:0:0 */;
  %2793 = divide(1f /* ty=float32 span=/model/layers.29/input_layernorm/Constant_2:0:0 */, %2792) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/input_layernorm/Div:0:0 */;
  %2794 = multiply(%2788, %2793) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/input_layernorm/Mul:0:0 */;
  %2795 = cast(%2794, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/input_layernorm/Cast_1:0:0 */;
  %2796 = multiply(%model.layers.29.input_layernorm.weight, %2795) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/input_layernorm/Mul_1:0:0 */;
  %2797 = reshape(%2796, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/q_proj/MatMul:0:0 */;
  %2798 = transpose(%onnx::MatMul_10064, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.29/self_attn/q_proj/MatMul:0:0 */;
  %2799 = nn.dense(%2797, %2798, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/q_proj/MatMul:0:0 */;
  %2800 = reshape(%2799, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/self_attn/q_proj/MatMul:0:0 */;
  %2801 = reshape(%2800, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.29/self_attn/Reshape:0:0 */;
  %2802 = transpose(%2801, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Transpose:0:0 */;
  %2803 = strided_slice(%2802, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.29/self_attn/Slice_1:0:0 */;
  %2804 = negative(%2803) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.29/self_attn/Neg:0:0 */;
  %2805 = strided_slice(%2802, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.29/self_attn/Slice:0:0 */;
  %2806 = (%2804, %2805) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.29/self_attn/Concat:0:0 */;
  %2807 = concatenate(%2806, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Concat:0:0 */;
  %2808 = multiply(%2802, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Mul:0:0 */;
  %2809 = multiply(%2807, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Mul_1:0:0 */;
  %2810 = add(%2808, %2809) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Add:0:0 */;
  %2811 = multiply(%2810, meta[relay.Constant][89] /* ty=Tensor[(1), float32] span=/model/layers.29/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Mul_6:0:0 */;
  %2812 = reshape(%2796, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/k_proj/MatMul:0:0 */;
  %2813 = transpose(%onnx::MatMul_10065, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.29/self_attn/k_proj/MatMul:0:0 */;
  %2814 = nn.dense(%2812, %2813, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.29/self_attn/k_proj/MatMul:0:0 */;
  %2815 = reshape(%2814, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.29/self_attn/k_proj/MatMul:0:0 */;
  %2816 = reshape(%2815, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.29/self_attn/Reshape_1:0:0 */;
  %2817 = transpose(%2816, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Transpose_1:0:0 */;
  %2818 = strided_slice(%2817, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.29/self_attn/Slice_3:0:0 */;
  %2819 = negative(%2818) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.29/self_attn/Neg_1:0:0 */;
  %2820 = strided_slice(%2817, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.29/self_attn/Slice_2:0:0 */;
  %2821 = (%2819, %2820) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.29/self_attn/Concat_1:0:0 */;
  %2822 = concatenate(%2821, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Concat_1:0:0 */;
  %2823 = multiply(%2817, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Mul_2:0:0 */;
  %2824 = multiply(%2822, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Mul_3:0:0 */;
  %2825 = add(%2823, %2824) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Add_1:0:0 */;
  %2826 = expand_dims(%2825, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.29/self_attn/Unsqueeze:0:0 */;
  %2827 = broadcast_to(%2826, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.29/self_attn/Expand:0:0 */;
  %2828 = reshape(%2827, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Reshape_3:0:0 */;
  %2829 = transpose(%2828, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.29/self_attn/Transpose_3:0:0 */;
  %2830 = multiply(%2829, meta[relay.Constant][90] /* ty=Tensor[(1), float32] span=/model/layers.29/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.29/self_attn/Mul_7:0:0 */;
  %2831 = reshape(%2830, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.29/self_attn/MatMul:0:0 */;
  %2832 = reshape(%2811, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.29/self_attn/MatMul:0:0 */;
  %2833 = transpose(%2831, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.29/self_attn/MatMul:0:0 */;
  %2834 = nn.batch_matmul(%2832, %2833, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.29/self_attn/MatMul:0:0 */;
  %2835 = reshape(%2834, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.29/self_attn/MatMul:0:0 */;
  %2836 = add(%2835, meta[relay.Constant][91] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.29/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.29/self_attn/Add_2:0:0 */;
  %2837 = nn.softmax(%2836, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.29/self_attn/Softmax:0:0 */;
  %2838 = reshape(%2796, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/v_proj/MatMul:0:0 */;
  %2839 = transpose(%onnx::MatMul_10066, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.29/self_attn/v_proj/MatMul:0:0 */;
  %2840 = nn.dense(%2838, %2839, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.29/self_attn/v_proj/MatMul:0:0 */;
  %2841 = reshape(%2840, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.29/self_attn/v_proj/MatMul:0:0 */;
  %2842 = reshape(%2841, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.29/self_attn/Reshape_2:0:0 */;
  %2843 = transpose(%2842, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.29/self_attn/Transpose_2:0:0 */;
  %2844 = expand_dims(%2843, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.29/self_attn/Unsqueeze_1:0:0 */;
  %2845 = broadcast_to(%2844, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.29/self_attn/Expand_1:0:0 */;
  %2846 = reshape(%2845, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/Reshape_4:0:0 */;
  %2847 = reshape(%2846, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.29/self_attn/MatMul_1:0:0 */;
  %2848 = reshape(%2837, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.29/self_attn/MatMul_1:0:0 */;
  %2849 = transpose(%2847, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.29/self_attn/MatMul_1:0:0 */;
  %2850 = nn.batch_matmul(%2848, %2849, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.29/self_attn/MatMul_1:0:0 */;
  %2851 = reshape(%2850, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.29/self_attn/MatMul_1:0:0 */;
  %2852 = transpose(%2851, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.29/self_attn/Transpose_4:0:0 */;
  %2853 = reshape(%2852, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/self_attn/Reshape_5:0:0 */;
  %2854 = reshape(%2853, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/o_proj/MatMul:0:0 */;
  %2855 = transpose(%onnx::MatMul_10132, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.29/self_attn/o_proj/MatMul:0:0 */;
  %2856 = nn.dense(%2854, %2855, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/self_attn/o_proj/MatMul:0:0 */;
  %2857 = reshape(%2856, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/self_attn/o_proj/MatMul:0:0 */;
  %2858 = add(%2788, %2857) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/Add:0:0 */;
  %2859 = cast(%2858, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/post_attention_layernorm/Cast:0:0 */;
  %2860 = power(%2859, 2f /* ty=float32 span=/model/layers.29/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/post_attention_layernorm/Pow:0:0 */;
  %2861 = mean(%2860, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/post_attention_layernorm/ReduceMean:0:0 */;
  %2862 = add(%2861, 1e-05f /* ty=float32 span=/model/layers.29/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/post_attention_layernorm/Add:0:0 */;
  %2863 = sqrt(%2862) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/post_attention_layernorm/Sqrt:0:0 */;
  %2864 = divide(1f /* ty=float32 span=/model/layers.29/post_attention_layernorm/Constant_2:0:0 */, %2863) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.29/post_attention_layernorm/Div:0:0 */;
  %2865 = multiply(%2859, %2864) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/post_attention_layernorm/Mul:0:0 */;
  %2866 = cast(%2865, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/post_attention_layernorm/Cast_1:0:0 */;
  %2867 = multiply(%model.layers.29.post_attention_layernorm.weight, %2866) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/post_attention_layernorm/Mul_1:0:0 */;
  %2868 = reshape(%2867, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/mlp/gate_proj/MatMul:0:0 */;
  %2869 = transpose(%onnx::MatMul_10133, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.29/mlp/gate_proj/MatMul:0:0 */;
  %2870 = nn.dense(%2868, %2869, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.29/mlp/gate_proj/MatMul:0:0 */;
  %2871 = reshape(%2870, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.29/mlp/gate_proj/MatMul:0:0 */;
  %2872 = sigmoid(%2871) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.29/mlp/act_fn/Sigmoid:0:0 */;
  %2873 = reshape(%2867, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/mlp/up_proj/MatMul:0:0 */;
  %2874 = transpose(%onnx::MatMul_10134, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.29/mlp/up_proj/MatMul:0:0 */;
  %2875 = nn.dense(%2873, %2874, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.29/mlp/up_proj/MatMul:0:0 */;
  %2876 = multiply(%2871, %2872) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.29/mlp/act_fn/Mul:0:0 */;
  %2877 = reshape(%2875, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.29/mlp/up_proj/MatMul:0:0 */;
  %2878 = multiply(%2876, %2877) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.29/mlp/Mul:0:0 */;
  %2879 = reshape(%2878, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.29/mlp/down_proj/MatMul:0:0 */;
  %2880 = transpose(%onnx::MatMul_10135, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.29/mlp/down_proj/MatMul:0:0 */;
  %2881 = nn.dense(%2879, %2880, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.29/mlp/down_proj/MatMul:0:0 */;
  %2882 = reshape(%2881, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/mlp/down_proj/MatMul:0:0 */;
  %2883 = add(%2859, %2882) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.29/Add_1:0:0 */;
  %2884 = cast(%2883, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/input_layernorm/Cast:0:0 */;
  %2885 = power(%2884, 2f /* ty=float32 span=/model/layers.30/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/input_layernorm/Pow:0:0 */;
  %2886 = mean(%2885, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/input_layernorm/ReduceMean:0:0 */;
  %2887 = add(%2886, 1e-05f /* ty=float32 span=/model/layers.30/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/input_layernorm/Add:0:0 */;
  %2888 = sqrt(%2887) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/input_layernorm/Sqrt:0:0 */;
  %2889 = divide(1f /* ty=float32 span=/model/layers.30/input_layernorm/Constant_2:0:0 */, %2888) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/input_layernorm/Div:0:0 */;
  %2890 = multiply(%2884, %2889) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/input_layernorm/Mul:0:0 */;
  %2891 = cast(%2890, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/input_layernorm/Cast_1:0:0 */;
  %2892 = multiply(%model.layers.30.input_layernorm.weight, %2891) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/input_layernorm/Mul_1:0:0 */;
  %2893 = reshape(%2892, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/q_proj/MatMul:0:0 */;
  %2894 = transpose(%onnx::MatMul_10136, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.30/self_attn/q_proj/MatMul:0:0 */;
  %2895 = nn.dense(%2893, %2894, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/q_proj/MatMul:0:0 */;
  %2896 = reshape(%2895, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/self_attn/q_proj/MatMul:0:0 */;
  %2897 = reshape(%2896, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.30/self_attn/Reshape:0:0 */;
  %2898 = transpose(%2897, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Transpose:0:0 */;
  %2899 = strided_slice(%2898, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.30/self_attn/Slice_1:0:0 */;
  %2900 = negative(%2899) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.30/self_attn/Neg:0:0 */;
  %2901 = strided_slice(%2898, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.30/self_attn/Slice:0:0 */;
  %2902 = (%2900, %2901) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.30/self_attn/Concat:0:0 */;
  %2903 = concatenate(%2902, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Concat:0:0 */;
  %2904 = multiply(%2898, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Mul:0:0 */;
  %2905 = multiply(%2903, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Mul_1:0:0 */;
  %2906 = add(%2904, %2905) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Add:0:0 */;
  %2907 = multiply(%2906, meta[relay.Constant][92] /* ty=Tensor[(1), float32] span=/model/layers.30/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Mul_6:0:0 */;
  %2908 = reshape(%2892, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/k_proj/MatMul:0:0 */;
  %2909 = transpose(%onnx::MatMul_10137, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.30/self_attn/k_proj/MatMul:0:0 */;
  %2910 = nn.dense(%2908, %2909, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.30/self_attn/k_proj/MatMul:0:0 */;
  %2911 = reshape(%2910, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.30/self_attn/k_proj/MatMul:0:0 */;
  %2912 = reshape(%2911, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.30/self_attn/Reshape_1:0:0 */;
  %2913 = transpose(%2912, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Transpose_1:0:0 */;
  %2914 = strided_slice(%2913, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.30/self_attn/Slice_3:0:0 */;
  %2915 = negative(%2914) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.30/self_attn/Neg_1:0:0 */;
  %2916 = strided_slice(%2913, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.30/self_attn/Slice_2:0:0 */;
  %2917 = (%2915, %2916) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.30/self_attn/Concat_1:0:0 */;
  %2918 = concatenate(%2917, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Concat_1:0:0 */;
  %2919 = multiply(%2913, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Mul_2:0:0 */;
  %2920 = multiply(%2918, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Mul_3:0:0 */;
  %2921 = add(%2919, %2920) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Add_1:0:0 */;
  %2922 = expand_dims(%2921, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.30/self_attn/Unsqueeze:0:0 */;
  %2923 = broadcast_to(%2922, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.30/self_attn/Expand:0:0 */;
  %2924 = reshape(%2923, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Reshape_3:0:0 */;
  %2925 = transpose(%2924, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.30/self_attn/Transpose_3:0:0 */;
  %2926 = multiply(%2925, meta[relay.Constant][93] /* ty=Tensor[(1), float32] span=/model/layers.30/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.30/self_attn/Mul_7:0:0 */;
  %2927 = reshape(%2926, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.30/self_attn/MatMul:0:0 */;
  %2928 = reshape(%2907, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.30/self_attn/MatMul:0:0 */;
  %2929 = transpose(%2927, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.30/self_attn/MatMul:0:0 */;
  %2930 = nn.batch_matmul(%2928, %2929, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.30/self_attn/MatMul:0:0 */;
  %2931 = reshape(%2930, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.30/self_attn/MatMul:0:0 */;
  %2932 = add(%2931, meta[relay.Constant][94] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.30/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.30/self_attn/Add_2:0:0 */;
  %2933 = nn.softmax(%2932, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.30/self_attn/Softmax:0:0 */;
  %2934 = reshape(%2892, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/v_proj/MatMul:0:0 */;
  %2935 = transpose(%onnx::MatMul_10138, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.30/self_attn/v_proj/MatMul:0:0 */;
  %2936 = nn.dense(%2934, %2935, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.30/self_attn/v_proj/MatMul:0:0 */;
  %2937 = reshape(%2936, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.30/self_attn/v_proj/MatMul:0:0 */;
  %2938 = reshape(%2937, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.30/self_attn/Reshape_2:0:0 */;
  %2939 = transpose(%2938, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.30/self_attn/Transpose_2:0:0 */;
  %2940 = expand_dims(%2939, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.30/self_attn/Unsqueeze_1:0:0 */;
  %2941 = broadcast_to(%2940, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.30/self_attn/Expand_1:0:0 */;
  %2942 = reshape(%2941, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/Reshape_4:0:0 */;
  %2943 = reshape(%2942, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.30/self_attn/MatMul_1:0:0 */;
  %2944 = reshape(%2933, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.30/self_attn/MatMul_1:0:0 */;
  %2945 = transpose(%2943, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.30/self_attn/MatMul_1:0:0 */;
  %2946 = nn.batch_matmul(%2944, %2945, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.30/self_attn/MatMul_1:0:0 */;
  %2947 = reshape(%2946, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.30/self_attn/MatMul_1:0:0 */;
  %2948 = transpose(%2947, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.30/self_attn/Transpose_4:0:0 */;
  %2949 = reshape(%2948, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/self_attn/Reshape_5:0:0 */;
  %2950 = reshape(%2949, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/o_proj/MatMul:0:0 */;
  %2951 = transpose(%onnx::MatMul_10204, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.30/self_attn/o_proj/MatMul:0:0 */;
  %2952 = nn.dense(%2950, %2951, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/self_attn/o_proj/MatMul:0:0 */;
  %2953 = reshape(%2952, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/self_attn/o_proj/MatMul:0:0 */;
  %2954 = add(%2884, %2953) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/Add:0:0 */;
  %2955 = cast(%2954, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/post_attention_layernorm/Cast:0:0 */;
  %2956 = power(%2955, 2f /* ty=float32 span=/model/layers.30/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/post_attention_layernorm/Pow:0:0 */;
  %2957 = mean(%2956, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/post_attention_layernorm/ReduceMean:0:0 */;
  %2958 = add(%2957, 1e-05f /* ty=float32 span=/model/layers.30/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/post_attention_layernorm/Add:0:0 */;
  %2959 = sqrt(%2958) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/post_attention_layernorm/Sqrt:0:0 */;
  %2960 = divide(1f /* ty=float32 span=/model/layers.30/post_attention_layernorm/Constant_2:0:0 */, %2959) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.30/post_attention_layernorm/Div:0:0 */;
  %2961 = multiply(%2955, %2960) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/post_attention_layernorm/Mul:0:0 */;
  %2962 = cast(%2961, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/post_attention_layernorm/Cast_1:0:0 */;
  %2963 = multiply(%model.layers.30.post_attention_layernorm.weight, %2962) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/post_attention_layernorm/Mul_1:0:0 */;
  %2964 = reshape(%2963, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/mlp/gate_proj/MatMul:0:0 */;
  %2965 = transpose(%onnx::MatMul_10205, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.30/mlp/gate_proj/MatMul:0:0 */;
  %2966 = nn.dense(%2964, %2965, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.30/mlp/gate_proj/MatMul:0:0 */;
  %2967 = reshape(%2966, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.30/mlp/gate_proj/MatMul:0:0 */;
  %2968 = sigmoid(%2967) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.30/mlp/act_fn/Sigmoid:0:0 */;
  %2969 = reshape(%2963, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/mlp/up_proj/MatMul:0:0 */;
  %2970 = transpose(%onnx::MatMul_10206, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.30/mlp/up_proj/MatMul:0:0 */;
  %2971 = nn.dense(%2969, %2970, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.30/mlp/up_proj/MatMul:0:0 */;
  %2972 = multiply(%2967, %2968) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.30/mlp/act_fn/Mul:0:0 */;
  %2973 = reshape(%2971, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.30/mlp/up_proj/MatMul:0:0 */;
  %2974 = multiply(%2972, %2973) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.30/mlp/Mul:0:0 */;
  %2975 = reshape(%2974, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.30/mlp/down_proj/MatMul:0:0 */;
  %2976 = transpose(%onnx::MatMul_10207, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.30/mlp/down_proj/MatMul:0:0 */;
  %2977 = nn.dense(%2975, %2976, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.30/mlp/down_proj/MatMul:0:0 */;
  %2978 = reshape(%2977, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/mlp/down_proj/MatMul:0:0 */;
  %2979 = add(%2955, %2978) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.30/Add_1:0:0 */;
  %2980 = cast(%2979, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/input_layernorm/Cast:0:0 */;
  %2981 = power(%2980, 2f /* ty=float32 span=/model/layers.31/input_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/input_layernorm/Pow:0:0 */;
  %2982 = mean(%2981, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/input_layernorm/ReduceMean:0:0 */;
  %2983 = add(%2982, 1e-05f /* ty=float32 span=/model/layers.31/input_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/input_layernorm/Add:0:0 */;
  %2984 = sqrt(%2983) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/input_layernorm/Sqrt:0:0 */;
  %2985 = divide(1f /* ty=float32 span=/model/layers.31/input_layernorm/Constant_2:0:0 */, %2984) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/input_layernorm/Div:0:0 */;
  %2986 = multiply(%2980, %2985) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/input_layernorm/Mul:0:0 */;
  %2987 = cast(%2986, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/input_layernorm/Cast_1:0:0 */;
  %2988 = multiply(%model.layers.31.input_layernorm.weight, %2987) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/input_layernorm/Mul_1:0:0 */;
  %2989 = reshape(%2988, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/q_proj/MatMul:0:0 */;
  %2990 = transpose(%onnx::MatMul_10208, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.31/self_attn/q_proj/MatMul:0:0 */;
  %2991 = nn.dense(%2989, %2990, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/q_proj/MatMul:0:0 */;
  %2992 = reshape(%2991, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/self_attn/q_proj/MatMul:0:0 */;
  %2993 = reshape(%2992, newshape=[1, 512, 32, 128]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.31/self_attn/Reshape:0:0 */;
  %2994 = transpose(%2993, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Transpose:0:0 */;
  %2995 = strided_slice(%2994, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.31/self_attn/Slice_1:0:0 */;
  %2996 = negative(%2995) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.31/self_attn/Neg:0:0 */;
  %2997 = strided_slice(%2994, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 32, 512, 64), float32] span=/model/layers.31/self_attn/Slice:0:0 */;
  %2998 = (%2996, %2997) /* ty=(Tensor[(1, 32, 512, 64), float32], Tensor[(1, 32, 512, 64), float32]) span=/model/layers.31/self_attn/Concat:0:0 */;
  %2999 = concatenate(%2998, axis=-1) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Concat:0:0 */;
  %3000 = multiply(%2994, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Mul:0:0 */;
  %3001 = multiply(%2999, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Mul_1:0:0 */;
  %3002 = add(%3000, %3001) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Add:0:0 */;
  %3003 = multiply(%3002, meta[relay.Constant][95] /* ty=Tensor[(1), float32] span=/model/layers.31/self_attn/Sqrt_1:0:0 */) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Mul_6:0:0 */;
  %3004 = reshape(%2988, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/k_proj/MatMul:0:0 */;
  %3005 = transpose(%onnx::MatMul_10209, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.31/self_attn/k_proj/MatMul:0:0 */;
  %3006 = nn.dense(%3004, %3005, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.31/self_attn/k_proj/MatMul:0:0 */;
  %3007 = reshape(%3006, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.31/self_attn/k_proj/MatMul:0:0 */;
  %3008 = reshape(%3007, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.31/self_attn/Reshape_1:0:0 */;
  %3009 = transpose(%3008, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Transpose_1:0:0 */;
  %3010 = strided_slice(%3009, begin=[64i64], end=[9223372036854775807i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.31/self_attn/Slice_3:0:0 */;
  %3011 = negative(%3010) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.31/self_attn/Neg_1:0:0 */;
  %3012 = strided_slice(%3009, begin=[0i64], end=[64i64], strides=[1i64], axes=[3i64]) /* ty=Tensor[(1, 8, 512, 64), float32] span=/model/layers.31/self_attn/Slice_2:0:0 */;
  %3013 = (%3011, %3012) /* ty=(Tensor[(1, 8, 512, 64), float32], Tensor[(1, 8, 512, 64), float32]) span=/model/layers.31/self_attn/Concat_1:0:0 */;
  %3014 = concatenate(%3013, axis=-1) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Concat_1:0:0 */;
  %3015 = multiply(%3009, meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Mul_2:0:0 */;
  %3016 = multiply(%3014, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 512, 128), float32] span=/model/layers.0/self_attn/Unsqueeze_1:0:0 */) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Mul_3:0:0 */;
  %3017 = add(%3015, %3016) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Add_1:0:0 */;
  %3018 = expand_dims(%3017, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.31/self_attn/Unsqueeze:0:0 */;
  %3019 = broadcast_to(%3018, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.31/self_attn/Expand:0:0 */;
  %3020 = reshape(%3019, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Reshape_3:0:0 */;
  %3021 = transpose(%3020, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.31/self_attn/Transpose_3:0:0 */;
  %3022 = multiply(%3021, meta[relay.Constant][96] /* ty=Tensor[(1), float32] span=/model/layers.31/self_attn/Sqrt_2:0:0 */) /* ty=Tensor[(1, 32, 128, 512), float32] span=/model/layers.31/self_attn/Mul_7:0:0 */;
  %3023 = reshape(%3022, newshape=[-1, 128, 512]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.31/self_attn/MatMul:0:0 */;
  %3024 = reshape(%3003, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.31/self_attn/MatMul:0:0 */;
  %3025 = transpose(%3023, axes=[0, 2, 1]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.31/self_attn/MatMul:0:0 */;
  %3026 = nn.batch_matmul(%3024, %3025, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.31/self_attn/MatMul:0:0 */;
  %3027 = reshape(%3026, newshape=[1, 32, 512, 512]) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.31/self_attn/MatMul:0:0 */;
  %3028 = add(%3027, meta[relay.Constant][97] /* ty=Tensor[(1, 1, 512, 512), float32] span=/model/layers.31/self_attn/Slice_4:0:0 */) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.31/self_attn/Add_2:0:0 */;
  %3029 = nn.softmax(%3028, axis=3) /* ty=Tensor[(1, 32, 512, 512), float32] span=/model/layers.31/self_attn/Softmax:0:0 */;
  %3030 = reshape(%2988, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/v_proj/MatMul:0:0 */;
  %3031 = transpose(%onnx::MatMul_10210, axes=None) /* ty=Tensor[(1024, 4096), float32] span=/model/layers.31/self_attn/v_proj/MatMul:0:0 */;
  %3032 = nn.dense(%3030, %3031, units=None, out_dtype="float32") /* ty=Tensor[(512, 1024), float32] span=/model/layers.31/self_attn/v_proj/MatMul:0:0 */;
  %3033 = reshape(%3032, newshape=[1, 512, 1024]) /* ty=Tensor[(1, 512, 1024), float32] span=/model/layers.31/self_attn/v_proj/MatMul:0:0 */;
  %3034 = reshape(%3033, newshape=[1, 512, 8, 128]) /* ty=Tensor[(1, 512, 8, 128), float32] span=/model/layers.31/self_attn/Reshape_2:0:0 */;
  %3035 = transpose(%3034, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 8, 512, 128), float32] span=/model/layers.31/self_attn/Transpose_2:0:0 */;
  %3036 = expand_dims(%3035, axis=2) /* ty=Tensor[(1, 8, 1, 512, 128), float32] span=/model/layers.31/self_attn/Unsqueeze_1:0:0 */;
  %3037 = broadcast_to(%3036, shape=[1i64, 8i64, 4i64, 512i64, 128i64]) /* ty=Tensor[(1i64, 8i64, 4i64, 512i64, 128i64), float32] span=/model/layers.31/self_attn/Expand_1:0:0 */;
  %3038 = reshape(%3037, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/Reshape_4:0:0 */;
  %3039 = reshape(%3038, newshape=[-1, 512, 128]) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.31/self_attn/MatMul_1:0:0 */;
  %3040 = reshape(%3029, newshape=[-1, 512, 512]) /* ty=Tensor[(32, 512, 512), float32] span=/model/layers.31/self_attn/MatMul_1:0:0 */;
  %3041 = transpose(%3039, axes=[0, 2, 1]) /* ty=Tensor[(32, 128, 512), float32] span=/model/layers.31/self_attn/MatMul_1:0:0 */;
  %3042 = nn.batch_matmul(%3040, %3041, out_dtype="float32", transpose_b=True) /* ty=Tensor[(32, 512, 128), float32] span=/model/layers.31/self_attn/MatMul_1:0:0 */;
  %3043 = reshape(%3042, newshape=[1, 32, 512, 128]) /* ty=Tensor[(1, 32, 512, 128), float32] span=/model/layers.31/self_attn/MatMul_1:0:0 */;
  %3044 = transpose(%3043, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 512, 32, 128), float32] span=/model/layers.31/self_attn/Transpose_4:0:0 */;
  %3045 = reshape(%3044, newshape=[1, 512, -1]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/self_attn/Reshape_5:0:0 */;
  %3046 = reshape(%3045, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/o_proj/MatMul:0:0 */;
  %3047 = transpose(%onnx::MatMul_10276, axes=None) /* ty=Tensor[(4096, 4096), float32] span=/model/layers.31/self_attn/o_proj/MatMul:0:0 */;
  %3048 = nn.dense(%3046, %3047, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/self_attn/o_proj/MatMul:0:0 */;
  %3049 = reshape(%3048, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/self_attn/o_proj/MatMul:0:0 */;
  %3050 = add(%2980, %3049) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/Add:0:0 */;
  %3051 = cast(%3050, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/post_attention_layernorm/Cast:0:0 */;
  %3052 = power(%3051, 2f /* ty=float32 span=/model/layers.31/post_attention_layernorm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/post_attention_layernorm/Pow:0:0 */;
  %3053 = mean(%3052, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/post_attention_layernorm/ReduceMean:0:0 */;
  %3054 = add(%3053, 1e-05f /* ty=float32 span=/model/layers.31/post_attention_layernorm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/post_attention_layernorm/Add:0:0 */;
  %3055 = sqrt(%3054) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/post_attention_layernorm/Sqrt:0:0 */;
  %3056 = divide(1f /* ty=float32 span=/model/layers.31/post_attention_layernorm/Constant_2:0:0 */, %3055) /* ty=Tensor[(1, 512, 1), float32] span=/model/layers.31/post_attention_layernorm/Div:0:0 */;
  %3057 = multiply(%3051, %3056) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/post_attention_layernorm/Mul:0:0 */;
  %3058 = cast(%3057, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/post_attention_layernorm/Cast_1:0:0 */;
  %3059 = multiply(%model.layers.31.post_attention_layernorm.weight, %3058) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/post_attention_layernorm/Mul_1:0:0 */;
  %3060 = reshape(%3059, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/mlp/gate_proj/MatMul:0:0 */;
  %3061 = transpose(%onnx::MatMul_10277, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.31/mlp/gate_proj/MatMul:0:0 */;
  %3062 = nn.dense(%3060, %3061, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.31/mlp/gate_proj/MatMul:0:0 */;
  %3063 = reshape(%3062, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.31/mlp/gate_proj/MatMul:0:0 */;
  %3064 = sigmoid(%3063) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.31/mlp/act_fn/Sigmoid:0:0 */;
  %3065 = reshape(%3059, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/mlp/up_proj/MatMul:0:0 */;
  %3066 = transpose(%onnx::MatMul_10278, axes=None) /* ty=Tensor[(14336, 4096), float32] span=/model/layers.31/mlp/up_proj/MatMul:0:0 */;
  %3067 = nn.dense(%3065, %3066, units=None, out_dtype="float32") /* ty=Tensor[(512, 14336), float32] span=/model/layers.31/mlp/up_proj/MatMul:0:0 */;
  %3068 = multiply(%3063, %3064) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.31/mlp/act_fn/Mul:0:0 */;
  %3069 = reshape(%3067, newshape=[1, 512, 14336]) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.31/mlp/up_proj/MatMul:0:0 */;
  %3070 = multiply(%3068, %3069) /* ty=Tensor[(1, 512, 14336), float32] span=/model/layers.31/mlp/Mul:0:0 */;
  %3071 = reshape(%3070, newshape=[-1, 14336]) /* ty=Tensor[(512, 14336), float32] span=/model/layers.31/mlp/down_proj/MatMul:0:0 */;
  %3072 = transpose(%onnx::MatMul_10279, axes=None) /* ty=Tensor[(4096, 14336), float32] span=/model/layers.31/mlp/down_proj/MatMul:0:0 */;
  %3073 = nn.dense(%3071, %3072, units=None, out_dtype="float32") /* ty=Tensor[(512, 4096), float32] span=/model/layers.31/mlp/down_proj/MatMul:0:0 */;
  %3074 = reshape(%3073, newshape=[1, 512, 4096]) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/mlp/down_proj/MatMul:0:0 */;
  %3075 = add(%3051, %3074) /* ty=Tensor[(1, 512, 4096), float32] span=/model/layers.31/Add_1:0:0 */;
  %3076 = cast(%3075, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/norm/Cast:0:0 */;
  %3077 = power(%3076, 2f /* ty=float32 span=/model/norm/Constant:0:0 */) /* ty=Tensor[(1, 512, 4096), float32] span=/model/norm/Pow:0:0 */;
  %3078 = mean(%3077, axis=[-1], keepdims=True) /* ty=Tensor[(1, 512, 1), float32] span=/model/norm/ReduceMean:0:0 */;
  %3079 = add(%3078, 1e-05f /* ty=float32 span=/model/norm/Constant_1:0:0 */) /* ty=Tensor[(1, 512, 1), float32] span=/model/norm/Add:0:0 */;
  %3080 = sqrt(%3079) /* ty=Tensor[(1, 512, 1), float32] span=/model/norm/Sqrt:0:0 */;
  %3081 = divide(1f /* ty=float32 span=/model/norm/Constant_2:0:0 */, %3080) /* ty=Tensor[(1, 512, 1), float32] span=/model/norm/Div:0:0 */;
  %3082 = multiply(%3076, %3081) /* ty=Tensor[(1, 512, 4096), float32] span=/model/norm/Mul:0:0 */;
  %3083 = cast(%3082, dtype="float32") /* ty=Tensor[(1, 512, 4096), float32] span=/model/norm/Cast_1:0:0 */;
  %3084 = multiply(%model.norm.weight, %3083) /* ty=Tensor[(1, 512, 4096), float32] span=/model/norm/Mul_1:0:0 */;
  %3085 = reshape(%3084, newshape=[-1, 4096]) /* ty=Tensor[(512, 4096), float32] span=/lm_head/MatMul:0:0 */;
  %3086 = transpose(%onnx::MatMul_10280, axes=None) /* ty=Tensor[(128256, 4096), float32] span=/lm_head/MatMul:0:0 */;
  %3087 = nn.dense(%3085, %3086, units=None, out_dtype="float32") /* ty=Tensor[(512, 128256), float32] span=/lm_head/MatMul:0:0 */;
  %3088 = reshape(%3087, newshape=[1, 512, 128256]) /* ty=Tensor[(1, 512, 128256), float32] span=/lm_head/MatMul:0:0 */;
  %3089 = cast(%3088, dtype="float32") /* ty=Tensor[(1, 512, 128256), float32] span=/Cast:0:0 */;
  (%3089, %41, %59, %137, %155, %233, %251, %329, %347, %425, %443, %521, %539, %617, %635, %713, %731, %809, %827, %905, %923, %1001, %1019, %1097, %1115, %1193, %1211, %1289, %1307, %1385, %1403, %1481, %1499, %1577, %1595, %1673, %1691, %1769, %1787, %1865, %1883, %1961, %1979, %2057, %2075, %2153, %2171, %2249, %2267, %2345, %2363, %2441, %2459, %2537, %2555, %2633, %2651, %2729, %2747, %2825, %2843, %2921, %2939, %3017, %3035) /* ty=(Tensor[(1, 512, 128256), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32], Tensor[(1, 8, 512, 128), float32]) */
}

